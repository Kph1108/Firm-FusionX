

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 13:33:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F18325 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0097                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  018C                     	;# 
   138  018E                     	;# 
   139  0197                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020E                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021D                     	;# 
   189  021E                     	;# 
   190  021F                     	;# 
   191  028C                     	;# 
   192  028E                     	;# 
   193  0291                     	;# 
   194  0291                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0294                     	;# 
   198  0295                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0297                     	;# 
   202  0298                     	;# 
   203  029F                     	;# 
   204  030C                     	;# 
   205  030E                     	;# 
   206  0311                     	;# 
   207  0311                     	;# 
   208  0312                     	;# 
   209  0313                     	;# 
   210  0314                     	;# 
   211  0315                     	;# 
   212  0315                     	;# 
   213  0316                     	;# 
   214  0317                     	;# 
   215  0318                     	;# 
   216  038C                     	;# 
   217  038E                     	;# 
   218  0391                     	;# 
   219  0392                     	;# 
   220  0393                     	;# 
   221  0397                     	;# 
   222  0398                     	;# 
   223  0399                     	;# 
   224  039A                     	;# 
   225  039C                     	;# 
   226  039D                     	;# 
   227  039E                     	;# 
   228  039F                     	;# 
   229  0411                     	;# 
   230  0411                     	;# 
   231  0412                     	;# 
   232  0413                     	;# 
   233  0414                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  0418                     	;# 
   238  0418                     	;# 
   239  0419                     	;# 
   240  041A                     	;# 
   241  041B                     	;# 
   242  041C                     	;# 
   243  041D                     	;# 
   244  041E                     	;# 
   245  041F                     	;# 
   246  0498                     	;# 
   247  0498                     	;# 
   248  0499                     	;# 
   249  049A                     	;# 
   250  049B                     	;# 
   251  049B                     	;# 
   252  049C                     	;# 
   253  049D                     	;# 
   254  049E                     	;# 
   255  049F                     	;# 
   256  0617                     	;# 
   257  0618                     	;# 
   258  0619                     	;# 
   259  0619                     	;# 
   260  061A                     	;# 
   261  061B                     	;# 
   262  061C                     	;# 
   263  061C                     	;# 
   264  061F                     	;# 
   265  0691                     	;# 
   266  0692                     	;# 
   267  0693                     	;# 
   268  0694                     	;# 
   269  0695                     	;# 
   270  0696                     	;# 
   271  0697                     	;# 
   272  0698                     	;# 
   273  0699                     	;# 
   274  0711                     	;# 
   275  0712                     	;# 
   276  0713                     	;# 
   277  0714                     	;# 
   278  0715                     	;# 
   279  0716                     	;# 
   280  0717                     	;# 
   281  0718                     	;# 
   282  0719                     	;# 
   283  0891                     	;# 
   284  0891                     	;# 
   285  0891                     	;# 
   286  0891                     	;# 
   287  0891                     	;# 
   288  0891                     	;# 
   289  0892                     	;# 
   290  0892                     	;# 
   291  0892                     	;# 
   292  0893                     	;# 
   293  0893                     	;# 
   294  0893                     	;# 
   295  0893                     	;# 
   296  0893                     	;# 
   297  0893                     	;# 
   298  0894                     	;# 
   299  0894                     	;# 
   300  0894                     	;# 
   301  0895                     	;# 
   302  0895                     	;# 
   303  0895                     	;# 
   304  0896                     	;# 
   305  0896                     	;# 
   306  0896                     	;# 
   307  089B                     	;# 
   308  0911                     	;# 
   309  0912                     	;# 
   310  0913                     	;# 
   311  0914                     	;# 
   312  0915                     	;# 
   313  0916                     	;# 
   314  0918                     	;# 
   315  0919                     	;# 
   316  091A                     	;# 
   317  091B                     	;# 
   318  091C                     	;# 
   319  091D                     	;# 
   320  091E                     	;# 
   321  091F                     	;# 
   322  0E0F                     	;# 
   323  0E10                     	;# 
   324  0E11                     	;# 
   325  0E12                     	;# 
   326  0E13                     	;# 
   327  0E14                     	;# 
   328  0E15                     	;# 
   329  0E16                     	;# 
   330  0E17                     	;# 
   331  0E18                     	;# 
   332  0E19                     	;# 
   333  0E1A                     	;# 
   334  0E1B                     	;# 
   335  0E1C                     	;# 
   336  0E1D                     	;# 
   337  0E1E                     	;# 
   338  0E1F                     	;# 
   339  0E20                     	;# 
   340  0E21                     	;# 
   341  0E22                     	;# 
   342  0E24                     	;# 
   343  0E25                     	;# 
   344  0E28                     	;# 
   345  0E29                     	;# 
   346  0E2A                     	;# 
   347  0E2B                     	;# 
   348  0E2C                     	;# 
   349  0E2D                     	;# 
   350  0E2E                     	;# 
   351  0E2F                     	;# 
   352  0E90                     	;# 
   353  0E91                     	;# 
   354  0E92                     	;# 
   355  0E94                     	;# 
   356  0E95                     	;# 
   357  0EA0                     	;# 
   358  0EA1                     	;# 
   359  0EA2                     	;# 
   360  0EA3                     	;# 
   361  0EA4                     	;# 
   362  0EA5                     	;# 
   363  0F0F                     	;# 
   364  0F10                     	;# 
   365  0F11                     	;# 
   366  0F12                     	;# 
   367  0F13                     	;# 
   368  0F14                     	;# 
   369  0F15                     	;# 
   370  0F16                     	;# 
   371  0F17                     	;# 
   372  0F18                     	;# 
   373  0F19                     	;# 
   374  0F1A                     	;# 
   375  0F1B                     	;# 
   376  0F1C                     	;# 
   377  0F1D                     	;# 
   378  0F1E                     	;# 
   379  0F1F                     	;# 
   380  0F20                     	;# 
   381  0F21                     	;# 
   382  0F22                     	;# 
   383  0F23                     	;# 
   384  0F24                     	;# 
   385  0F25                     	;# 
   386  0F26                     	;# 
   387  0F27                     	;# 
   388  0F28                     	;# 
   389  0F29                     	;# 
   390  0F2A                     	;# 
   391  0F2B                     	;# 
   392  0F2C                     	;# 
   393  0F2D                     	;# 
   394  0F2E                     	;# 
   395  0F2F                     	;# 
   396  0F30                     	;# 
   397  0F31                     	;# 
   398  0F32                     	;# 
   399  0F33                     	;# 
   400  0F34                     	;# 
   401  0F35                     	;# 
   402  0F36                     	;# 
   403  0F37                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000E                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  008C                     	;# 
   449  008E                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0097                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  009F                     	;# 
   462  010C                     	;# 
   463  010E                     	;# 
   464  0111                     	;# 
   465  0112                     	;# 
   466  0113                     	;# 
   467  0114                     	;# 
   468  0115                     	;# 
   469  0116                     	;# 
   470  0117                     	;# 
   471  0118                     	;# 
   472  0119                     	;# 
   473  018C                     	;# 
   474  018E                     	;# 
   475  0197                     	;# 
   476  0199                     	;# 
   477  0199                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019A                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019C                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019D                     	;# 
   492  019D                     	;# 
   493  019E                     	;# 
   494  019E                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  019F                     	;# 
   498  019F                     	;# 
   499  019F                     	;# 
   500  019F                     	;# 
   501  020C                     	;# 
   502  020E                     	;# 
   503  0211                     	;# 
   504  0211                     	;# 
   505  0212                     	;# 
   506  0212                     	;# 
   507  0213                     	;# 
   508  0213                     	;# 
   509  0214                     	;# 
   510  0214                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0216                     	;# 
   516  0216                     	;# 
   517  0217                     	;# 
   518  0217                     	;# 
   519  0219                     	;# 
   520  021A                     	;# 
   521  021B                     	;# 
   522  021C                     	;# 
   523  021D                     	;# 
   524  021D                     	;# 
   525  021E                     	;# 
   526  021F                     	;# 
   527  028C                     	;# 
   528  028E                     	;# 
   529  0291                     	;# 
   530  0291                     	;# 
   531  0292                     	;# 
   532  0293                     	;# 
   533  0294                     	;# 
   534  0295                     	;# 
   535  0295                     	;# 
   536  0296                     	;# 
   537  0297                     	;# 
   538  0298                     	;# 
   539  029F                     	;# 
   540  030C                     	;# 
   541  030E                     	;# 
   542  0311                     	;# 
   543  0311                     	;# 
   544  0312                     	;# 
   545  0313                     	;# 
   546  0314                     	;# 
   547  0315                     	;# 
   548  0315                     	;# 
   549  0316                     	;# 
   550  0317                     	;# 
   551  0318                     	;# 
   552  038C                     	;# 
   553  038E                     	;# 
   554  0391                     	;# 
   555  0392                     	;# 
   556  0393                     	;# 
   557  0397                     	;# 
   558  0398                     	;# 
   559  0399                     	;# 
   560  039A                     	;# 
   561  039C                     	;# 
   562  039D                     	;# 
   563  039E                     	;# 
   564  039F                     	;# 
   565  0411                     	;# 
   566  0411                     	;# 
   567  0412                     	;# 
   568  0413                     	;# 
   569  0414                     	;# 
   570  0415                     	;# 
   571  0416                     	;# 
   572  0417                     	;# 
   573  0418                     	;# 
   574  0418                     	;# 
   575  0419                     	;# 
   576  041A                     	;# 
   577  041B                     	;# 
   578  041C                     	;# 
   579  041D                     	;# 
   580  041E                     	;# 
   581  041F                     	;# 
   582  0498                     	;# 
   583  0498                     	;# 
   584  0499                     	;# 
   585  049A                     	;# 
   586  049B                     	;# 
   587  049B                     	;# 
   588  049C                     	;# 
   589  049D                     	;# 
   590  049E                     	;# 
   591  049F                     	;# 
   592  0617                     	;# 
   593  0618                     	;# 
   594  0619                     	;# 
   595  0619                     	;# 
   596  061A                     	;# 
   597  061B                     	;# 
   598  061C                     	;# 
   599  061C                     	;# 
   600  061F                     	;# 
   601  0691                     	;# 
   602  0692                     	;# 
   603  0693                     	;# 
   604  0694                     	;# 
   605  0695                     	;# 
   606  0696                     	;# 
   607  0697                     	;# 
   608  0698                     	;# 
   609  0699                     	;# 
   610  0711                     	;# 
   611  0712                     	;# 
   612  0713                     	;# 
   613  0714                     	;# 
   614  0715                     	;# 
   615  0716                     	;# 
   616  0717                     	;# 
   617  0718                     	;# 
   618  0719                     	;# 
   619  0891                     	;# 
   620  0891                     	;# 
   621  0891                     	;# 
   622  0891                     	;# 
   623  0891                     	;# 
   624  0891                     	;# 
   625  0892                     	;# 
   626  0892                     	;# 
   627  0892                     	;# 
   628  0893                     	;# 
   629  0893                     	;# 
   630  0893                     	;# 
   631  0893                     	;# 
   632  0893                     	;# 
   633  0893                     	;# 
   634  0894                     	;# 
   635  0894                     	;# 
   636  0894                     	;# 
   637  0895                     	;# 
   638  0895                     	;# 
   639  0895                     	;# 
   640  0896                     	;# 
   641  0896                     	;# 
   642  0896                     	;# 
   643  089B                     	;# 
   644  0911                     	;# 
   645  0912                     	;# 
   646  0913                     	;# 
   647  0914                     	;# 
   648  0915                     	;# 
   649  0916                     	;# 
   650  0918                     	;# 
   651  0919                     	;# 
   652  091A                     	;# 
   653  091B                     	;# 
   654  091C                     	;# 
   655  091D                     	;# 
   656  091E                     	;# 
   657  091F                     	;# 
   658  0E0F                     	;# 
   659  0E10                     	;# 
   660  0E11                     	;# 
   661  0E12                     	;# 
   662  0E13                     	;# 
   663  0E14                     	;# 
   664  0E15                     	;# 
   665  0E16                     	;# 
   666  0E17                     	;# 
   667  0E18                     	;# 
   668  0E19                     	;# 
   669  0E1A                     	;# 
   670  0E1B                     	;# 
   671  0E1C                     	;# 
   672  0E1D                     	;# 
   673  0E1E                     	;# 
   674  0E1F                     	;# 
   675  0E20                     	;# 
   676  0E21                     	;# 
   677  0E22                     	;# 
   678  0E24                     	;# 
   679  0E25                     	;# 
   680  0E28                     	;# 
   681  0E29                     	;# 
   682  0E2A                     	;# 
   683  0E2B                     	;# 
   684  0E2C                     	;# 
   685  0E2D                     	;# 
   686  0E2E                     	;# 
   687  0E2F                     	;# 
   688  0E90                     	;# 
   689  0E91                     	;# 
   690  0E92                     	;# 
   691  0E94                     	;# 
   692  0E95                     	;# 
   693  0EA0                     	;# 
   694  0EA1                     	;# 
   695  0EA2                     	;# 
   696  0EA3                     	;# 
   697  0EA4                     	;# 
   698  0EA5                     	;# 
   699  0F0F                     	;# 
   700  0F10                     	;# 
   701  0F11                     	;# 
   702  0F12                     	;# 
   703  0F13                     	;# 
   704  0F14                     	;# 
   705  0F15                     	;# 
   706  0F16                     	;# 
   707  0F17                     	;# 
   708  0F18                     	;# 
   709  0F19                     	;# 
   710  0F1A                     	;# 
   711  0F1B                     	;# 
   712  0F1C                     	;# 
   713  0F1D                     	;# 
   714  0F1E                     	;# 
   715  0F1F                     	;# 
   716  0F20                     	;# 
   717  0F21                     	;# 
   718  0F22                     	;# 
   719  0F23                     	;# 
   720  0F24                     	;# 
   721  0F25                     	;# 
   722  0F26                     	;# 
   723  0F27                     	;# 
   724  0F28                     	;# 
   725  0F29                     	;# 
   726  0F2A                     	;# 
   727  0F2B                     	;# 
   728  0F2C                     	;# 
   729  0F2D                     	;# 
   730  0F2E                     	;# 
   731  0F2F                     	;# 
   732  0F30                     	;# 
   733  0F31                     	;# 
   734  0F32                     	;# 
   735  0F33                     	;# 
   736  0F34                     	;# 
   737  0F35                     	;# 
   738  0F36                     	;# 
   739  0F37                     	;# 
   740  0FE4                     	;# 
   741  0FE5                     	;# 
   742  0FE6                     	;# 
   743  0FE7                     	;# 
   744  0FE8                     	;# 
   745  0FE9                     	;# 
   746  0FEA                     	;# 
   747  0FEB                     	;# 
   748  0FED                     	;# 
   749  0FEE                     	;# 
   750  0FEF                     	;# 
   751  0000                     	;# 
   752  0001                     	;# 
   753  0002                     	;# 
   754  0003                     	;# 
   755  0004                     	;# 
   756  0005                     	;# 
   757  0006                     	;# 
   758  0007                     	;# 
   759  0008                     	;# 
   760  0009                     	;# 
   761  000A                     	;# 
   762  000B                     	;# 
   763  000C                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0013                     	;# 
   769  0014                     	;# 
   770  0015                     	;# 
   771  0015                     	;# 
   772  0016                     	;# 
   773  0016                     	;# 
   774  0017                     	;# 
   775  0018                     	;# 
   776  0019                     	;# 
   777  0019                     	;# 
   778  001A                     	;# 
   779  001B                     	;# 
   780  001C                     	;# 
   781  001D                     	;# 
   782  001E                     	;# 
   783  001F                     	;# 
   784  008C                     	;# 
   785  008E                     	;# 
   786  0090                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0093                     	;# 
   790  0094                     	;# 
   791  0097                     	;# 
   792  009B                     	;# 
   793  009B                     	;# 
   794  009C                     	;# 
   795  009D                     	;# 
   796  009E                     	;# 
   797  009F                     	;# 
   798  010C                     	;# 
   799  010E                     	;# 
   800  0111                     	;# 
   801  0112                     	;# 
   802  0113                     	;# 
   803  0114                     	;# 
   804  0115                     	;# 
   805  0116                     	;# 
   806  0117                     	;# 
   807  0118                     	;# 
   808  0119                     	;# 
   809  018C                     	;# 
   810  018E                     	;# 
   811  0197                     	;# 
   812  0199                     	;# 
   813  0199                     	;# 
   814  0199                     	;# 
   815  019A                     	;# 
   816  019A                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019C                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019D                     	;# 
   828  019D                     	;# 
   829  019E                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  019F                     	;# 
   834  019F                     	;# 
   835  019F                     	;# 
   836  019F                     	;# 
   837  020C                     	;# 
   838  020E                     	;# 
   839  0211                     	;# 
   840  0211                     	;# 
   841  0212                     	;# 
   842  0212                     	;# 
   843  0213                     	;# 
   844  0213                     	;# 
   845  0214                     	;# 
   846  0214                     	;# 
   847  0215                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0216                     	;# 
   852  0216                     	;# 
   853  0217                     	;# 
   854  0217                     	;# 
   855  0219                     	;# 
   856  021A                     	;# 
   857  021B                     	;# 
   858  021C                     	;# 
   859  021D                     	;# 
   860  021D                     	;# 
   861  021E                     	;# 
   862  021F                     	;# 
   863  028C                     	;# 
   864  028E                     	;# 
   865  0291                     	;# 
   866  0291                     	;# 
   867  0292                     	;# 
   868  0293                     	;# 
   869  0294                     	;# 
   870  0295                     	;# 
   871  0295                     	;# 
   872  0296                     	;# 
   873  0297                     	;# 
   874  0298                     	;# 
   875  029F                     	;# 
   876  030C                     	;# 
   877  030E                     	;# 
   878  0311                     	;# 
   879  0311                     	;# 
   880  0312                     	;# 
   881  0313                     	;# 
   882  0314                     	;# 
   883  0315                     	;# 
   884  0315                     	;# 
   885  0316                     	;# 
   886  0317                     	;# 
   887  0318                     	;# 
   888  038C                     	;# 
   889  038E                     	;# 
   890  0391                     	;# 
   891  0392                     	;# 
   892  0393                     	;# 
   893  0397                     	;# 
   894  0398                     	;# 
   895  0399                     	;# 
   896  039A                     	;# 
   897  039C                     	;# 
   898  039D                     	;# 
   899  039E                     	;# 
   900  039F                     	;# 
   901  0411                     	;# 
   902  0411                     	;# 
   903  0412                     	;# 
   904  0413                     	;# 
   905  0414                     	;# 
   906  0415                     	;# 
   907  0416                     	;# 
   908  0417                     	;# 
   909  0418                     	;# 
   910  0418                     	;# 
   911  0419                     	;# 
   912  041A                     	;# 
   913  041B                     	;# 
   914  041C                     	;# 
   915  041D                     	;# 
   916  041E                     	;# 
   917  041F                     	;# 
   918  0498                     	;# 
   919  0498                     	;# 
   920  0499                     	;# 
   921  049A                     	;# 
   922  049B                     	;# 
   923  049B                     	;# 
   924  049C                     	;# 
   925  049D                     	;# 
   926  049E                     	;# 
   927  049F                     	;# 
   928  0617                     	;# 
   929  0618                     	;# 
   930  0619                     	;# 
   931  0619                     	;# 
   932  061A                     	;# 
   933  061B                     	;# 
   934  061C                     	;# 
   935  061C                     	;# 
   936  061F                     	;# 
   937  0691                     	;# 
   938  0692                     	;# 
   939  0693                     	;# 
   940  0694                     	;# 
   941  0695                     	;# 
   942  0696                     	;# 
   943  0697                     	;# 
   944  0698                     	;# 
   945  0699                     	;# 
   946  0711                     	;# 
   947  0712                     	;# 
   948  0713                     	;# 
   949  0714                     	;# 
   950  0715                     	;# 
   951  0716                     	;# 
   952  0717                     	;# 
   953  0718                     	;# 
   954  0719                     	;# 
   955  0891                     	;# 
   956  0891                     	;# 
   957  0891                     	;# 
   958  0891                     	;# 
   959  0891                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0892                     	;# 
   963  0892                     	;# 
   964  0893                     	;# 
   965  0893                     	;# 
   966  0893                     	;# 
   967  0893                     	;# 
   968  0893                     	;# 
   969  0893                     	;# 
   970  0894                     	;# 
   971  0894                     	;# 
   972  0894                     	;# 
   973  0895                     	;# 
   974  0895                     	;# 
   975  0895                     	;# 
   976  0896                     	;# 
   977  0896                     	;# 
   978  0896                     	;# 
   979  089B                     	;# 
   980  0911                     	;# 
   981  0912                     	;# 
   982  0913                     	;# 
   983  0914                     	;# 
   984  0915                     	;# 
   985  0916                     	;# 
   986  0918                     	;# 
   987  0919                     	;# 
   988  091A                     	;# 
   989  091B                     	;# 
   990  091C                     	;# 
   991  091D                     	;# 
   992  091E                     	;# 
   993  091F                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E94                     	;# 
  1028  0E95                     	;# 
  1029  0EA0                     	;# 
  1030  0EA1                     	;# 
  1031  0EA2                     	;# 
  1032  0EA3                     	;# 
  1033  0EA4                     	;# 
  1034  0EA5                     	;# 
  1035  0F0F                     	;# 
  1036  0F10                     	;# 
  1037  0F11                     	;# 
  1038  0F12                     	;# 
  1039  0F13                     	;# 
  1040  0F14                     	;# 
  1041  0F15                     	;# 
  1042  0F16                     	;# 
  1043  0F17                     	;# 
  1044  0F18                     	;# 
  1045  0F19                     	;# 
  1046  0F1A                     	;# 
  1047  0F1B                     	;# 
  1048  0F1C                     	;# 
  1049  0F1D                     	;# 
  1050  0F1E                     	;# 
  1051  0F1F                     	;# 
  1052  0F20                     	;# 
  1053  0F21                     	;# 
  1054  0F22                     	;# 
  1055  0F23                     	;# 
  1056  0F24                     	;# 
  1057  0F25                     	;# 
  1058  0F26                     	;# 
  1059  0F27                     	;# 
  1060  0F28                     	;# 
  1061  0F29                     	;# 
  1062  0F2A                     	;# 
  1063  0F2B                     	;# 
  1064  0F2C                     	;# 
  1065  0F2D                     	;# 
  1066  0F2E                     	;# 
  1067  0F2F                     	;# 
  1068  0F30                     	;# 
  1069  0F31                     	;# 
  1070  0F32                     	;# 
  1071  0F33                     	;# 
  1072  0F34                     	;# 
  1073  0F35                     	;# 
  1074  0F36                     	;# 
  1075  0F37                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0014                     	;# 
  1106  0015                     	;# 
  1107  0015                     	;# 
  1108  0016                     	;# 
  1109  0016                     	;# 
  1110  0017                     	;# 
  1111  0018                     	;# 
  1112  0019                     	;# 
  1113  0019                     	;# 
  1114  001A                     	;# 
  1115  001B                     	;# 
  1116  001C                     	;# 
  1117  001D                     	;# 
  1118  001E                     	;# 
  1119  001F                     	;# 
  1120  008C                     	;# 
  1121  008E                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0092                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0097                     	;# 
  1128  009B                     	;# 
  1129  009B                     	;# 
  1130  009C                     	;# 
  1131  009D                     	;# 
  1132  009E                     	;# 
  1133  009F                     	;# 
  1134  010C                     	;# 
  1135  010E                     	;# 
  1136  0111                     	;# 
  1137  0112                     	;# 
  1138  0113                     	;# 
  1139  0114                     	;# 
  1140  0115                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0118                     	;# 
  1144  0119                     	;# 
  1145  018C                     	;# 
  1146  018E                     	;# 
  1147  0197                     	;# 
  1148  0199                     	;# 
  1149  0199                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019A                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019B                     	;# 
  1159  019C                     	;# 
  1160  019C                     	;# 
  1161  019C                     	;# 
  1162  019D                     	;# 
  1163  019D                     	;# 
  1164  019D                     	;# 
  1165  019E                     	;# 
  1166  019E                     	;# 
  1167  019E                     	;# 
  1168  019F                     	;# 
  1169  019F                     	;# 
  1170  019F                     	;# 
  1171  019F                     	;# 
  1172  019F                     	;# 
  1173  020C                     	;# 
  1174  020E                     	;# 
  1175  0211                     	;# 
  1176  0211                     	;# 
  1177  0212                     	;# 
  1178  0212                     	;# 
  1179  0213                     	;# 
  1180  0213                     	;# 
  1181  0214                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0215                     	;# 
  1187  0216                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0217                     	;# 
  1191  0219                     	;# 
  1192  021A                     	;# 
  1193  021B                     	;# 
  1194  021C                     	;# 
  1195  021D                     	;# 
  1196  021D                     	;# 
  1197  021E                     	;# 
  1198  021F                     	;# 
  1199  028C                     	;# 
  1200  028E                     	;# 
  1201  0291                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0293                     	;# 
  1205  0294                     	;# 
  1206  0295                     	;# 
  1207  0295                     	;# 
  1208  0296                     	;# 
  1209  0297                     	;# 
  1210  0298                     	;# 
  1211  029F                     	;# 
  1212  030C                     	;# 
  1213  030E                     	;# 
  1214  0311                     	;# 
  1215  0311                     	;# 
  1216  0312                     	;# 
  1217  0313                     	;# 
  1218  0314                     	;# 
  1219  0315                     	;# 
  1220  0315                     	;# 
  1221  0316                     	;# 
  1222  0317                     	;# 
  1223  0318                     	;# 
  1224  038C                     	;# 
  1225  038E                     	;# 
  1226  0391                     	;# 
  1227  0392                     	;# 
  1228  0393                     	;# 
  1229  0397                     	;# 
  1230  0398                     	;# 
  1231  0399                     	;# 
  1232  039A                     	;# 
  1233  039C                     	;# 
  1234  039D                     	;# 
  1235  039E                     	;# 
  1236  039F                     	;# 
  1237  0411                     	;# 
  1238  0411                     	;# 
  1239  0412                     	;# 
  1240  0413                     	;# 
  1241  0414                     	;# 
  1242  0415                     	;# 
  1243  0416                     	;# 
  1244  0417                     	;# 
  1245  0418                     	;# 
  1246  0418                     	;# 
  1247  0419                     	;# 
  1248  041A                     	;# 
  1249  041B                     	;# 
  1250  041C                     	;# 
  1251  041D                     	;# 
  1252  041E                     	;# 
  1253  041F                     	;# 
  1254  0498                     	;# 
  1255  0498                     	;# 
  1256  0499                     	;# 
  1257  049A                     	;# 
  1258  049B                     	;# 
  1259  049B                     	;# 
  1260  049C                     	;# 
  1261  049D                     	;# 
  1262  049E                     	;# 
  1263  049F                     	;# 
  1264  0617                     	;# 
  1265  0618                     	;# 
  1266  0619                     	;# 
  1267  0619                     	;# 
  1268  061A                     	;# 
  1269  061B                     	;# 
  1270  061C                     	;# 
  1271  061C                     	;# 
  1272  061F                     	;# 
  1273  0691                     	;# 
  1274  0692                     	;# 
  1275  0693                     	;# 
  1276  0694                     	;# 
  1277  0695                     	;# 
  1278  0696                     	;# 
  1279  0697                     	;# 
  1280  0698                     	;# 
  1281  0699                     	;# 
  1282  0711                     	;# 
  1283  0712                     	;# 
  1284  0713                     	;# 
  1285  0714                     	;# 
  1286  0715                     	;# 
  1287  0716                     	;# 
  1288  0717                     	;# 
  1289  0718                     	;# 
  1290  0719                     	;# 
  1291  0891                     	;# 
  1292  0891                     	;# 
  1293  0891                     	;# 
  1294  0891                     	;# 
  1295  0891                     	;# 
  1296  0891                     	;# 
  1297  0892                     	;# 
  1298  0892                     	;# 
  1299  0892                     	;# 
  1300  0893                     	;# 
  1301  0893                     	;# 
  1302  0893                     	;# 
  1303  0893                     	;# 
  1304  0893                     	;# 
  1305  0893                     	;# 
  1306  0894                     	;# 
  1307  0894                     	;# 
  1308  0894                     	;# 
  1309  0895                     	;# 
  1310  0895                     	;# 
  1311  0895                     	;# 
  1312  0896                     	;# 
  1313  0896                     	;# 
  1314  0896                     	;# 
  1315  089B                     	;# 
  1316  0911                     	;# 
  1317  0912                     	;# 
  1318  0913                     	;# 
  1319  0914                     	;# 
  1320  0915                     	;# 
  1321  0916                     	;# 
  1322  0918                     	;# 
  1323  0919                     	;# 
  1324  091A                     	;# 
  1325  091B                     	;# 
  1326  091C                     	;# 
  1327  091D                     	;# 
  1328  091E                     	;# 
  1329  091F                     	;# 
  1330  0E0F                     	;# 
  1331  0E10                     	;# 
  1332  0E11                     	;# 
  1333  0E12                     	;# 
  1334  0E13                     	;# 
  1335  0E14                     	;# 
  1336  0E15                     	;# 
  1337  0E16                     	;# 
  1338  0E17                     	;# 
  1339  0E18                     	;# 
  1340  0E19                     	;# 
  1341  0E1A                     	;# 
  1342  0E1B                     	;# 
  1343  0E1C                     	;# 
  1344  0E1D                     	;# 
  1345  0E1E                     	;# 
  1346  0E1F                     	;# 
  1347  0E20                     	;# 
  1348  0E21                     	;# 
  1349  0E22                     	;# 
  1350  0E24                     	;# 
  1351  0E25                     	;# 
  1352  0E28                     	;# 
  1353  0E29                     	;# 
  1354  0E2A                     	;# 
  1355  0E2B                     	;# 
  1356  0E2C                     	;# 
  1357  0E2D                     	;# 
  1358  0E2E                     	;# 
  1359  0E2F                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E94                     	;# 
  1364  0E95                     	;# 
  1365  0EA0                     	;# 
  1366  0EA1                     	;# 
  1367  0EA2                     	;# 
  1368  0EA3                     	;# 
  1369  0EA4                     	;# 
  1370  0EA5                     	;# 
  1371  0F0F                     	;# 
  1372  0F10                     	;# 
  1373  0F11                     	;# 
  1374  0F12                     	;# 
  1375  0F13                     	;# 
  1376  0F14                     	;# 
  1377  0F15                     	;# 
  1378  0F16                     	;# 
  1379  0F17                     	;# 
  1380  0F18                     	;# 
  1381  0F19                     	;# 
  1382  0F1A                     	;# 
  1383  0F1B                     	;# 
  1384  0F1C                     	;# 
  1385  0F1D                     	;# 
  1386  0F1E                     	;# 
  1387  0F1F                     	;# 
  1388  0F20                     	;# 
  1389  0F21                     	;# 
  1390  0F22                     	;# 
  1391  0F23                     	;# 
  1392  0F24                     	;# 
  1393  0F25                     	;# 
  1394  0F26                     	;# 
  1395  0F27                     	;# 
  1396  0F28                     	;# 
  1397  0F29                     	;# 
  1398  0F2A                     	;# 
  1399  0F2B                     	;# 
  1400  0F2C                     	;# 
  1401  0F2D                     	;# 
  1402  0F2E                     	;# 
  1403  0F2F                     	;# 
  1404  0F30                     	;# 
  1405  0F31                     	;# 
  1406  0F32                     	;# 
  1407  0F33                     	;# 
  1408  0F34                     	;# 
  1409  0F35                     	;# 
  1410  0F36                     	;# 
  1411  0F37                     	;# 
  1412  0FE4                     	;# 
  1413  0FE5                     	;# 
  1414  0FE6                     	;# 
  1415  0FE7                     	;# 
  1416  0FE8                     	;# 
  1417  0FE9                     	;# 
  1418  0FEA                     	;# 
  1419  0FEB                     	;# 
  1420  0FED                     	;# 
  1421  0FEE                     	;# 
  1422  0FEF                     	;# 
  1423  0000                     	;# 
  1424  0001                     	;# 
  1425  0002                     	;# 
  1426  0003                     	;# 
  1427  0004                     	;# 
  1428  0005                     	;# 
  1429  0006                     	;# 
  1430  0007                     	;# 
  1431  0008                     	;# 
  1432  0009                     	;# 
  1433  000A                     	;# 
  1434  000B                     	;# 
  1435  000C                     	;# 
  1436  000E                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0015                     	;# 
  1444  0016                     	;# 
  1445  0016                     	;# 
  1446  0017                     	;# 
  1447  0018                     	;# 
  1448  0019                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  001D                     	;# 
  1454  001E                     	;# 
  1455  001F                     	;# 
  1456  008C                     	;# 
  1457  008E                     	;# 
  1458  0090                     	;# 
  1459  0091                     	;# 
  1460  0092                     	;# 
  1461  0093                     	;# 
  1462  0094                     	;# 
  1463  0097                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010E                     	;# 
  1472  0111                     	;# 
  1473  0112                     	;# 
  1474  0113                     	;# 
  1475  0114                     	;# 
  1476  0115                     	;# 
  1477  0116                     	;# 
  1478  0117                     	;# 
  1479  0118                     	;# 
  1480  0119                     	;# 
  1481  018C                     	;# 
  1482  018E                     	;# 
  1483  0197                     	;# 
  1484  0199                     	;# 
  1485  0199                     	;# 
  1486  0199                     	;# 
  1487  019A                     	;# 
  1488  019A                     	;# 
  1489  019A                     	;# 
  1490  019B                     	;# 
  1491  019B                     	;# 
  1492  019B                     	;# 
  1493  019B                     	;# 
  1494  019B                     	;# 
  1495  019C                     	;# 
  1496  019C                     	;# 
  1497  019C                     	;# 
  1498  019D                     	;# 
  1499  019D                     	;# 
  1500  019D                     	;# 
  1501  019E                     	;# 
  1502  019E                     	;# 
  1503  019E                     	;# 
  1504  019F                     	;# 
  1505  019F                     	;# 
  1506  019F                     	;# 
  1507  019F                     	;# 
  1508  019F                     	;# 
  1509  020C                     	;# 
  1510  020E                     	;# 
  1511  0211                     	;# 
  1512  0211                     	;# 
  1513  0212                     	;# 
  1514  0212                     	;# 
  1515  0213                     	;# 
  1516  0213                     	;# 
  1517  0214                     	;# 
  1518  0214                     	;# 
  1519  0215                     	;# 
  1520  0215                     	;# 
  1521  0215                     	;# 
  1522  0215                     	;# 
  1523  0216                     	;# 
  1524  0216                     	;# 
  1525  0217                     	;# 
  1526  0217                     	;# 
  1527  0219                     	;# 
  1528  021A                     	;# 
  1529  021B                     	;# 
  1530  021C                     	;# 
  1531  021D                     	;# 
  1532  021D                     	;# 
  1533  021E                     	;# 
  1534  021F                     	;# 
  1535  028C                     	;# 
  1536  028E                     	;# 
  1537  0291                     	;# 
  1538  0291                     	;# 
  1539  0292                     	;# 
  1540  0293                     	;# 
  1541  0294                     	;# 
  1542  0295                     	;# 
  1543  0295                     	;# 
  1544  0296                     	;# 
  1545  0297                     	;# 
  1546  0298                     	;# 
  1547  029F                     	;# 
  1548  030C                     	;# 
  1549  030E                     	;# 
  1550  0311                     	;# 
  1551  0311                     	;# 
  1552  0312                     	;# 
  1553  0313                     	;# 
  1554  0314                     	;# 
  1555  0315                     	;# 
  1556  0315                     	;# 
  1557  0316                     	;# 
  1558  0317                     	;# 
  1559  0318                     	;# 
  1560  038C                     	;# 
  1561  038E                     	;# 
  1562  0391                     	;# 
  1563  0392                     	;# 
  1564  0393                     	;# 
  1565  0397                     	;# 
  1566  0398                     	;# 
  1567  0399                     	;# 
  1568  039A                     	;# 
  1569  039C                     	;# 
  1570  039D                     	;# 
  1571  039E                     	;# 
  1572  039F                     	;# 
  1573  0411                     	;# 
  1574  0411                     	;# 
  1575  0412                     	;# 
  1576  0413                     	;# 
  1577  0414                     	;# 
  1578  0415                     	;# 
  1579  0416                     	;# 
  1580  0417                     	;# 
  1581  0418                     	;# 
  1582  0418                     	;# 
  1583  0419                     	;# 
  1584  041A                     	;# 
  1585  041B                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  041F                     	;# 
  1590  0498                     	;# 
  1591  0498                     	;# 
  1592  0499                     	;# 
  1593  049A                     	;# 
  1594  049B                     	;# 
  1595  049B                     	;# 
  1596  049C                     	;# 
  1597  049D                     	;# 
  1598  049E                     	;# 
  1599  049F                     	;# 
  1600  0617                     	;# 
  1601  0618                     	;# 
  1602  0619                     	;# 
  1603  0619                     	;# 
  1604  061A                     	;# 
  1605  061B                     	;# 
  1606  061C                     	;# 
  1607  061C                     	;# 
  1608  061F                     	;# 
  1609  0691                     	;# 
  1610  0692                     	;# 
  1611  0693                     	;# 
  1612  0694                     	;# 
  1613  0695                     	;# 
  1614  0696                     	;# 
  1615  0697                     	;# 
  1616  0698                     	;# 
  1617  0699                     	;# 
  1618  0711                     	;# 
  1619  0712                     	;# 
  1620  0713                     	;# 
  1621  0714                     	;# 
  1622  0715                     	;# 
  1623  0716                     	;# 
  1624  0717                     	;# 
  1625  0718                     	;# 
  1626  0719                     	;# 
  1627  0891                     	;# 
  1628  0891                     	;# 
  1629  0891                     	;# 
  1630  0891                     	;# 
  1631  0891                     	;# 
  1632  0891                     	;# 
  1633  0892                     	;# 
  1634  0892                     	;# 
  1635  0892                     	;# 
  1636  0893                     	;# 
  1637  0893                     	;# 
  1638  0893                     	;# 
  1639  0893                     	;# 
  1640  0893                     	;# 
  1641  0893                     	;# 
  1642  0894                     	;# 
  1643  0894                     	;# 
  1644  0894                     	;# 
  1645  0895                     	;# 
  1646  0895                     	;# 
  1647  0895                     	;# 
  1648  0896                     	;# 
  1649  0896                     	;# 
  1650  0896                     	;# 
  1651  089B                     	;# 
  1652  0911                     	;# 
  1653  0912                     	;# 
  1654  0913                     	;# 
  1655  0914                     	;# 
  1656  0915                     	;# 
  1657  0916                     	;# 
  1658  0918                     	;# 
  1659  0919                     	;# 
  1660  091A                     	;# 
  1661  091B                     	;# 
  1662  091C                     	;# 
  1663  091D                     	;# 
  1664  091E                     	;# 
  1665  091F                     	;# 
  1666  0E0F                     	;# 
  1667  0E10                     	;# 
  1668  0E11                     	;# 
  1669  0E12                     	;# 
  1670  0E13                     	;# 
  1671  0E14                     	;# 
  1672  0E15                     	;# 
  1673  0E16                     	;# 
  1674  0E17                     	;# 
  1675  0E18                     	;# 
  1676  0E19                     	;# 
  1677  0E1A                     	;# 
  1678  0E1B                     	;# 
  1679  0E1C                     	;# 
  1680  0E1D                     	;# 
  1681  0E1E                     	;# 
  1682  0E1F                     	;# 
  1683  0E20                     	;# 
  1684  0E21                     	;# 
  1685  0E22                     	;# 
  1686  0E24                     	;# 
  1687  0E25                     	;# 
  1688  0E28                     	;# 
  1689  0E29                     	;# 
  1690  0E2A                     	;# 
  1691  0E2B                     	;# 
  1692  0E2C                     	;# 
  1693  0E2D                     	;# 
  1694  0E2E                     	;# 
  1695  0E2F                     	;# 
  1696  0E90                     	;# 
  1697  0E91                     	;# 
  1698  0E92                     	;# 
  1699  0E94                     	;# 
  1700  0E95                     	;# 
  1701  0EA0                     	;# 
  1702  0EA1                     	;# 
  1703  0EA2                     	;# 
  1704  0EA3                     	;# 
  1705  0EA4                     	;# 
  1706  0EA5                     	;# 
  1707  0F0F                     	;# 
  1708  0F10                     	;# 
  1709  0F11                     	;# 
  1710  0F12                     	;# 
  1711  0F13                     	;# 
  1712  0F14                     	;# 
  1713  0F15                     	;# 
  1714  0F16                     	;# 
  1715  0F17                     	;# 
  1716  0F18                     	;# 
  1717  0F19                     	;# 
  1718  0F1A                     	;# 
  1719  0F1B                     	;# 
  1720  0F1C                     	;# 
  1721  0F1D                     	;# 
  1722  0F1E                     	;# 
  1723  0F1F                     	;# 
  1724  0F20                     	;# 
  1725  0F21                     	;# 
  1726  0F22                     	;# 
  1727  0F23                     	;# 
  1728  0F24                     	;# 
  1729  0F25                     	;# 
  1730  0F26                     	;# 
  1731  0F27                     	;# 
  1732  0F28                     	;# 
  1733  0F29                     	;# 
  1734  0F2A                     	;# 
  1735  0F2B                     	;# 
  1736  0F2C                     	;# 
  1737  0F2D                     	;# 
  1738  0F2E                     	;# 
  1739  0F2F                     	;# 
  1740  0F30                     	;# 
  1741  0F31                     	;# 
  1742  0F32                     	;# 
  1743  0F33                     	;# 
  1744  0F34                     	;# 
  1745  0F35                     	;# 
  1746  0F36                     	;# 
  1747  0F37                     	;# 
  1748  0FE4                     	;# 
  1749  0FE5                     	;# 
  1750  0FE6                     	;# 
  1751  0FE7                     	;# 
  1752  0FE8                     	;# 
  1753  0FE9                     	;# 
  1754  0FEA                     	;# 
  1755  0FEB                     	;# 
  1756  0FED                     	;# 
  1757  0FEE                     	;# 
  1758  0FEF                     	;# 
  1759  0000                     	;# 
  1760  0001                     	;# 
  1761  0002                     	;# 
  1762  0003                     	;# 
  1763  0004                     	;# 
  1764  0005                     	;# 
  1765  0006                     	;# 
  1766  0007                     	;# 
  1767  0008                     	;# 
  1768  0009                     	;# 
  1769  000A                     	;# 
  1770  000B                     	;# 
  1771  000C                     	;# 
  1772  000E                     	;# 
  1773  0010                     	;# 
  1774  0011                     	;# 
  1775  0012                     	;# 
  1776  0013                     	;# 
  1777  0014                     	;# 
  1778  0015                     	;# 
  1779  0015                     	;# 
  1780  0016                     	;# 
  1781  0016                     	;# 
  1782  0017                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  0019                     	;# 
  1786  001A                     	;# 
  1787  001B                     	;# 
  1788  001C                     	;# 
  1789  001D                     	;# 
  1790  001E                     	;# 
  1791  001F                     	;# 
  1792  008C                     	;# 
  1793  008E                     	;# 
  1794  0090                     	;# 
  1795  0091                     	;# 
  1796  0092                     	;# 
  1797  0093                     	;# 
  1798  0094                     	;# 
  1799  0097                     	;# 
  1800  009B                     	;# 
  1801  009B                     	;# 
  1802  009C                     	;# 
  1803  009D                     	;# 
  1804  009E                     	;# 
  1805  009F                     	;# 
  1806  010C                     	;# 
  1807  010E                     	;# 
  1808  0111                     	;# 
  1809  0112                     	;# 
  1810  0113                     	;# 
  1811  0114                     	;# 
  1812  0115                     	;# 
  1813  0116                     	;# 
  1814  0117                     	;# 
  1815  0118                     	;# 
  1816  0119                     	;# 
  1817  018C                     	;# 
  1818  018E                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020E                     	;# 
  1847  0211                     	;# 
  1848  0211                     	;# 
  1849  0212                     	;# 
  1850  0212                     	;# 
  1851  0213                     	;# 
  1852  0213                     	;# 
  1853  0214                     	;# 
  1854  0214                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0216                     	;# 
  1860  0216                     	;# 
  1861  0217                     	;# 
  1862  0217                     	;# 
  1863  0219                     	;# 
  1864  021A                     	;# 
  1865  021B                     	;# 
  1866  021C                     	;# 
  1867  021D                     	;# 
  1868  021D                     	;# 
  1869  021E                     	;# 
  1870  021F                     	;# 
  1871  028C                     	;# 
  1872  028E                     	;# 
  1873  0291                     	;# 
  1874  0291                     	;# 
  1875  0292                     	;# 
  1876  0293                     	;# 
  1877  0294                     	;# 
  1878  0295                     	;# 
  1879  0295                     	;# 
  1880  0296                     	;# 
  1881  0297                     	;# 
  1882  0298                     	;# 
  1883  029F                     	;# 
  1884  030C                     	;# 
  1885  030E                     	;# 
  1886  0311                     	;# 
  1887  0311                     	;# 
  1888  0312                     	;# 
  1889  0313                     	;# 
  1890  0314                     	;# 
  1891  0315                     	;# 
  1892  0315                     	;# 
  1893  0316                     	;# 
  1894  0317                     	;# 
  1895  0318                     	;# 
  1896  038C                     	;# 
  1897  038E                     	;# 
  1898  0391                     	;# 
  1899  0392                     	;# 
  1900  0393                     	;# 
  1901  0397                     	;# 
  1902  0398                     	;# 
  1903  0399                     	;# 
  1904  039A                     	;# 
  1905  039C                     	;# 
  1906  039D                     	;# 
  1907  039E                     	;# 
  1908  039F                     	;# 
  1909  0411                     	;# 
  1910  0411                     	;# 
  1911  0412                     	;# 
  1912  0413                     	;# 
  1913  0414                     	;# 
  1914  0415                     	;# 
  1915  0416                     	;# 
  1916  0417                     	;# 
  1917  0418                     	;# 
  1918  0418                     	;# 
  1919  0419                     	;# 
  1920  041A                     	;# 
  1921  041B                     	;# 
  1922  041C                     	;# 
  1923  041D                     	;# 
  1924  041E                     	;# 
  1925  041F                     	;# 
  1926  0498                     	;# 
  1927  0498                     	;# 
  1928  0499                     	;# 
  1929  049A                     	;# 
  1930  049B                     	;# 
  1931  049B                     	;# 
  1932  049C                     	;# 
  1933  049D                     	;# 
  1934  049E                     	;# 
  1935  049F                     	;# 
  1936  0617                     	;# 
  1937  0618                     	;# 
  1938  0619                     	;# 
  1939  0619                     	;# 
  1940  061A                     	;# 
  1941  061B                     	;# 
  1942  061C                     	;# 
  1943  061C                     	;# 
  1944  061F                     	;# 
  1945  0691                     	;# 
  1946  0692                     	;# 
  1947  0693                     	;# 
  1948  0694                     	;# 
  1949  0695                     	;# 
  1950  0696                     	;# 
  1951  0697                     	;# 
  1952  0698                     	;# 
  1953  0699                     	;# 
  1954  0711                     	;# 
  1955  0712                     	;# 
  1956  0713                     	;# 
  1957  0714                     	;# 
  1958  0715                     	;# 
  1959  0716                     	;# 
  1960  0717                     	;# 
  1961  0718                     	;# 
  1962  0719                     	;# 
  1963  0891                     	;# 
  1964  0891                     	;# 
  1965  0891                     	;# 
  1966  0891                     	;# 
  1967  0891                     	;# 
  1968  0891                     	;# 
  1969  0892                     	;# 
  1970  0892                     	;# 
  1971  0892                     	;# 
  1972  0893                     	;# 
  1973  0893                     	;# 
  1974  0893                     	;# 
  1975  0893                     	;# 
  1976  0893                     	;# 
  1977  0893                     	;# 
  1978  0894                     	;# 
  1979  0894                     	;# 
  1980  0894                     	;# 
  1981  0895                     	;# 
  1982  0895                     	;# 
  1983  0895                     	;# 
  1984  0896                     	;# 
  1985  0896                     	;# 
  1986  0896                     	;# 
  1987  089B                     	;# 
  1988  0911                     	;# 
  1989  0912                     	;# 
  1990  0913                     	;# 
  1991  0914                     	;# 
  1992  0915                     	;# 
  1993  0916                     	;# 
  1994  0918                     	;# 
  1995  0919                     	;# 
  1996  091A                     	;# 
  1997  091B                     	;# 
  1998  091C                     	;# 
  1999  091D                     	;# 
  2000  091E                     	;# 
  2001  091F                     	;# 
  2002  0E0F                     	;# 
  2003  0E10                     	;# 
  2004  0E11                     	;# 
  2005  0E12                     	;# 
  2006  0E13                     	;# 
  2007  0E14                     	;# 
  2008  0E15                     	;# 
  2009  0E16                     	;# 
  2010  0E17                     	;# 
  2011  0E18                     	;# 
  2012  0E19                     	;# 
  2013  0E1A                     	;# 
  2014  0E1B                     	;# 
  2015  0E1C                     	;# 
  2016  0E1D                     	;# 
  2017  0E1E                     	;# 
  2018  0E1F                     	;# 
  2019  0E20                     	;# 
  2020  0E21                     	;# 
  2021  0E22                     	;# 
  2022  0E24                     	;# 
  2023  0E25                     	;# 
  2024  0E28                     	;# 
  2025  0E29                     	;# 
  2026  0E2A                     	;# 
  2027  0E2B                     	;# 
  2028  0E2C                     	;# 
  2029  0E2D                     	;# 
  2030  0E2E                     	;# 
  2031  0E2F                     	;# 
  2032  0E90                     	;# 
  2033  0E91                     	;# 
  2034  0E92                     	;# 
  2035  0E94                     	;# 
  2036  0E95                     	;# 
  2037  0EA0                     	;# 
  2038  0EA1                     	;# 
  2039  0EA2                     	;# 
  2040  0EA3                     	;# 
  2041  0EA4                     	;# 
  2042  0EA5                     	;# 
  2043  0F0F                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F28                     	;# 
  2069  0F29                     	;# 
  2070  0F2A                     	;# 
  2071  0F2B                     	;# 
  2072  0F2C                     	;# 
  2073  0F2D                     	;# 
  2074  0F2E                     	;# 
  2075  0F2F                     	;# 
  2076  0F30                     	;# 
  2077  0F31                     	;# 
  2078  0F32                     	;# 
  2079  0F33                     	;# 
  2080  0F34                     	;# 
  2081  0F35                     	;# 
  2082  0F36                     	;# 
  2083  0F37                     	;# 
  2084  0FE4                     	;# 
  2085  0FE5                     	;# 
  2086  0FE6                     	;# 
  2087  0FE7                     	;# 
  2088  0FE8                     	;# 
  2089  0FE9                     	;# 
  2090  0FEA                     	;# 
  2091  0FEB                     	;# 
  2092  0FED                     	;# 
  2093  0FEE                     	;# 
  2094  0FEF                     	;# 
  2095                           
  2096                           	psect	idataBANK0
  2097  0BAB                     __pidataBANK0:	
  2098                           
  2099                           ;initializer for _colorState
  2100  0BAB  3400               	retlw	0
  2101  0BAC  3401               	retlw	1
  2102  0BAD  340D               	retlw	13
  2103                           
  2104                           	psect	idataBANK1
  2105  0BD3                     __pidataBANK1:	
  2106                           
  2107                           ;initializer for _CurrentColorMax
  2108  0BD3  3401               	retlw	1
  2109  0BD4  3401               	retlw	1
  2110  0BD5  3401               	retlw	1
  2111  0BD6  3401               	retlw	1
  2112  0BD7  3402               	retlw	2
  2113  0BD8  3402               	retlw	2
  2114  0BD9  3402               	retlw	2
  2115  0BDA  3402               	retlw	2
  2116  0BDB  3402               	retlw	2
  2117  0BDC  3402               	retlw	2
  2118  0BDD  3403               	retlw	3
  2119  0BDE  3403               	retlw	3
  2120  0BDF  3403               	retlw	3
  2121  0BE0  3404               	retlw	4
  2122                           
  2123                           	psect	stringtext1
  2124  0259                     __pstringtext1:	
  2125  0259                     _ROM_COMBO_Patterns:	
  2126  0259  3403               	retlw	3
  2127  025A  3402               	retlw	2
  2128  025B  3403               	retlw	3
  2129  025C  3402               	retlw	2
  2130  025D  3403               	retlw	3
  2131  025E  3402               	retlw	2
  2132  025F  3403               	retlw	3
  2133  0260  3402               	retlw	2
  2134  0261  3403               	retlw	3
  2135  0262  3402               	retlw	2
  2136  0263  3403               	retlw	3
  2137  0264  3402               	retlw	2
  2138  0265  3403               	retlw	3
  2139  0266  3402               	retlw	2
  2140  0267  3403               	retlw	3
  2141  0268  3402               	retlw	2
  2142  0269  3403               	retlw	3
  2143  026A  3402               	retlw	2
  2144  026B  3403               	retlw	3
  2145  026C  3402               	retlw	2
  2146  026D  3403               	retlw	3
  2147  026E  3402               	retlw	2
  2148  026F  3403               	retlw	3
  2149  0270  3402               	retlw	2
  2150  0271  3463               	retlw	99
  2151  0272  3400               	retlw	0
  2152  0273  3400               	retlw	0
  2153  0274  3400               	retlw	0
  2154  0275  3400               	retlw	0
  2155  0276  3400               	retlw	0
  2156  0277  3400               	retlw	0
  2157  0278  3400               	retlw	0
  2158  0279  3400               	retlw	0
  2159  027A  3400               	retlw	0
  2160  027B  3400               	retlw	0
  2161  027C  3401               	retlw	1
  2162  027D  3400               	retlw	0
  2163  027E  3401               	retlw	1
  2164  027F  3400               	retlw	0
  2165  0280  3401               	retlw	1
  2166  0281  3400               	retlw	0
  2167  0282  3401               	retlw	1
  2168  0283  3400               	retlw	0
  2169  0284  3401               	retlw	1
  2170  0285  3400               	retlw	0
  2171  0286  3401               	retlw	1
  2172  0287  3400               	retlw	0
  2173  0288  3401               	retlw	1
  2174  0289  3400               	retlw	0
  2175  028A  3401               	retlw	1
  2176  028B  3400               	retlw	0
  2177  028C  3401               	retlw	1
  2178  028D  3400               	retlw	0
  2179  028E  3401               	retlw	1
  2180  028F  3400               	retlw	0
  2181  0290  3401               	retlw	1
  2182  0291  3400               	retlw	0
  2183  0292  3401               	retlw	1
  2184  0293  3400               	retlw	0
  2185  0294  3463               	retlw	99
  2186  0295  3400               	retlw	0
  2187  0296  3400               	retlw	0
  2188  0297  3400               	retlw	0
  2189  0298  3400               	retlw	0
  2190  0299  3400               	retlw	0
  2191  029A  3400               	retlw	0
  2192  029B  3400               	retlw	0
  2193  029C  3400               	retlw	0
  2194  029D  3400               	retlw	0
  2195  029E  3400               	retlw	0
  2196  029F  3403               	retlw	3
  2197  02A0  3402               	retlw	2
  2198  02A1  3403               	retlw	3
  2199  02A2  3402               	retlw	2
  2200  02A3  3403               	retlw	3
  2201  02A4  3402               	retlw	2
  2202  02A5  3401               	retlw	1
  2203  02A6  3400               	retlw	0
  2204  02A7  3401               	retlw	1
  2205  02A8  3400               	retlw	0
  2206  02A9  3401               	retlw	1
  2207  02AA  3400               	retlw	0
  2208  02AB  3401               	retlw	1
  2209  02AC  3400               	retlw	0
  2210  02AD  3463               	retlw	99
  2211  02AE  3463               	retlw	99
  2212  02AF  3463               	retlw	99
  2213  02B0  3463               	retlw	99
  2214  02B1  3463               	retlw	99
  2215  02B2  3463               	retlw	99
  2216  02B3  3463               	retlw	99
  2217  02B4  3463               	retlw	99
  2218  02B5  3400               	retlw	0
  2219  02B6  3400               	retlw	0
  2220  02B7  3400               	retlw	0
  2221  02B8  3400               	retlw	0
  2222  02B9  3400               	retlw	0
  2223  02BA  3400               	retlw	0
  2224  02BB  3400               	retlw	0
  2225  02BC  3400               	retlw	0
  2226  02BD  3400               	retlw	0
  2227  02BE  3400               	retlw	0
  2228  02BF  3400               	retlw	0
  2229  02C0  3400               	retlw	0
  2230  02C1  3400               	retlw	0
  2231  02C2  3404               	retlw	4
  2232  02C3  3402               	retlw	2
  2233  02C4  3404               	retlw	4
  2234  02C5  3402               	retlw	2
  2235  02C6  3404               	retlw	4
  2236  02C7  3402               	retlw	2
  2237  02C8  3404               	retlw	4
  2238  02C9  3402               	retlw	2
  2239  02CA  3404               	retlw	4
  2240  02CB  3402               	retlw	2
  2241  02CC  3404               	retlw	4
  2242  02CD  3402               	retlw	2
  2243  02CE  3404               	retlw	4
  2244  02CF  3402               	retlw	2
  2245  02D0  3404               	retlw	4
  2246  02D1  3402               	retlw	2
  2247  02D2  3404               	retlw	4
  2248  02D3  3402               	retlw	2
  2249  02D4  3404               	retlw	4
  2250  02D5  3402               	retlw	2
  2251  02D6  3404               	retlw	4
  2252  02D7  3402               	retlw	2
  2253  02D8  3404               	retlw	4
  2254  02D9  3402               	retlw	2
  2255  02DA  3463               	retlw	99
  2256  02DB  3400               	retlw	0
  2257  02DC  3400               	retlw	0
  2258  02DD  3400               	retlw	0
  2259  02DE  3400               	retlw	0
  2260  02DF  3400               	retlw	0
  2261  02E0  3400               	retlw	0
  2262  02E1  3400               	retlw	0
  2263  02E2  3400               	retlw	0
  2264  02E3  3400               	retlw	0
  2265  02E4  3400               	retlw	0
  2266  02E5  3406               	retlw	6
  2267  02E6  3400               	retlw	0
  2268  02E7  3406               	retlw	6
  2269  02E8  3400               	retlw	0
  2270  02E9  3406               	retlw	6
  2271  02EA  3400               	retlw	0
  2272  02EB  3406               	retlw	6
  2273  02EC  3400               	retlw	0
  2274  02ED  3406               	retlw	6
  2275  02EE  3400               	retlw	0
  2276  02EF  3406               	retlw	6
  2277  02F0  3400               	retlw	0
  2278  02F1  3406               	retlw	6
  2279  02F2  3400               	retlw	0
  2280  02F3  3406               	retlw	6
  2281  02F4  3400               	retlw	0
  2282  02F5  3406               	retlw	6
  2283  02F6  3400               	retlw	0
  2284  02F7  3406               	retlw	6
  2285  02F8  3400               	retlw	0
  2286  02F9  3406               	retlw	6
  2287  02FA  3400               	retlw	0
  2288  02FB  3406               	retlw	6
  2289  02FC  3400               	retlw	0
  2290  02FD  3463               	retlw	99
  2291  02FE  3400               	retlw	0
  2292  02FF  3400               	retlw	0
  2293  0300  3400               	retlw	0
  2294  0301  3400               	retlw	0
  2295  0302  3400               	retlw	0
  2296  0303  3400               	retlw	0
  2297  0304  3400               	retlw	0
  2298  0305  3400               	retlw	0
  2299  0306  3400               	retlw	0
  2300  0307  3400               	retlw	0
  2301  0308  3404               	retlw	4
  2302  0309  3402               	retlw	2
  2303  030A  3404               	retlw	4
  2304  030B  3402               	retlw	2
  2305  030C  3404               	retlw	4
  2306  030D  3402               	retlw	2
  2307  030E  3406               	retlw	6
  2308  030F  3400               	retlw	0
  2309  0310  3406               	retlw	6
  2310  0311  3400               	retlw	0
  2311  0312  3406               	retlw	6
  2312  0313  3400               	retlw	0
  2313  0314  3406               	retlw	6
  2314  0315  3400               	retlw	0
  2315  0316  3463               	retlw	99
  2316  0317  3463               	retlw	99
  2317  0318  3463               	retlw	99
  2318  0319  3463               	retlw	99
  2319  031A  3463               	retlw	99
  2320  031B  3463               	retlw	99
  2321  031C  3463               	retlw	99
  2322  031D  3463               	retlw	99
  2323  031E  3400               	retlw	0
  2324  031F  3400               	retlw	0
  2325  0320  3400               	retlw	0
  2326  0321  3400               	retlw	0
  2327  0322  3400               	retlw	0
  2328  0323  3400               	retlw	0
  2329  0324  3400               	retlw	0
  2330  0325  3400               	retlw	0
  2331  0326  3400               	retlw	0
  2332  0327  3400               	retlw	0
  2333  0328  3400               	retlw	0
  2334  0329  3400               	retlw	0
  2335  032A  3400               	retlw	0
  2336  032B  3405               	retlw	5
  2337  032C  3402               	retlw	2
  2338  032D  3405               	retlw	5
  2339  032E  3402               	retlw	2
  2340  032F  3405               	retlw	5
  2341  0330  3402               	retlw	2
  2342  0331  3405               	retlw	5
  2343  0332  3402               	retlw	2
  2344  0333  3405               	retlw	5
  2345  0334  3402               	retlw	2
  2346  0335  3405               	retlw	5
  2347  0336  3402               	retlw	2
  2348  0337  3405               	retlw	5
  2349  0338  3402               	retlw	2
  2350  0339  3405               	retlw	5
  2351  033A  3402               	retlw	2
  2352  033B  3405               	retlw	5
  2353  033C  3402               	retlw	2
  2354  033D  3405               	retlw	5
  2355  033E  3402               	retlw	2
  2356  033F  3405               	retlw	5
  2357  0340  3402               	retlw	2
  2358  0341  3405               	retlw	5
  2359  0342  3402               	retlw	2
  2360  0343  3463               	retlw	99
  2361  0344  3400               	retlw	0
  2362  0345  3400               	retlw	0
  2363  0346  3400               	retlw	0
  2364  0347  3400               	retlw	0
  2365  0348  3400               	retlw	0
  2366  0349  3400               	retlw	0
  2367  034A  3400               	retlw	0
  2368  034B  3400               	retlw	0
  2369  034C  3400               	retlw	0
  2370  034D  3400               	retlw	0
  2371  034E  3407               	retlw	7
  2372  034F  3400               	retlw	0
  2373  0350  3407               	retlw	7
  2374  0351  3400               	retlw	0
  2375  0352  3407               	retlw	7
  2376  0353  3400               	retlw	0
  2377  0354  3407               	retlw	7
  2378  0355  3400               	retlw	0
  2379  0356  3407               	retlw	7
  2380  0357  3400               	retlw	0
  2381  0358  3407               	retlw	7
  2382  0359  3400               	retlw	0
  2383  035A  3407               	retlw	7
  2384  035B  3400               	retlw	0
  2385  035C  3407               	retlw	7
  2386  035D  3400               	retlw	0
  2387  035E  3407               	retlw	7
  2388  035F  3400               	retlw	0
  2389  0360  3407               	retlw	7
  2390  0361  3400               	retlw	0
  2391  0362  3407               	retlw	7
  2392  0363  3400               	retlw	0
  2393  0364  3407               	retlw	7
  2394  0365  3400               	retlw	0
  2395  0366  3463               	retlw	99
  2396  0367  3400               	retlw	0
  2397  0368  3400               	retlw	0
  2398  0369  3400               	retlw	0
  2399  036A  3400               	retlw	0
  2400  036B  3400               	retlw	0
  2401  036C  3400               	retlw	0
  2402  036D  3400               	retlw	0
  2403  036E  3400               	retlw	0
  2404  036F  3400               	retlw	0
  2405  0370  3400               	retlw	0
  2406  0371  3405               	retlw	5
  2407  0372  3402               	retlw	2
  2408  0373  3405               	retlw	5
  2409  0374  3402               	retlw	2
  2410  0375  3405               	retlw	5
  2411  0376  3402               	retlw	2
  2412  0377  3407               	retlw	7
  2413  0378  3400               	retlw	0
  2414  0379  3407               	retlw	7
  2415  037A  3400               	retlw	0
  2416  037B  3407               	retlw	7
  2417  037C  3400               	retlw	0
  2418  037D  3407               	retlw	7
  2419  037E  3400               	retlw	0
  2420  037F  3463               	retlw	99
  2421  0380  3463               	retlw	99
  2422  0381  3463               	retlw	99
  2423  0382  3463               	retlw	99
  2424  0383  3463               	retlw	99
  2425  0384  3463               	retlw	99
  2426  0385  3463               	retlw	99
  2427  0386  3463               	retlw	99
  2428  0387  3400               	retlw	0
  2429  0388  3400               	retlw	0
  2430  0389  3400               	retlw	0
  2431  038A  3400               	retlw	0
  2432  038B  3400               	retlw	0
  2433  038C  3400               	retlw	0
  2434  038D  3400               	retlw	0
  2435  038E  3400               	retlw	0
  2436  038F  3400               	retlw	0
  2437  0390  3400               	retlw	0
  2438  0391  3400               	retlw	0
  2439  0392  3400               	retlw	0
  2440  0393  3400               	retlw	0
  2441  0394  340D               	retlw	13
  2442  0395  340E               	retlw	14
  2443  0396  340D               	retlw	13
  2444  0397  340E               	retlw	14
  2445  0398  340F               	retlw	15
  2446  0399  340F               	retlw	15
  2447  039A  3410               	retlw	16
  2448  039B  3410               	retlw	16
  2449  039C  340F               	retlw	15
  2450  039D  340F               	retlw	15
  2451  039E  3410               	retlw	16
  2452  039F  3410               	retlw	16
  2453  03A0  340B               	retlw	11
  2454  03A1  340C               	retlw	12
  2455  03A2  340B               	retlw	11
  2456  03A3  340C               	retlw	12
  2457  03A4  340A               	retlw	10
  2458  03A5  3409               	retlw	9
  2459  03A6  340A               	retlw	10
  2460  03A7  3409               	retlw	9
  2461  03A8  340A               	retlw	10
  2462  03A9  3409               	retlw	9
  2463  03AA  3400               	retlw	0
  2464  03AB  3400               	retlw	0
  2465  03AC  3400               	retlw	0
  2466  03AD  3400               	retlw	0
  2467  03AE  3400               	retlw	0
  2468  03AF  3400               	retlw	0
  2469  03B0  3400               	retlw	0
  2470  03B1  3400               	retlw	0
  2471  03B2  3400               	retlw	0
  2472  03B3  3400               	retlw	0
  2473  03B4  3400               	retlw	0
  2474  03B5  3400               	retlw	0
  2475  03B6  3400               	retlw	0
  2476  03B7  340A               	retlw	10
  2477  03B8  3409               	retlw	9
  2478  03B9  340A               	retlw	10
  2479  03BA  3409               	retlw	9
  2480  03BB  340D               	retlw	13
  2481  03BC  340D               	retlw	13
  2482  03BD  3410               	retlw	16
  2483  03BE  3410               	retlw	16
  2484  03BF  340F               	retlw	15
  2485  03C0  340F               	retlw	15
  2486  03C1  3410               	retlw	16
  2487  03C2  3410               	retlw	16
  2488  03C3  340F               	retlw	15
  2489  03C4  340F               	retlw	15
  2490  03C5  3410               	retlw	16
  2491  03C6  3410               	retlw	16
  2492  03C7  340F               	retlw	15
  2493  03C8  340F               	retlw	15
  2494  03C9  340D               	retlw	13
  2495  03CA  340E               	retlw	14
  2496  03CB  340D               	retlw	13
  2497  03CC  340E               	retlw	14
  2498  03CD  3400               	retlw	0
  2499  03CE  3400               	retlw	0
  2500  03CF  3400               	retlw	0
  2501  03D0  3400               	retlw	0
  2502  03D1  3400               	retlw	0
  2503  03D2  3400               	retlw	0
  2504  03D3  3400               	retlw	0
  2505  03D4  3400               	retlw	0
  2506  03D5  3400               	retlw	0
  2507  03D6  3400               	retlw	0
  2508  03D7  3400               	retlw	0
  2509  03D8  3400               	retlw	0
  2510  03D9  3400               	retlw	0
  2511  03DA  3407               	retlw	7
  2512  03DB  3408               	retlw	8
  2513  03DC  3408               	retlw	8
  2514  03DD  3408               	retlw	8
  2515  03DE  3463               	retlw	99
  2516  03DF  3463               	retlw	99
  2517  03E0  3463               	retlw	99
  2518  03E1  3463               	retlw	99
  2519  03E2  3463               	retlw	99
  2520  03E3  3463               	retlw	99
  2521  03E4  3463               	retlw	99
  2522  03E5  3463               	retlw	99
  2523  03E6  3463               	retlw	99
  2524  03E7  3463               	retlw	99
  2525  03E8  3463               	retlw	99
  2526  03E9  3463               	retlw	99
  2527  03EA  3463               	retlw	99
  2528  03EB  3463               	retlw	99
  2529  03EC  3463               	retlw	99
  2530  03ED  3463               	retlw	99
  2531  03EE  3463               	retlw	99
  2532  03EF  3463               	retlw	99
  2533  03F0  3400               	retlw	0
  2534  03F1  3400               	retlw	0
  2535  03F2  3400               	retlw	0
  2536  03F3  3400               	retlw	0
  2537  03F4  3400               	retlw	0
  2538  03F5  3400               	retlw	0
  2539  03F6  3400               	retlw	0
  2540  03F7  3400               	retlw	0
  2541  03F8  3400               	retlw	0
  2542  03F9  3400               	retlw	0
  2543  03FA  3400               	retlw	0
  2544  03FB  3400               	retlw	0
  2545  03FC  3400               	retlw	0
  2546  03FD  3408               	retlw	8
  2547  03FE  3408               	retlw	8
  2548  03FF  3408               	retlw	8
  2549  0400  3408               	retlw	8
  2550  0401  3463               	retlw	99
  2551  0402  3463               	retlw	99
  2552  0403  3463               	retlw	99
  2553  0404  3463               	retlw	99
  2554  0405  3463               	retlw	99
  2555  0406  3463               	retlw	99
  2556  0407  3463               	retlw	99
  2557  0408  3463               	retlw	99
  2558  0409  3463               	retlw	99
  2559  040A  3463               	retlw	99
  2560  040B  3463               	retlw	99
  2561  040C  3463               	retlw	99
  2562  040D  3463               	retlw	99
  2563  040E  3463               	retlw	99
  2564  040F  3463               	retlw	99
  2565  0410  3463               	retlw	99
  2566  0411  3463               	retlw	99
  2567  0412  3463               	retlw	99
  2568  0413  3400               	retlw	0
  2569  0414  3400               	retlw	0
  2570  0415  3400               	retlw	0
  2571  0416  3400               	retlw	0
  2572  0417  3400               	retlw	0
  2573  0418  3400               	retlw	0
  2574  0419  3400               	retlw	0
  2575  041A  3400               	retlw	0
  2576  041B  3400               	retlw	0
  2577  041C  3400               	retlw	0
  2578  041D  3400               	retlw	0
  2579  041E  3400               	retlw	0
  2580  041F  3400               	retlw	0
  2581  0420  3408               	retlw	8
  2582  0421  3408               	retlw	8
  2583  0422  3408               	retlw	8
  2584  0423  3408               	retlw	8
  2585  0424  3463               	retlw	99
  2586  0425  3463               	retlw	99
  2587  0426  3463               	retlw	99
  2588  0427  3463               	retlw	99
  2589  0428  3463               	retlw	99
  2590  0429  3463               	retlw	99
  2591  042A  3463               	retlw	99
  2592  042B  3463               	retlw	99
  2593  042C  3463               	retlw	99
  2594  042D  3463               	retlw	99
  2595  042E  3463               	retlw	99
  2596  042F  3463               	retlw	99
  2597  0430  3463               	retlw	99
  2598  0431  3463               	retlw	99
  2599  0432  3463               	retlw	99
  2600  0433  3463               	retlw	99
  2601  0434  3463               	retlw	99
  2602  0435  3463               	retlw	99
  2603  0436  3400               	retlw	0
  2604  0437  3400               	retlw	0
  2605  0438  3400               	retlw	0
  2606  0439  3400               	retlw	0
  2607  043A  3400               	retlw	0
  2608  043B  3400               	retlw	0
  2609  043C  3400               	retlw	0
  2610  043D  3400               	retlw	0
  2611  043E  3400               	retlw	0
  2612  043F  3400               	retlw	0
  2613  0440  3400               	retlw	0
  2614  0441  3400               	retlw	0
  2615  0442  3400               	retlw	0
  2616  0443                     __end_of_ROM_COMBO_Patterns:	
  2617                           
  2618                           	psect	stringtext2
  2619  1000                     __pstringtext2:	
  2620  1000                     _ROM_Sub_Patterns:	
  2621  1000  3400               	retlw	0
  2622  1001  3400               	retlw	0
  2623  1002  3400               	retlw	0
  2624  1003  3400               	retlw	0
  2625  1004  3400               	retlw	0
  2626  1005  3400               	retlw	0
  2627  1006  3400               	retlw	0
  2628  1007  340F               	retlw	15
  2629  1008  340F               	retlw	15
  2630  1009  3400               	retlw	0
  2631  100A  340F               	retlw	15
  2632  100B  340F               	retlw	15
  2633  100C  340F               	retlw	15
  2634  100D  340F               	retlw	15
  2635  100E  3400               	retlw	0
  2636  100F  3400               	retlw	0
  2637  1010  3400               	retlw	0
  2638  1011  3400               	retlw	0
  2639  1012  3400               	retlw	0
  2640  1013  3400               	retlw	0
  2641  1014  3400               	retlw	0
  2642  1015  340F               	retlw	15
  2643  1016  340F               	retlw	15
  2644  1017  3400               	retlw	0
  2645  1018  3400               	retlw	0
  2646  1019  340F               	retlw	15
  2647  101A  340F               	retlw	15
  2648  101B  340F               	retlw	15
  2649  101C  340F               	retlw	15
  2650  101D  3400               	retlw	0
  2651  101E  340F               	retlw	15
  2652  101F  3400               	retlw	0
  2653  1020  340F               	retlw	15
  2654  1021  3400               	retlw	0
  2655  1022  340F               	retlw	15
  2656  1023  340F               	retlw	15
  2657  1024  3400               	retlw	0
  2658  1025  340F               	retlw	15
  2659  1026  3400               	retlw	0
  2660  1027  340F               	retlw	15
  2661  1028  3400               	retlw	0
  2662  1029  340F               	retlw	15
  2663  102A  340F               	retlw	15
  2664  102B  3400               	retlw	0
  2665  102C  340F               	retlw	15
  2666  102D  3400               	retlw	0
  2667  102E  3400               	retlw	0
  2668  102F  3400               	retlw	0
  2669  1030  340F               	retlw	15
  2670  1031  340F               	retlw	15
  2671  1032  3400               	retlw	0
  2672  1033  340F               	retlw	15
  2673  1034  3400               	retlw	0
  2674  1035  340F               	retlw	15
  2675  1036  3400               	retlw	0
  2676  1037  340F               	retlw	15
  2677  1038  340F               	retlw	15
  2678  1039  340F               	retlw	15
  2679  103A  340F               	retlw	15
  2680  103B  340F               	retlw	15
  2681  103C  340F               	retlw	15
  2682  103D  340F               	retlw	15
  2683  103E  340F               	retlw	15
  2684  103F  3400               	retlw	0
  2685  1040  3400               	retlw	0
  2686  1041  3400               	retlw	0
  2687  1042  3400               	retlw	0
  2688  1043  3400               	retlw	0
  2689  1044  3400               	retlw	0
  2690  1045  3400               	retlw	0
  2691  1046  340F               	retlw	15
  2692  1047  340F               	retlw	15
  2693  1048  340F               	retlw	15
  2694  1049  340F               	retlw	15
  2695  104A  340F               	retlw	15
  2696  104B  340F               	retlw	15
  2697  104C  340F               	retlw	15
  2698  104D  340F               	retlw	15
  2699  104E  3400               	retlw	0
  2700  104F  340F               	retlw	15
  2701  1050  3400               	retlw	0
  2702  1051  340F               	retlw	15
  2703  1052  3400               	retlw	0
  2704  1053  340F               	retlw	15
  2705  1054  3400               	retlw	0
  2706  1055  3400               	retlw	0
  2707  1056  3400               	retlw	0
  2708  1057  3400               	retlw	0
  2709  1058  3400               	retlw	0
  2710  1059  3400               	retlw	0
  2711  105A  3400               	retlw	0
  2712  105B  340F               	retlw	15
  2713  105C  3400               	retlw	0
  2714  105D  340F               	retlw	15
  2715  105E  3400               	retlw	0
  2716  105F  340F               	retlw	15
  2717  1060  3400               	retlw	0
  2718  1061  340F               	retlw	15
  2719  1062  3400               	retlw	0
  2720  1063  3400               	retlw	0
  2721  1064  3400               	retlw	0
  2722  1065  3400               	retlw	0
  2723  1066  3400               	retlw	0
  2724  1067  3400               	retlw	0
  2725  1068  3400               	retlw	0
  2726  1069  340F               	retlw	15
  2727  106A  340F               	retlw	15
  2728  106B  340F               	retlw	15
  2729  106C  340F               	retlw	15
  2730  106D  340F               	retlw	15
  2731  106E  340F               	retlw	15
  2732  106F  340F               	retlw	15
  2733  1070  3400               	retlw	0
  2734  1071  3400               	retlw	0
  2735  1072  3400               	retlw	0
  2736  1073  3400               	retlw	0
  2737  1074  3400               	retlw	0
  2738  1075  3400               	retlw	0
  2739  1076  3400               	retlw	0
  2740  1077                     __end_of_ROM_Sub_Patterns:	
  2741                           
  2742                           	psect	stringtext3
  2743  1077                     __pstringtext3:	
  2744  1077                     _ROM_Sub_Patterns_Time:	
  2745  1077  340E               	retlw	14
  2746  1078  3409               	retlw	9
  2747  1079  3400               	retlw	0
  2748  107A  3400               	retlw	0
  2749  107B  3400               	retlw	0
  2750  107C  3400               	retlw	0
  2751  107D  3400               	retlw	0
  2752  107E  340A               	retlw	10
  2753  107F  340A               	retlw	10
  2754  1080  3406               	retlw	6
  2755  1081  3400               	retlw	0
  2756  1082  3400               	retlw	0
  2757  1083  3400               	retlw	0
  2758  1084  3400               	retlw	0
  2759  1085  3419               	retlw	25
  2760  1086  340E               	retlw	14
  2761  1087  3400               	retlw	0
  2762  1088  3400               	retlw	0
  2763  1089  3400               	retlw	0
  2764  108A  3400               	retlw	0
  2765  108B  3400               	retlw	0
  2766  108C  3410               	retlw	16
  2767  108D  340F               	retlw	15
  2768  108E  3408               	retlw	8
  2769  108F  3400               	retlw	0
  2770  1090  3400               	retlw	0
  2771  1091  3400               	retlw	0
  2772  1092  3400               	retlw	0
  2773  1093  3410               	retlw	16
  2774  1094  3408               	retlw	8
  2775  1095  340F               	retlw	15
  2776  1096  3400               	retlw	0
  2777  1097  3400               	retlw	0
  2778  1098  3400               	retlw	0
  2779  1099  3400               	retlw	0
  2780  109A  340B               	retlw	11
  2781  109B  3404               	retlw	4
  2782  109C  340B               	retlw	11
  2783  109D  3404               	retlw	4
  2784  109E  340A               	retlw	10
  2785  109F  3400               	retlw	0
  2786  10A0  3400               	retlw	0
  2787  10A1  340A               	retlw	10
  2788  10A2  3405               	retlw	5
  2789  10A3  340A               	retlw	10
  2790  10A4  3401               	retlw	1
  2791  10A5  3400               	retlw	0
  2792  10A6  3400               	retlw	0
  2793  10A7  3400               	retlw	0
  2794  10A8  3407               	retlw	7
  2795  10A9  3403               	retlw	3
  2796  10AA  3406               	retlw	6
  2797  10AB  3403               	retlw	3
  2798  10AC  3406               	retlw	6
  2799  10AD  3401               	retlw	1
  2800  10AE  3400               	retlw	0
  2801  10AF  340A               	retlw	10
  2802  10B0  340A               	retlw	10
  2803  10B1  3406               	retlw	6
  2804  10B2  3400               	retlw	0
  2805  10B3  3400               	retlw	0
  2806  10B4  3400               	retlw	0
  2807  10B5  3400               	retlw	0
  2808  10B6  3408               	retlw	8
  2809  10B7  3409               	retlw	9
  2810  10B8  3400               	retlw	0
  2811  10B9  3400               	retlw	0
  2812  10BA  3400               	retlw	0
  2813  10BB  3400               	retlw	0
  2814  10BC  3400               	retlw	0
  2815  10BD  3408               	retlw	8
  2816  10BE  3408               	retlw	8
  2817  10BF  3400               	retlw	0
  2818  10C0  3400               	retlw	0
  2819  10C1  3400               	retlw	0
  2820  10C2  3400               	retlw	0
  2821  10C3  3400               	retlw	0
  2822  10C4  3403               	retlw	3
  2823  10C5  3403               	retlw	3
  2824  10C6  3407               	retlw	7
  2825  10C7  3400               	retlw	0
  2826  10C8  3400               	retlw	0
  2827  10C9  3400               	retlw	0
  2828  10CA  3400               	retlw	0
  2829  10CB  3407               	retlw	7
  2830  10CC  3408               	retlw	8
  2831  10CD  3400               	retlw	0
  2832  10CE  3400               	retlw	0
  2833  10CF  3400               	retlw	0
  2834  10D0  3400               	retlw	0
  2835  10D1  3400               	retlw	0
  2836  10D2  3403               	retlw	3
  2837  10D3  3403               	retlw	3
  2838  10D4  3403               	retlw	3
  2839  10D5  3403               	retlw	3
  2840  10D6  3403               	retlw	3
  2841  10D7  3403               	retlw	3
  2842  10D8  3407               	retlw	7
  2843  10D9  340D               	retlw	13
  2844  10DA  340D               	retlw	13
  2845  10DB  3400               	retlw	0
  2846  10DC  3400               	retlw	0
  2847  10DD  3400               	retlw	0
  2848  10DE  3400               	retlw	0
  2849  10DF  3400               	retlw	0
  2850  10E0  3404               	retlw	4
  2851  10E1  3407               	retlw	7
  2852  10E2  3400               	retlw	0
  2853  10E3  3400               	retlw	0
  2854  10E4  3400               	retlw	0
  2855  10E5  3400               	retlw	0
  2856  10E6  3400               	retlw	0
  2857  10E7  3404               	retlw	4
  2858  10E8  3406               	retlw	6
  2859  10E9  3400               	retlw	0
  2860  10EA  3400               	retlw	0
  2861  10EB  3400               	retlw	0
  2862  10EC  3400               	retlw	0
  2863  10ED  3400               	retlw	0
  2864  10EE                     __end_of_ROM_Sub_Patterns_Time:	
  2865  000B                     _INTCONbits	set	11
  2866  0003                     _STATUSbits	set	3
  2867  001E                     _PR2	set	30
  2868  001F                     _T2CONbits	set	31
  2869  001F                     _T2CON	set	31
  2870  000E                     _PORTC	set	14
  2871  000C                     _PORTA	set	12
  2872  000E                     _PORTCbits	set	14
  2873  000C                     _PORTAbits	set	12
  2874  005F                     _GIE	set	95
  2875  005E                     _PEIE	set	94
  2876  0089                     _TMR2IF	set	137
  2877  008C                     _TRISAbits	set	140
  2878  008E                     _TRISCbits	set	142
  2879  008E                     _TRISC	set	142
  2880  008C                     _TRISA	set	140
  2881  0489                     _TMR2IE	set	1161
  2882  010E                     _LATC	set	270
  2883  010C                     _LATA	set	268
  2884  018C                     _ANSELAbits	set	396
  2885  018E                     _ANSELC	set	398
  2886  018C                     _ANSELA	set	396
  2887  0896                     _NVMCON2	set	2198
  2888  0894                     _NVMDATH	set	2196
  2889  0893                     _NVMDATL	set	2195
  2890  0892                     _NVMADRH	set	2194
  2891  0891                     _NVMADRL	set	2193
  2892  0895                     _NVMCON1bits	set	2197
  2893  0919                     _OSCCON1bits	set	2329
  2894  091F                     _OSCFRQbits	set	2335
  2895                           
  2896                           ; #config settings
  2897  0000                     
  2898                           	psect	cinit
  2899  0228                     start_initialization:	
  2900  0228                     __initialization:	
  2901                           
  2902                           ; Initialize objects allocated to BANK0
  2903  0228  30AB               	movlw	low __pidataBANK0
  2904  0229  0084               	movwf	4
  2905  022A  308B               	movlw	(high __pidataBANK0)| (0+128)
  2906  022B  0085               	movwf	5
  2907  022C  3066               	movlw	low __pdataBANK0
  2908  022D  0086               	movwf	6
  2909  022E  3000               	movlw	high __pdataBANK0
  2910  022F  0087               	movwf	7
  2911  0230  3003               	movlw	3
  2912  0231  318B  23B4  3182   	fcall	init_ram
  2913                           
  2914                           ; Initialize objects allocated to BANK1
  2915  0234  30D3               	movlw	low __pidataBANK1
  2916  0235  0084               	movwf	4
  2917  0236  308B               	movlw	(high __pidataBANK1)| (0+128)
  2918  0237  0085               	movwf	5
  2919  0238  30B1               	movlw	low __pdataBANK1
  2920  0239  0086               	movwf	6
  2921  023A  3000               	movlw	high __pdataBANK1
  2922  023B  0087               	movwf	7
  2923  023C  300E               	movlw	14
  2924  023D  318B  23B4  3182   	fcall	init_ram
  2925                           
  2926                           ; Clear objects allocated to COMMON
  2927  0240  01F7               	clrf	__pbssCOMMON& (0+127)
  2928  0241  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  2929  0242  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  2930  0243  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  2931  0244  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  2932                           
  2933                           ; Clear objects allocated to BANK0
  2934  0245  3020               	movlw	low __pbssBANK0
  2935  0246  0084               	movwf	4
  2936  0247  3000               	movlw	high __pbssBANK0
  2937  0248  0085               	movwf	5
  2938  0249  303E               	movlw	62
  2939  024A  318B  23AE  3182   	fcall	clear_ram0
  2940                           
  2941                           ; Clear objects allocated to BANK1
  2942  024D  30BF               	movlw	low __pbssBANK1
  2943  024E  0084               	movwf	4
  2944  024F  3000               	movlw	high __pbssBANK1
  2945  0250  0085               	movwf	5
  2946  0251  300C               	movlw	12
  2947  0252  318B  23AE  3182   	fcall	clear_ram0
  2948  0255                     end_of_initialization:	
  2949                           ;End of C runtime variable initialization code
  2950                           
  2951  0255                     __end_of__initialization:	
  2952  0255  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2953  0256  0020               	movlb	0
  2954  0257  3184  2C43         	ljmp	_main	;jump to C main() function
  2955                           
  2956                           	psect	bssEEDATA
  2957  0000                     __pbssEEDATA:	
  2958  0000                     _EEprom_ColorState:	
  2959  0000  0000               	db	0
  2960  0001  0000               	db	0
  2961  0002  0000               	db	0
  2962  0003                     _EEprom_InPhase:	
  2963  0003  0000               	db	0
  2964  0004  0000               	db	0
  2965  0005  0000               	db	0
  2966  0006                     _EEprom_mode:	
  2967  0006  0000               	db	0
  2968  0007  0000               	db	0
  2969  0008  0000               	db	0
  2970  0009                     _EEprom_Written_Flag:	
  2971  0009  0000               	db	0
  2972                           
  2973                           	psect	bssCOMMON
  2974  0077                     __pbssCOMMON:	
  2975  0077                     _GLOBAL_SYNC_PULSE_Counter:	
  2976  0077                     	ds	1
  2977  0078                     _GLOBAL_combo_patterns_column_index:	
  2978  0078                     	ds	1
  2979  0079                     _OUTPUT_BUFFER:	
  2980  0079                     	ds	1
  2981  007A                     _GLOBAL_sub_patterns_index:	
  2982  007A                     	ds	1
  2983  007B                     _GLOBAL_sub_patterns_column_index:	
  2984  007B                     	ds	1
  2985                           
  2986                           	psect	bssBANK0
  2987  0020                     __pbssBANK0:	
  2988  0020                     _bGLOBAL_InPhase_copy:	
  2989  0020                     	ds	3
  2990  0023                     _GLOBAL_Mode_copy:	
  2991  0023                     	ds	3
  2992  0026                     isr@counter:	
  2993  0026                     	ds	2
  2994  0028                     Update_Input_Mode_Type@toggle:	
  2995  0028                     	ds	1
  2996  0029                     Read_Mode_Input@inputSync:	
  2997  0029                     	ds	1
  2998  002A                     SetOUTPUT@pwmCounter:	
  2999  002A                     	ds	1
  3000  002B                     SetOUTPUT@temporaryGPIO:	
  3001  002B                     	ds	1
  3002  002C                     _earlyOutput:	
  3003  002C                     	ds	1
  3004  002D                     _state:	
  3005  002D                     	ds	1
  3006  002E                     _indexOfMode:	
  3007  002E                     	ds	1
  3008  002F                     _bGiveControlToColorProgram:	
  3009  002F                     	ds	1
  3010  0030                     _GLOCAL_Program_Color:	
  3011  0030                     	ds	1
  3012  0031                     _pwmBool:	
  3013  0031                     	ds	1
  3014  0032                     _GLOBAL_CHANNELS_EN_DUAL:	
  3015  0032                     	ds	1
  3016  0033                     _channelToBeDisplayed:	
  3017  0033                     	ds	1
  3018  0034                     _currentColor:	
  3019  0034                     	ds	1
  3020  0035                     _bGLOBAL_SYNC_Line_PRESSED:	
  3021  0035                     	ds	1
  3022  0036                     _bPrev_COLOR_DETECT_PRESSED:	
  3023  0036                     	ds	1
  3024  0037                     _bCOLOR_DETECT_PRESSED:	
  3025  0037                     	ds	1
  3026  0038                     _bGLOBAL_MODE2_PRESSED:	
  3027  0038                     	ds	1
  3028  0039                     _bGLOBAL_MODE1_PRESSED:	
  3029  0039                     	ds	1
  3030  003A                     _bGLOBAL_ENABLE_LEDS:	
  3031  003A                     	ds	1
  3032  003B                     _bGLOBAL_IS_PROGRAMMING:	
  3033  003B                     	ds	1
  3034  003C                     _bGLOBAL_CHANGING_PATTERN_Enforce:	
  3035  003C                     	ds	1
  3036  003D                     _bGLOBAL_CHANGING_PATTERN:	
  3037  003D                     	ds	1
  3038  003E                     _bGLOBAL_DISABLE_SYNC_Line_PRESSED:	
  3039  003E                     	ds	1
  3040  003F                     _GLOBAL_CHANNELS_EN_copy:	
  3041  003F                     	ds	1
  3042  0040                     _COLOR_DETECT_LOW_counter:	
  3043  0040                     	ds	1
  3044  0041                     _GLOBAL_MODE2_LOW_counter:	
  3045  0041                     	ds	1
  3046  0042                     _GLOBAL_SYNC_Line_LOW_counter:	
  3047  0042                     	ds	1
  3048  0043                     _GLOBAL_MODE1_LOW_counter:	
  3049  0043                     	ds	1
  3050  0044                     _COLOR_DETECT_counter:	
  3051  0044                     	ds	1
  3052  0045                     _GLOBAL_MODE2_counter:	
  3053  0045                     	ds	1
  3054  0046                     _GLOBAL_SYNC_Line_counter:	
  3055  0046                     	ds	1
  3056  0047                     _GLOBAL_MODE1_counter:	
  3057  0047                     	ds	1
  3058  0048                     _GLOBAL_Selected_Mode_Type_copy:	
  3059  0048                     	ds	1
  3060  0049                     _GLOBAL_Selected_Mode_Type:	
  3061  0049                     	ds	1
  3062  004A                     _GLOBAL_Selected_Mode_Number:	
  3063  004A                     	ds	1
  3064  004B                     _GLOBAL_combo_patterns_counter:	
  3065  004B                     	ds	1
  3066  004C                     isr@toggle:	
  3067  004C                     	ds	1
  3068  004D                     isr@pwmCounter:	
  3069  004D                     	ds	1
  3070  004E                     isr@tenMSCounter:	
  3071  004E                     	ds	1
  3072  004F                     _startUpProgram:	
  3073  004F                     	ds	1
  3074  0050                     _GLOBAL_Dummy_Counter2:	
  3075  0050                     	ds	1
  3076  0051                     _GLOBAL_Dummy_Counter:	
  3077  0051                     	ds	1
  3078  0052                     _OUTPUT_BUFFER_COPY:	
  3079  0052                     	ds	1
  3080  0053                     _bGLOBAL_SYNC_SENT:	
  3081  0053                     	ds	1
  3082  0054                     _bGLOBAL_InPhase:	
  3083  0054                     	ds	1
  3084  0055                     _bGLOBAL_END_OF_CYCLE_COND2:	
  3085  0055                     	ds	1
  3086  0056                     _bGLOBAL_END_OF_CYCLE_COND1:	
  3087  0056                     	ds	1
  3088  0057                     _currentColorCounter:	
  3089  0057                     	ds	1
  3090  0058                     _GLOBAL_combo_patterns_index:	
  3091  0058                     	ds	1
  3092  0059                     _GLOBAL_combo_patterns_index_copy:	
  3093  0059                     	ds	1
  3094  005A                     _GLOBAL_sub_patterns_index_copy:	
  3095  005A                     	ds	1
  3096  005B                     _GLOBAL_sub_patterns_timer:	
  3097  005B                     	ds	1
  3098  005C                     _bGLOBAL_STEADY_ON:	
  3099  005C                     	ds	1
  3100  005D                     _bGLOBAL_OUTPUT_BUFFER_CHANGED:	
  3101  005D                     	ds	1
  3102                           
  3103                           	psect	dataBANK0
  3104  0066                     __pdataBANK0:	
  3105  0066                     _colorState:	
  3106  0066                     	ds	3
  3107                           
  3108                           	psect	bssBANK1
  3109  00BF                     __pbssBANK1:	
  3110  00BF                     _colorResetCounter:	
  3111  00BF                     	ds	4
  3112  00C3                     _counter2:	
  3113  00C3                     	ds	4
  3114  00C7                     _counter:	
  3115  00C7                     	ds	4
  3116                           
  3117                           	psect	dataBANK1
  3118  00B1                     __pdataBANK1:	
  3119  00B1                     _CurrentColorMax:	
  3120  00B1                     	ds	14
  3121                           
  3122                           	psect	inittext
  3123  0BB4                     init_ram:	
  3124  0BB4  00FE               	movwf	btemp
  3125  0BB5                     initloop:	
  3126  0BB5  0012               	moviw fsr0++
  3127  0BB6  001E               	movwi fsr1++
  3128  0BB7  0BFE               	decfsz	btemp,f
  3129  0BB8  2BB5               	goto	initloop
  3130  0BB9  3400               	retlw	0
  3131                           
  3132                           	psect	clrtext
  3133  0BAE                     clear_ram0:	
  3134                           ;	Called with FSR0 containing the base address, and
  3135                           ;	WREG with the size to clear
  3136                           
  3137  0BAE  0064               	clrwdt	;clear the watchdog before getting into this loop
  3138  0BAF                     clrloop0:	
  3139  0BAF  0180               	clrf	0	;clear RAM location pointed to by FSR
  3140  0BB0  3101               	addfsr 0,1
  3141  0BB1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3142  0BB2  2BAF               	goto	clrloop0	;have we reached the end yet?
  3143  0BB3  3400               	retlw	0	;all done for this memory range, return
  3144                           
  3145                           	psect	cstackBANK1
  3146  00A0                     __pcstackBANK1:	
  3147  00A0                     ??_SetOUTPUT:	
  3148  00A0                     ??_Update_Input_Mode_Type:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  00A0                     ?___eecpymem:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  00A0                     ?___memcpyee:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157  00A0                     ___eecpymem@from:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160  00A0                     ___memcpyee@from:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163                           
  3164                           ; 1 bytes @ 0x0
  3165  00A0                     	ds	1
  3166  00A1                     ___eecpymem@size:	
  3167  00A1                     ___memcpyee@size:	
  3168                           ; 1 bytes @ 0x1
  3169                           
  3170                           
  3171                           ; 1 bytes @ 0x1
  3172  00A1                     	ds	1
  3173  00A2                     ___eecpymem@cp:	
  3174  00A2                     ___memcpyee@ptr:	
  3175                           ; 1 bytes @ 0x2
  3176                           
  3177                           
  3178                           ; 1 bytes @ 0x2
  3179  00A2                     	ds	1
  3180  00A3                     ___eecpymem@to:	
  3181  00A3                     ___memcpyee@to:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184                           
  3185                           ; 1 bytes @ 0x3
  3186  00A3                     	ds	1
  3187  00A4                     ??___eetoc:	
  3188  00A4                     ?___ctoee:	
  3189                           ; 1 bytes @ 0x4
  3190                           
  3191  00A4                     ___ctoee@data:	
  3192                           ; 1 bytes @ 0x4
  3193                           
  3194                           
  3195                           ; 1 bytes @ 0x4
  3196  00A4                     	ds	1
  3197  00A5                     ??___ctoee:	
  3198  00A5                     ___eetoc@addr:	
  3199                           ; 1 bytes @ 0x5
  3200                           
  3201                           
  3202                           ; 1 bytes @ 0x5
  3203  00A5                     	ds	1
  3204  00A6                     ___eetoc@data:	
  3205  00A6                     ___ctoee@addr:	
  3206                           ; 1 bytes @ 0x6
  3207                           
  3208                           
  3209                           ; 1 bytes @ 0x6
  3210  00A6                     	ds	1
  3211  00A7                     ??_ReWriteEEPROM:	
  3212                           
  3213                           ; 1 bytes @ 0x7
  3214  00A7                     	ds	1
  3215  00A8                     ReWriteEEPROM@i:	
  3216                           
  3217                           ; 1 bytes @ 0x8
  3218  00A8                     	ds	1
  3219  00A9                     ??_WriteEEPROMDefaults:	
  3220  00A9                     ??_INC_EEPROM_MODE:	
  3221                           ; 1 bytes @ 0x9
  3222                           
  3223  00A9                     ??_Increment_Color_State:	
  3224                           ; 1 bytes @ 0x9
  3225                           
  3226                           
  3227                           ; 1 bytes @ 0x9
  3228  00A9                     	ds	1
  3229  00AA                     ??_Initial_Start:	
  3230  00AA                     INC_EEPROM_MODE@Temp_Mode_Data:	
  3231                           ; 1 bytes @ 0xA
  3232                           
  3233                           
  3234                           ; 1 bytes @ 0xA
  3235  00AA                     	ds	2
  3236  00AC                     Initial_Start@read_data:	
  3237                           
  3238                           ; 1 bytes @ 0xC
  3239  00AC                     	ds	1
  3240  00AD                     Initial_Start@i:	
  3241                           
  3242                           ; 1 bytes @ 0xD
  3243  00AD                     	ds	1
  3244  00AE                     ??_main:	
  3245                           
  3246                           ; 1 bytes @ 0xE
  3247  00AE                     	ds	2
  3248  00B0                     main@tempvar1:	
  3249                           
  3250                           ; 1 bytes @ 0x10
  3251  00B0                     	ds	1
  3252                           
  3253                           	psect	cstackCOMMON
  3254  0070                     __pcstackCOMMON:	
  3255  0070                     ?_SetOUTPUT:	
  3256  0070                     ?_setColorState:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259  0070                     ??_setColorState:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262  0070                     ?_Read_Mode_Input:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265  0070                     ??_Read_Mode_Input:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268  0070                     ?_ReWriteEEPROM:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271  0070                     ?_Update_ComboPattern_Index:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274  0070                     ?_ConfigureOscillator:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277  0070                     ?_InitApp:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280  0070                     ?_isr:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283  0070                     ?_GPIO:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286  0070                     ?_WriteEEPROMDefaults:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289  0070                     ?_INC_EEPROM_MODE:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292  0070                     ?_Increment_Color_State:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295  0070                     ?_Update_Input_Mode_Type:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  0070                     ?_Initial_Start:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  0070                     ?_main:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  0070                     ?___eetoc:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0070                     ?i1_GPIO:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0070                     ??i1_GPIO:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  0070                     ?i1_SetOUTPUT:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0070                     ?___wmul:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0070                     i1GPIO@i:	
  3320                           ; 2 bytes @ 0x0
  3321                           
  3322  0070                     ___wmul@multiplier:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325                           
  3326                           ; 2 bytes @ 0x0
  3327  0070                     	ds	1
  3328  0071                     ??i1_SetOUTPUT:	
  3329                           
  3330                           ; 1 bytes @ 0x1
  3331  0071                     	ds	1
  3332  0072                     ___wmul@multiplicand:	
  3333                           
  3334                           ; 2 bytes @ 0x2
  3335  0072                     	ds	2
  3336  0074                     ??___wmul:	
  3337  0074                     ___wmul@product:	
  3338                           ; 1 bytes @ 0x4
  3339                           
  3340                           
  3341                           ; 2 bytes @ 0x4
  3342  0074                     	ds	2
  3343  0076                     isr@temp_data1:	
  3344                           
  3345                           ; 1 bytes @ 0x6
  3346  0076                     	ds	1
  3347                           
  3348                           	psect	cstackBANK0
  3349  005E                     __pcstackBANK0:	
  3350  005E                     ??_isr:	
  3351                           
  3352                           ; 1 bytes @ 0x0
  3353  005E                     	ds	7
  3354  0065                     ??_Update_ComboPattern_Index:	
  3355  0065                     ??_ConfigureOscillator:	
  3356                           ; 1 bytes @ 0x7
  3357                           
  3358  0065                     ??_InitApp:	
  3359                           ; 1 bytes @ 0x7
  3360                           
  3361  0065                     ??_GPIO:	
  3362                           ; 1 bytes @ 0x7
  3363                           
  3364  0065                     ??___eecpymem:	
  3365                           ; 1 bytes @ 0x7
  3366                           
  3367  0065                     ??___memcpyee:	
  3368                           ; 1 bytes @ 0x7
  3369                           
  3370  0065                     GPIO@i:	
  3371                           ; 1 bytes @ 0x7
  3372                           
  3373                           
  3374                           ; 1 bytes @ 0x7
  3375  0065                     	ds	1
  3376                           
  3377                           	psect	maintext
  3378  0443                     __pmaintext:	
  3379 ;;
  3380 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3381 ;;
  3382 ;; *************** function _main *****************
  3383 ;; Defined at:
  3384 ;;		line 1061 in file "main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  tempvar1        1   16[BANK1 ] unsigned char 
  3389 ;;  tester          1    0        unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : B1F/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3403 ;;Total ram usage:        3 bytes
  3404 ;; Hardware stack levels required when called:    8
  3405 ;; This function calls:
  3406 ;;		_ConfigureOscillator
  3407 ;;		_INC_EEPROM_MODE
  3408 ;;		_Increment_Color_State
  3409 ;;		_InitApp
  3410 ;;		_Initial_Start
  3411 ;;		_ReWriteEEPROM
  3412 ;;		_SetOUTPUT
  3413 ;;		_Update_ComboPattern_Index
  3414 ;;		_Update_Input_Mode_Type
  3415 ;; This function is called by:
  3416 ;;		Startup code after reset
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _main
  3422  0443                     _main:	
  3423  0443                     l3602:	
  3424                           ;incstack = 0
  3425                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3426                           
  3427  0443                     l3604:	
  3428                           
  3429                           ;main.c: 1067: ConfigureOscillator();
  3430  0443  318B  23BA  3184   	fcall	_ConfigureOscillator
  3431  0446                     l3606:	
  3432                           
  3433                           ;main.c: 1069: InitApp();
  3434  0446  318C  2433  3184   	fcall	_InitApp
  3435  0449                     l3608:	
  3436                           
  3437                           ;main.c: 1071: Initial_Start();
  3438  0449  318F  2722  3184   	fcall	_Initial_Start
  3439  044C                     l3610:	
  3440                           
  3441                           ;main.c: 1072: bGLOBAL_ENABLE_LEDS = 0;
  3442  044C  0020               	movlb	0	; select bank0
  3443  044D  01BA               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  3444  044E                     l3612:	
  3445                           
  3446                           ;main.c: 1074: {;main.c: 1075: if (!bGLOBAL_IS_PROGRAMMING)
  3447  044E  083B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  3448  044F  1D03               	btfss	3,2
  3449  0450  2C52               	goto	u3731
  3450  0451  2C53               	goto	u3730
  3451  0452                     u3731:	
  3452  0452  2C54               	goto	l3616
  3453  0453                     u3730:	
  3454  0453                     l3614:	
  3455  0453  0064               	clrwdt	;# 
  3456  0454                     l3616:	
  3457                           
  3458                           ;main.c: 1078: Increment_Color_State();
  3459  0454  3186  2636  3184   	fcall	_Increment_Color_State
  3460                           
  3461                           ;main.c: 1080: Update_Input_Mode_Type();
  3462  0457  318C  24A5  3184   	fcall	_Update_Input_Mode_Type
  3463  045A                     l3618:	
  3464                           
  3465                           ;main.c: 1081: if ((GLOBAL_SYNC_Line_counter == 9+0) && (!bGLOBAL_SYNC_Line_PRESSED))
  3466  045A  3009               	movlw	9
  3467  045B  0020               	movlb	0	; select bank0
  3468  045C  0646               	xorwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  3469  045D  1D03               	btfss	3,2
  3470  045E  2C60               	goto	u3741
  3471  045F  2C61               	goto	u3740
  3472  0460                     u3741:	
  3473  0460  2C70               	goto	l3628
  3474  0461                     u3740:	
  3475  0461                     l3620:	
  3476  0461  0835               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  3477  0462  1D03               	btfss	3,2
  3478  0463  2C65               	goto	u3751
  3479  0464  2C66               	goto	u3750
  3480  0465                     u3751:	
  3481  0465  2C70               	goto	l3628
  3482  0466                     u3750:	
  3483  0466                     l3622:	
  3484                           
  3485                           ;main.c: 1082: {;main.c: 1083: bGLOBAL_SYNC_Line_PRESSED = 1;
  3486  0466  3001               	movlw	1
  3487  0467  0021               	movlb	1	; select bank1
  3488  0468  00AE               	movwf	??_main^(0+128)
  3489  0469  082E               	movf	??_main^(0+128),w
  3490  046A  0020               	movlb	0	; select bank0
  3491  046B  00B5               	movwf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  3492  046C                     l3624:	
  3493                           
  3494                           ;main.c: 1084: bGLOBAL_ENABLE_LEDS = 0;
  3495  046C  01BA               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  3496  046D                     l3626:	
  3497                           
  3498                           ;main.c: 1085: SetOUTPUT();
  3499  046D  3187  272C  3184   	fcall	_SetOUTPUT
  3500  0470                     l3628:	
  3501                           
  3502                           ;main.c: 1086: };main.c: 1087: if (bGLOBAL_SYNC_Line_PRESSED && (!bGLOBAL_IS_PROGRAMMING
      +                          ))
  3503  0470  0020               	movlb	0	; select bank0
  3504  0471  0835               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  3505  0472  1903               	btfsc	3,2
  3506  0473  2C75               	goto	u3761
  3507  0474  2C76               	goto	u3760
  3508  0475                     u3761:	
  3509  0475  2CEA               	goto	l3672
  3510  0476                     u3760:	
  3511  0476                     l3630:	
  3512  0476  083B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  3513  0477  1D03               	btfss	3,2
  3514  0478  2C7A               	goto	u3771
  3515  0479  2C7B               	goto	u3770
  3516  047A                     u3771:	
  3517  047A  2CEA               	goto	l3672
  3518  047B                     u3770:	
  3519  047B                     l3632:	
  3520                           
  3521                           ;main.c: 1088: {;main.c: 1089: GLOBAL_Dummy_Counter = 0;
  3522  047B  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3523  047C                     l482:	
  3524                           ;main.c: 1090: while ((!(PORTAbits.RA5)) && (GLOBAL_Dummy_Counter < 199)) {}
  3525                           
  3526  047C  1A8C               	btfsc	12,5	;volatile
  3527  047D  2C7F               	goto	u3781
  3528  047E  2C80               	goto	u3780
  3529  047F                     u3781:	
  3530  047F  2C86               	goto	l3636
  3531  0480                     u3780:	
  3532  0480                     l3634:	
  3533  0480  30C7               	movlw	199
  3534  0481  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3535  0482  1C03               	skipc
  3536  0483  2C85               	goto	u3791
  3537  0484  2C86               	goto	u3790
  3538  0485                     u3791:	
  3539  0485  2C7C               	goto	l482
  3540  0486                     u3790:	
  3541  0486                     l3636:	
  3542                           
  3543                           ;main.c: 1091: tempvar1 = GLOBAL_Dummy_Counter;
  3544  0486  0851               	movf	_GLOBAL_Dummy_Counter,w	;volatile
  3545  0487  0021               	movlb	1	; select bank1
  3546  0488  00AE               	movwf	??_main^(0+128)
  3547  0489  082E               	movf	??_main^(0+128),w
  3548  048A  00B0               	movwf	main@tempvar1^(0+128)
  3549  048B  0064               	clrwdt	;# 
  3550                           
  3551                           ;main.c: 1093: if (tempvar1 > 198)
  3552  048C  30C7               	movlw	199
  3553  048D  0021               	movlb	1	; select bank1
  3554  048E  0230               	subwf	main@tempvar1^(0+128),w
  3555  048F  1C03               	skipc
  3556  0490  2C92               	goto	u3801
  3557  0491  2C93               	goto	u3800
  3558  0492                     u3801:	
  3559  0492  2CBF               	goto	l3654
  3560  0493                     u3800:	
  3561  0493                     l3638:	
  3562                           
  3563                           ;main.c: 1094: {;main.c: 1095: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  3564  0493  0020               	movlb	0	; select bank0
  3565  0494  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  3566  0495  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  3567  0496  0086               	movwf	6
  3568  0497  0187               	clrf	7
  3569  0498  0181               	clrf	1
  3570  0499                     l3640:	
  3571                           
  3572                           ;main.c: 1096: bGLOBAL_CHANGING_PATTERN = 0;
  3573  0499  01BD               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  3574  049A                     l3642:	
  3575                           
  3576                           ;main.c: 1097: bGLOBAL_InPhase = !bGLOBAL_InPhase;
  3577  049A  0854               	movf	_bGLOBAL_InPhase,w	;volatile
  3578  049B  1903               	btfsc	3,2
  3579  049C  2C9E               	goto	u3811
  3580  049D  2CA0               	goto	u3810
  3581  049E                     u3811:	
  3582  049E  3001               	movlw	1
  3583  049F  2CA1               	goto	u3820
  3584  04A0                     u3810:	
  3585  04A0  3000               	movlw	0
  3586  04A1                     u3820:	
  3587  04A1  0021               	movlb	1	; select bank1
  3588  04A2  00AE               	movwf	??_main^(0+128)
  3589  04A3  082E               	movf	??_main^(0+128),w
  3590  04A4  0020               	movlb	0	; select bank0
  3591  04A5  00D4               	movwf	_bGLOBAL_InPhase	;volatile
  3592  04A6                     l3644:	
  3593                           
  3594                           ;main.c: 1098: bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type] = bGLOBAL_InPhase;
  3595  04A6  0854               	movf	_bGLOBAL_InPhase,w	;volatile
  3596  04A7  0021               	movlb	1	; select bank1
  3597  04A8  00AE               	movwf	??_main^(0+128)
  3598  04A9  0020               	movlb	0	; select bank0
  3599  04AA  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  3600  04AB  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  3601  04AC  0086               	movwf	6
  3602  04AD  0187               	clrf	7
  3603  04AE  0021               	movlb	1	; select bank1
  3604  04AF  082E               	movf	??_main^(0+128),w
  3605  04B0  0081               	movwf	1
  3606  04B1                     l3646:	
  3607                           
  3608                           ;main.c: 1099: bGLOBAL_IS_PROGRAMMING = 1;
  3609  04B1  3001               	movlw	1
  3610  04B2  00AE               	movwf	??_main^(0+128)
  3611  04B3  082E               	movf	??_main^(0+128),w
  3612  04B4  0020               	movlb	0	; select bank0
  3613  04B5  00BB               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  3614  04B6                     l3648:	
  3615                           
  3616                           ;main.c: 1100: SetOUTPUT();
  3617  04B6  3187  272C  3184   	fcall	_SetOUTPUT
  3618  04B9                     l3650:	
  3619                           
  3620                           ;main.c: 1101: ReWriteEEPROM();
  3621  04B9  318D  250E  3184   	fcall	_ReWriteEEPROM
  3622  04BC                     l3652:	
  3623                           
  3624                           ;main.c: 1102: Update_ComboPattern_Index();
  3625  04BC  3187  27BF  3184   	fcall	_Update_ComboPattern_Index
  3626  04BF                     l3654:	
  3627                           
  3628                           ;main.c: 1103: };main.c: 1104: if (tempvar1 < 199)
  3629  04BF  30C7               	movlw	199
  3630  04C0  0021               	movlb	1	; select bank1
  3631  04C1  0230               	subwf	main@tempvar1^(0+128),w
  3632  04C2  1803               	skipnc
  3633  04C3  2CC5               	goto	u3831
  3634  04C4  2CC6               	goto	u3830
  3635  04C5                     u3831:	
  3636  04C5  2CEA               	goto	l3672
  3637  04C6                     u3830:	
  3638  04C6                     l3656:	
  3639                           
  3640                           ;main.c: 1105: {;main.c: 1106: GLOBAL_Dummy_Counter = 0;
  3641  04C6  0020               	movlb	0	; select bank0
  3642  04C7  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3643  04C8                     l489:	
  3644                           ;main.c: 1107: while ((PORTAbits.RA5) && GLOBAL_Dummy_Counter < 2) {}
  3645                           
  3646  04C8  1E8C               	btfss	12,5	;volatile
  3647  04C9  2CCB               	goto	u3841
  3648  04CA  2CCC               	goto	u3840
  3649  04CB                     u3841:	
  3650  04CB  2CD2               	goto	l3660
  3651  04CC                     u3840:	
  3652  04CC                     l3658:	
  3653  04CC  3002               	movlw	2
  3654  04CD  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3655  04CE  1C03               	skipc
  3656  04CF  2CD1               	goto	u3851
  3657  04D0  2CD2               	goto	u3850
  3658  04D1                     u3851:	
  3659  04D1  2CC8               	goto	l489
  3660  04D2                     u3850:	
  3661  04D2                     l3660:	
  3662                           
  3663                           ;main.c: 1108: if (GLOBAL_Dummy_Counter > 1)
  3664  04D2  3002               	movlw	2
  3665  04D3  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3666  04D4  1C03               	skipc
  3667  04D5  2CD7               	goto	u3861
  3668  04D6  2CD8               	goto	u3860
  3669  04D7                     u3861:	
  3670  04D7  2CEA               	goto	l3672
  3671  04D8                     u3860:	
  3672  04D8                     l3662:	
  3673                           
  3674                           ;main.c: 1109: {;main.c: 1110: bGLOBAL_CHANGING_PATTERN = 1;
  3675  04D8  3001               	movlw	1
  3676  04D9  0021               	movlb	1	; select bank1
  3677  04DA  00AE               	movwf	??_main^(0+128)
  3678  04DB  082E               	movf	??_main^(0+128),w
  3679  04DC  0020               	movlb	0	; select bank0
  3680  04DD  00BD               	movwf	_bGLOBAL_CHANGING_PATTERN	;volatile
  3681  04DE                     l3664:	
  3682                           
  3683                           ;main.c: 1111: INC_EEPROM_MODE();
  3684  04DE  318D  25A7  3184   	fcall	_INC_EEPROM_MODE
  3685  04E1                     l3666:	
  3686                           
  3687                           ;main.c: 1112: GLOBAL_Dummy_Counter = 0;
  3688  04E1  0020               	movlb	0	; select bank0
  3689  04E2  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3690  04E3                     l3668:	
  3691                           
  3692                           ;main.c: 1113: bGLOBAL_IS_PROGRAMMING = 1;
  3693  04E3  3001               	movlw	1
  3694  04E4  0021               	movlb	1	; select bank1
  3695  04E5  00AE               	movwf	??_main^(0+128)
  3696  04E6  082E               	movf	??_main^(0+128),w
  3697  04E7  0020               	movlb	0	; select bank0
  3698  04E8  00BB               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  3699  04E9                     l3670:	
  3700                           
  3701                           ;main.c: 1114: currentColorCounter = 0;
  3702  04E9  01D7               	clrf	_currentColorCounter	;volatile
  3703  04EA                     l3672:	
  3704                           
  3705                           ;main.c: 1115: };main.c: 1116: };main.c: 1117: };main.c: 1119: if (((GLOBAL_SYNC_Line_LO
      +                          W_counter > 3) || (GLOBAL_Dummy_Counter > 4)) && (!bGLOBAL_CHANGING_PATTERN_Enforce) && 
      +                          bGLOBAL_CHANGING_PATTERN)
  3706  04EA  3004               	movlw	4
  3707  04EB  0020               	movlb	0	; select bank0
  3708  04EC  0242               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  3709  04ED  1803               	skipnc
  3710  04EE  2CF0               	goto	u3871
  3711  04EF  2CF1               	goto	u3870
  3712  04F0                     u3871:	
  3713  04F0  2CF7               	goto	l3676
  3714  04F1                     u3870:	
  3715  04F1                     l3674:	
  3716  04F1  3005               	movlw	5
  3717  04F2  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3718  04F3  1C03               	skipc
  3719  04F4  2CF6               	goto	u3881
  3720  04F5  2CF7               	goto	u3880
  3721  04F6                     u3881:	
  3722  04F6  2D09               	goto	l3686
  3723  04F7                     u3880:	
  3724  04F7                     l3676:	
  3725  04F7  083C               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  3726  04F8  1D03               	btfss	3,2
  3727  04F9  2CFB               	goto	u3891
  3728  04FA  2CFC               	goto	u3890
  3729  04FB                     u3891:	
  3730  04FB  2D09               	goto	l3686
  3731  04FC                     u3890:	
  3732  04FC                     l3678:	
  3733  04FC  083D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  3734  04FD  1903               	btfsc	3,2
  3735  04FE  2D00               	goto	u3901
  3736  04FF  2D01               	goto	u3900
  3737  0500                     u3901:	
  3738  0500  2D09               	goto	l3686
  3739  0501                     u3900:	
  3740  0501                     l3680:	
  3741                           
  3742                           ;main.c: 1120: {;main.c: 1121: bGLOBAL_CHANGING_PATTERN_Enforce = 1;
  3743  0501  3001               	movlw	1
  3744  0502  0021               	movlb	1	; select bank1
  3745  0503  00AE               	movwf	??_main^(0+128)
  3746  0504  082E               	movf	??_main^(0+128),w
  3747  0505  0020               	movlb	0	; select bank0
  3748  0506  00BC               	movwf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  3749  0507                     l3682:	
  3750                           
  3751                           ;main.c: 1122: GLOBAL_Dummy_Counter = 0;
  3752  0507  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3753  0508                     l3684:	
  3754                           
  3755                           ;main.c: 1123: (PORTAbits.RA4) = 1;
  3756  0508  160C               	bsf	12,4	;volatile
  3757  0509                     l3686:	
  3758                           
  3759                           ;main.c: 1124: };main.c: 1126: if (bGLOBAL_CHANGING_PATTERN_Enforce && (GLOBAL_Dummy_Cou
      +                          nter > 12))
  3760  0509  083C               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  3761  050A  1903               	btfsc	3,2
  3762  050B  2D0D               	goto	u3911
  3763  050C  2D0E               	goto	u3910
  3764  050D                     u3911:	
  3765  050D  2D1C               	goto	l3696
  3766  050E                     u3910:	
  3767  050E                     l3688:	
  3768  050E  300D               	movlw	13
  3769  050F  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3770  0510  1C03               	skipc
  3771  0511  2D13               	goto	u3921
  3772  0512  2D14               	goto	u3920
  3773  0513                     u3921:	
  3774  0513  2D1C               	goto	l3696
  3775  0514                     u3920:	
  3776  0514                     l3690:	
  3777                           
  3778                           ;main.c: 1127: {;main.c: 1128: GLOBAL_Dummy_Counter = 0;
  3779  0514  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3780  0515                     l3692:	
  3781                           
  3782                           ;main.c: 1129: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 1;
  3783  0515  3001               	movlw	1
  3784  0516  0021               	movlb	1	; select bank1
  3785  0517  00AE               	movwf	??_main^(0+128)
  3786  0518  082E               	movf	??_main^(0+128),w
  3787  0519  0020               	movlb	0	; select bank0
  3788  051A  00BE               	movwf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  3789  051B                     l3694:	
  3790                           
  3791                           ;main.c: 1130: (PORTAbits.RA4) = 0;
  3792  051B  120C               	bcf	12,4	;volatile
  3793  051C                     l3696:	
  3794                           
  3795                           ;main.c: 1131: };main.c: 1133: if (bGLOBAL_DISABLE_SYNC_Line_PRESSED)
  3796  051C  083E               	movf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED,w	;volatile
  3797  051D  1903               	btfsc	3,2
  3798  051E  2D20               	goto	u3931
  3799  051F  2D21               	goto	u3930
  3800  0520                     u3931:	
  3801  0520  2D2E               	goto	l3706
  3802  0521                     u3930:	
  3803  0521                     l3698:	
  3804                           
  3805                           ;main.c: 1134: {;main.c: 1135: if (!(PORTAbits.RA5))
  3806  0521  1A8C               	btfsc	12,5	;volatile
  3807  0522  2D24               	goto	u3941
  3808  0523  2D25               	goto	u3940
  3809  0524                     u3941:	
  3810  0524  2D27               	goto	l3702
  3811  0525                     u3940:	
  3812  0525                     l3700:	
  3813                           
  3814                           ;main.c: 1136: {;main.c: 1137: GLOBAL_Dummy_Counter = 0;
  3815  0525  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  3816                           
  3817                           ;main.c: 1138: GLOBAL_SYNC_Line_counter = 0;
  3818  0526  01C6               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  3819  0527                     l3702:	
  3820                           
  3821                           ;main.c: 1139: };main.c: 1140: if (GLOBAL_Dummy_Counter > 7 + 3)
  3822  0527  300B               	movlw	11
  3823  0528  0251               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  3824  0529  1C03               	skipc
  3825  052A  2D2C               	goto	u3951
  3826  052B  2D2D               	goto	u3950
  3827  052C                     u3951:	
  3828  052C  2D2E               	goto	l3706
  3829  052D                     u3950:	
  3830  052D                     l3704:	
  3831                           
  3832                           ;main.c: 1141: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 0;
  3833  052D  01BE               	clrf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  3834  052E                     l3706:	
  3835                           
  3836                           ;main.c: 1142: };main.c: 1144: if (!bGLOBAL_SYNC_Line_PRESSED)
  3837  052E  0835               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  3838  052F  1D03               	btfss	3,2
  3839  0530  2D32               	goto	u3961
  3840  0531  2D33               	goto	u3960
  3841  0532                     u3961:	
  3842  0532  2C4E               	goto	l3612
  3843  0533                     u3960:	
  3844  0533                     l3708:	
  3845                           
  3846                           ;main.c: 1145: {;main.c: 1146: bGLOBAL_ENABLE_LEDS = 1;
  3847  0533  3001               	movlw	1
  3848  0534  0021               	movlb	1	; select bank1
  3849  0535  00AE               	movwf	??_main^(0+128)
  3850  0536  082E               	movf	??_main^(0+128),w
  3851  0537  0020               	movlb	0	; select bank0
  3852  0538  00BA               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  3853  0539                     l3710:	
  3854                           
  3855                           ;main.c: 1147: bGLOBAL_CHANGING_PATTERN = 0;
  3856  0539  01BD               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  3857  053A                     l3712:	
  3858                           
  3859                           ;main.c: 1148: bGLOBAL_CHANGING_PATTERN_Enforce = 0;
  3860  053A  01BC               	clrf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  3861  053B                     l3714:	
  3862                           
  3863                           ;main.c: 1149: bGLOBAL_IS_PROGRAMMING = 0;
  3864  053B  01BB               	clrf	_bGLOBAL_IS_PROGRAMMING	;volatile
  3865  053C  2C4E               	goto	l3612
  3866  053D  3182  2A26         	ljmp	start
  3867  053F                     __end_of_main:	
  3868                           
  3869                           	psect	text1
  3870  072C                     __ptext1:	
  3871 ;; *************** function _SetOUTPUT *****************
  3872 ;; Defined at:
  3873 ;;		line 386 in file "main.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    4
  3894 ;; This function calls:
  3895 ;;		_GPIO
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _SetOUTPUT
  3903  072C                     _SetOUTPUT:	
  3904  072C                     l3162:	
  3905                           ;incstack = 0
  3906                           ; Regs used in _SetOUTPUT: [wreg+status,2+status,0+pclath+cstack]
  3907                           
  3908                           
  3909                           ;main.c: 388: static unsigned char temporaryGPIO = 0x00;;main.c: 389: static unsigned ch
      +                          ar pwmCounter = 0;;main.c: 390: if(startUpProgram>5)
  3910  072C  3006               	movlw	6
  3911  072D  0020               	movlb	0	; select bank0
  3912  072E  024F               	subwf	_startUpProgram,w	;volatile
  3913  072F  1C03               	skipc
  3914  0730  2F32               	goto	u2931
  3915  0731  2F33               	goto	u2930
  3916  0732                     u2931:	
  3917  0732  2FBE               	goto	l286
  3918  0733                     u2930:	
  3919  0733                     l3164:	
  3920                           
  3921                           ;main.c: 391: {;main.c: 392: if(bGiveControlToColorProgram == 0)
  3922  0733  082F               	movf	_bGiveControlToColorProgram,w	;volatile
  3923  0734  1D03               	btfss	3,2
  3924  0735  2F37               	goto	u2941
  3925  0736  2F38               	goto	u2940
  3926  0737                     u2941:	
  3927  0737  2FBE               	goto	l286
  3928  0738                     u2940:	
  3929  0738                     l3166:	
  3930                           
  3931                           ;main.c: 393: {;main.c: 394: if (bGLOBAL_ENABLE_LEDS && !bCOLOR_DETECT_PRESSED)
  3932  0738  083A               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  3933  0739  1903               	btfsc	3,2
  3934  073A  2F3C               	goto	u2951
  3935  073B  2F3D               	goto	u2950
  3936  073C                     u2951:	
  3937  073C  2FA0               	goto	l3202
  3938  073D                     u2950:	
  3939  073D                     l3168:	
  3940  073D  0837               	movf	_bCOLOR_DETECT_PRESSED,w	;volatile
  3941  073E  1D03               	btfss	3,2
  3942  073F  2F41               	goto	u2961
  3943  0740  2F42               	goto	u2960
  3944  0741                     u2961:	
  3945  0741  2FA0               	goto	l3202
  3946  0742                     u2960:	
  3947  0742                     l3170:	
  3948                           
  3949                           ;main.c: 395: {;main.c: 404: if(currentColor == 0)
  3950  0742  0834               	movf	_currentColor,w	;volatile
  3951  0743  1D03               	btfss	3,2
  3952  0744  2F46               	goto	u2971
  3953  0745  2F47               	goto	u2970
  3954  0746                     u2971:	
  3955  0746  2F4F               	goto	l3174
  3956  0747                     u2970:	
  3957  0747                     l3172:	
  3958                           
  3959                           ;main.c: 405: {;main.c: 406: temporaryGPIO = OUTPUT_BUFFER & (0x01|0x20);
  3960  0747  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  3961  0748  3921               	andlw	33
  3962  0749  0021               	movlb	1	; select bank1
  3963  074A  00A0               	movwf	??_SetOUTPUT^(0+128)
  3964  074B  0820               	movf	??_SetOUTPUT^(0+128),w
  3965  074C  0020               	movlb	0	; select bank0
  3966  074D  00AB               	movwf	SetOUTPUT@temporaryGPIO
  3967                           
  3968                           ;main.c: 407: }
  3969  074E  2F78               	goto	l3186
  3970  074F                     l3174:	
  3971                           
  3972                           ;main.c: 408: else if(currentColor ==1)
  3973  074F  0334               	decf	_currentColor,w	;volatile
  3974  0750  1D03               	btfss	3,2
  3975  0751  2F53               	goto	u2981
  3976  0752  2F54               	goto	u2980
  3977  0753                     u2981:	
  3978  0753  2F5C               	goto	l3178
  3979  0754                     u2980:	
  3980  0754                     l3176:	
  3981                           
  3982                           ;main.c: 409: {;main.c: 410: temporaryGPIO = OUTPUT_BUFFER & (0x02|0x20);
  3983  0754  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  3984  0755  3922               	andlw	34
  3985  0756  0021               	movlb	1	; select bank1
  3986  0757  00A0               	movwf	??_SetOUTPUT^(0+128)
  3987  0758  0820               	movf	??_SetOUTPUT^(0+128),w
  3988  0759  0020               	movlb	0	; select bank0
  3989  075A  00AB               	movwf	SetOUTPUT@temporaryGPIO
  3990                           
  3991                           ;main.c: 411: }
  3992  075B  2F78               	goto	l3186
  3993  075C                     l3178:	
  3994                           
  3995                           ;main.c: 412: else if(currentColor ==2)
  3996  075C  3002               	movlw	2
  3997  075D  0634               	xorwf	_currentColor,w	;volatile
  3998  075E  1D03               	btfss	3,2
  3999  075F  2F61               	goto	u2991
  4000  0760  2F62               	goto	u2990
  4001  0761                     u2991:	
  4002  0761  2F6A               	goto	l3182
  4003  0762                     u2990:	
  4004  0762                     l3180:	
  4005                           
  4006                           ;main.c: 413: {;main.c: 414: temporaryGPIO = OUTPUT_BUFFER & (0x04|0x20);
  4007  0762  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  4008  0763  3924               	andlw	36
  4009  0764  0021               	movlb	1	; select bank1
  4010  0765  00A0               	movwf	??_SetOUTPUT^(0+128)
  4011  0766  0820               	movf	??_SetOUTPUT^(0+128),w
  4012  0767  0020               	movlb	0	; select bank0
  4013  0768  00AB               	movwf	SetOUTPUT@temporaryGPIO
  4014                           
  4015                           ;main.c: 415: }
  4016  0769  2F78               	goto	l3186
  4017  076A                     l3182:	
  4018                           
  4019                           ;main.c: 416: else if(currentColor ==3)
  4020  076A  3003               	movlw	3
  4021  076B  0634               	xorwf	_currentColor,w	;volatile
  4022  076C  1D03               	btfss	3,2
  4023  076D  2F6F               	goto	u3001
  4024  076E  2F70               	goto	u3000
  4025  076F                     u3001:	
  4026  076F  2F78               	goto	l271
  4027  0770                     u3000:	
  4028  0770                     l3184:	
  4029                           
  4030                           ;main.c: 417: {;main.c: 418: temporaryGPIO = OUTPUT_BUFFER & (0x08|0x20);
  4031  0770  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  4032  0771  3928               	andlw	40
  4033  0772  0021               	movlb	1	; select bank1
  4034  0773  00A0               	movwf	??_SetOUTPUT^(0+128)
  4035  0774  0820               	movf	??_SetOUTPUT^(0+128),w
  4036  0775  0020               	movlb	0	; select bank0
  4037  0776  00AB               	movwf	SetOUTPUT@temporaryGPIO
  4038  0777  2F78               	goto	l3186
  4039  0778                     l271:	
  4040  0778                     l3186:	
  4041                           
  4042                           ;main.c: 419: };main.c: 448: if(pwmBool == 1)
  4043  0778  0331               	decf	_pwmBool,w	;volatile
  4044  0779  1D03               	btfss	3,2
  4045  077A  2F7C               	goto	u3011
  4046  077B  2F7D               	goto	u3010
  4047  077C                     u3011:	
  4048  077C  2F9B               	goto	l3200
  4049  077D                     u3010:	
  4050  077D                     l3188:	
  4051                           
  4052                           ;main.c: 449: {;main.c: 450: pwmCounter++;
  4053  077D  3001               	movlw	1
  4054  077E  0021               	movlb	1	; select bank1
  4055  077F  00A0               	movwf	??_SetOUTPUT^(0+128)
  4056  0780  0820               	movf	??_SetOUTPUT^(0+128),w
  4057  0781  0020               	movlb	0	; select bank0
  4058  0782  07AA               	addwf	SetOUTPUT@pwmCounter,f
  4059  0783                     l3190:	
  4060                           
  4061                           ;main.c: 451: if(pwmCounter<4)
  4062  0783  3004               	movlw	4
  4063  0784  022A               	subwf	SetOUTPUT@pwmCounter,w
  4064  0785  1803               	skipnc
  4065  0786  2F88               	goto	u3021
  4066  0787  2F89               	goto	u3020
  4067  0788                     u3021:	
  4068  0788  2F8E               	goto	l3194
  4069  0789                     u3020:	
  4070  0789                     l3192:	
  4071                           
  4072                           ;main.c: 452: {;main.c: 453: GPIO(temporaryGPIO);
  4073  0789  082B               	movf	SetOUTPUT@temporaryGPIO,w
  4074  078A  318C  2458  3187   	fcall	_GPIO
  4075                           
  4076                           ;main.c: 454: }
  4077  078D  2F92               	goto	l3196
  4078  078E                     l3194:	
  4079                           
  4080                           ;main.c: 455: else;main.c: 456: {;main.c: 457: GPIO(0);
  4081  078E  3000               	movlw	0
  4082  078F  318C  2458  3187   	fcall	_GPIO
  4083  0792                     l3196:	
  4084                           
  4085                           ;main.c: 458: };main.c: 460: if(pwmCounter>10)
  4086  0792  300B               	movlw	11
  4087  0793  0020               	movlb	0	; select bank0
  4088  0794  022A               	subwf	SetOUTPUT@pwmCounter,w
  4089  0795  1C03               	skipc
  4090  0796  2F98               	goto	u3031
  4091  0797  2F99               	goto	u3030
  4092  0798                     u3031:	
  4093  0798  2FBE               	goto	l266
  4094  0799                     u3030:	
  4095  0799                     l3198:	
  4096                           
  4097                           ;main.c: 461: {;main.c: 462: pwmCounter = 0;
  4098  0799  01AA               	clrf	SetOUTPUT@pwmCounter
  4099  079A  2FBE               	goto	l286
  4100  079B                     l3200:	
  4101                           
  4102                           ;main.c: 465: else;main.c: 466: {;main.c: 467: GPIO(temporaryGPIO);
  4103  079B  082B               	movf	SetOUTPUT@temporaryGPIO,w
  4104  079C  318C  2458  3187   	fcall	_GPIO
  4105  079F  2FBE               	goto	l286
  4106  07A0                     l3202:	
  4107                           
  4108                           ;main.c: 470: else;main.c: 471: {;main.c: 472: if (bGLOBAL_IS_PROGRAMMING)
  4109  07A0  083B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  4110  07A1  1903               	btfsc	3,2
  4111  07A2  2FA4               	goto	u3041
  4112  07A3  2FA5               	goto	u3040
  4113  07A4                     u3041:	
  4114  07A4  2FB9               	goto	l3212
  4115  07A5                     u3040:	
  4116  07A5                     l3204:	
  4117                           
  4118                           ;main.c: 473: {;main.c: 474: if (!bGLOBAL_CHANGING_PATTERN)
  4119  07A5  083D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  4120  07A6  1D03               	btfss	3,2
  4121  07A7  2FA9               	goto	u3051
  4122  07A8  2FAA               	goto	u3050
  4123  07A9                     u3051:	
  4124  07A9  2FBE               	goto	l286
  4125  07AA                     u3050:	
  4126  07AA                     l3206:	
  4127                           
  4128                           ;main.c: 475: {;main.c: 476: if (bGLOBAL_InPhase)
  4129  07AA  0854               	movf	_bGLOBAL_InPhase,w	;volatile
  4130  07AB  1903               	btfsc	3,2
  4131  07AC  2FAE               	goto	u3061
  4132  07AD  2FAF               	goto	u3060
  4133  07AE                     u3061:	
  4134  07AE  2FB4               	goto	l3210
  4135  07AF                     u3060:	
  4136  07AF                     l3208:	
  4137                           
  4138                           ;main.c: 477: GPIO(1);
  4139  07AF  3001               	movlw	1
  4140  07B0  318C  2458  3187   	fcall	_GPIO
  4141  07B3  2FBE               	goto	l286
  4142  07B4                     l3210:	
  4143                           
  4144                           ;main.c: 478: else;main.c: 479: GPIO(0);
  4145  07B4  3000               	movlw	0
  4146  07B5  318C  2458  3187   	fcall	_GPIO
  4147  07B8  2FBE               	goto	l286
  4148  07B9                     l3212:	
  4149                           
  4150                           ;main.c: 482: {;main.c: 483: GPIO(0);
  4151  07B9  3000               	movlw	0
  4152  07BA  318C  2458  3187   	fcall	_GPIO
  4153  07BD  2FBE               	goto	l286
  4154  07BE                     l266:	
  4155  07BE                     l286:	
  4156  07BE  0008               	return
  4157  07BF                     __end_of_SetOUTPUT:	
  4158                           
  4159                           	psect	text2
  4160  0F22                     __ptext2:	
  4161 ;; *************** function _Initial_Start *****************
  4162 ;; Defined at:
  4163 ;;		line 991 in file "main.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  i               1   13[BANK1 ] unsigned char 
  4168 ;;  read_data       1   12[BANK1 ] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:        4 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    7
  4185 ;; This function calls:
  4186 ;;		_Update_ComboPattern_Index
  4187 ;;		_Update_Input_Mode_Type
  4188 ;;		_WriteEEPROMDefaults
  4189 ;;		___eetoc
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _Initial_Start
  4197  0F22                     _Initial_Start:	
  4198  0F22                     l3332:	
  4199                           ;incstack = 0
  4200                           ; Regs used in _Initial_Start: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4201                           
  4202                           
  4203                           ;main.c: 993: unsigned char read_data;;main.c: 994: read_data = EEprom_Written_Flag;
  4204  0F22  3009               	movlw	(low _EEprom_Written_Flag)& (0+255)
  4205  0F23  318B  23E1  318F   	fcall	___eetoc
  4206  0F26  0021               	movlb	1	; select bank1
  4207  0F27  00AA               	movwf	??_Initial_Start^(0+128)
  4208  0F28  082A               	movf	??_Initial_Start^(0+128),w
  4209  0F29  00AC               	movwf	Initial_Start@read_data^(0+128)
  4210  0F2A                     l3334:	
  4211                           
  4212                           ;main.c: 995: if (read_data ^ 0xA6)
  4213  0F2A  30A6               	movlw	166
  4214  0F2B  062C               	xorwf	Initial_Start@read_data^(0+128),w
  4215  0F2C  00AA               	movwf	??_Initial_Start^(0+128)
  4216  0F2D  3000               	movlw	0
  4217  0F2E  00AB               	movwf	(??_Initial_Start+1)^(0+128)
  4218  0F2F  082A               	movf	??_Initial_Start^(0+128),w
  4219  0F30  042B               	iorwf	(??_Initial_Start^(0+128)+1),w
  4220  0F31  1903               	btfsc	3,2
  4221  0F32  2F34               	goto	u3231
  4222  0F33  2F35               	goto	u3230
  4223  0F34                     u3231:	
  4224  0F34  2F38               	goto	l3338
  4225  0F35                     u3230:	
  4226  0F35                     l3336:	
  4227                           
  4228                           ;main.c: 996: WriteEEPROMDefaults();
  4229  0F35  318C  240F  318F   	fcall	_WriteEEPROMDefaults
  4230  0F38                     l3338:	
  4231                           
  4232                           ;main.c: 997: for (unsigned char i=0;i<3;i++)
  4233  0F38  0021               	movlb	1	; select bank1
  4234  0F39  01AD               	clrf	Initial_Start@i^(0+128)
  4235  0F3A                     l3344:	
  4236                           
  4237                           ;main.c: 998: {;main.c: 999: GLOBAL_Mode_copy[i] = EEprom_mode[i];
  4238  0F3A  082D               	movf	Initial_Start@i^(0+128),w
  4239  0F3B  3E06               	addlw	low _EEprom_mode
  4240  0F3C  318B  23E1  318F   	fcall	___eetoc
  4241  0F3F  0021               	movlb	1	; select bank1
  4242  0F40  00AA               	movwf	??_Initial_Start^(0+128)
  4243  0F41  082D               	movf	Initial_Start@i^(0+128),w
  4244  0F42  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  4245  0F43  0086               	movwf	6
  4246  0F44  0187               	clrf	7
  4247  0F45  082A               	movf	??_Initial_Start^(0+128),w
  4248  0F46  0081               	movwf	1
  4249  0F47                     l3346:	
  4250                           
  4251                           ;main.c: 1000: if(GLOBAL_Mode_copy[i] >= 14)
  4252  0F47  082D               	movf	Initial_Start@i^(0+128),w
  4253  0F48  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  4254  0F49  0086               	movwf	6
  4255  0F4A  0187               	clrf	7
  4256  0F4B  300E               	movlw	14
  4257  0F4C  0201               	subwf	1,w
  4258  0F4D  1C03               	skipc
  4259  0F4E  2F50               	goto	u3241
  4260  0F4F  2F51               	goto	u3240
  4261  0F50                     u3241:	
  4262  0F50  2F56               	goto	l3350
  4263  0F51                     u3240:	
  4264  0F51                     l3348:	
  4265                           
  4266                           ;main.c: 1001: {;main.c: 1002: GLOBAL_Mode_copy[i] = 0;
  4267  0F51  082D               	movf	Initial_Start@i^(0+128),w
  4268  0F52  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  4269  0F53  0086               	movwf	6
  4270  0F54  0187               	clrf	7
  4271  0F55  0181               	clrf	1
  4272  0F56                     l3350:	
  4273                           
  4274                           ;main.c: 1003: };main.c: 1004: bGLOBAL_InPhase_copy[i] = EEprom_InPhase[i];
  4275  0F56  082D               	movf	Initial_Start@i^(0+128),w
  4276  0F57  3E03               	addlw	low _EEprom_InPhase
  4277  0F58  318B  23E1  318F   	fcall	___eetoc
  4278  0F5B  0021               	movlb	1	; select bank1
  4279  0F5C  00AA               	movwf	??_Initial_Start^(0+128)
  4280  0F5D  082D               	movf	Initial_Start@i^(0+128),w
  4281  0F5E  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  4282  0F5F  0086               	movwf	6
  4283  0F60  0187               	clrf	7
  4284  0F61  082A               	movf	??_Initial_Start^(0+128),w
  4285  0F62  0081               	movwf	1
  4286  0F63                     l3352:	
  4287                           
  4288                           ;main.c: 1005: if(bGLOBAL_InPhase_copy[i] != 1 && bGLOBAL_InPhase_copy[i] != 0)
  4289  0F63  082D               	movf	Initial_Start@i^(0+128),w
  4290  0F64  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  4291  0F65  0086               	movwf	6
  4292  0F66  0187               	clrf	7
  4293  0F67  0301               	decf	1,w
  4294  0F68  1903               	btfsc	3,2
  4295  0F69  2F6B               	goto	u3251
  4296  0F6A  2F6C               	goto	u3250
  4297  0F6B                     u3251:	
  4298  0F6B  2F7A               	goto	l3358
  4299  0F6C                     u3250:	
  4300  0F6C                     l3354:	
  4301  0F6C  082D               	movf	Initial_Start@i^(0+128),w
  4302  0F6D  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  4303  0F6E  0086               	movwf	6
  4304  0F6F  0187               	clrf	7
  4305  0F70  0801               	movf	1,w
  4306  0F71  1903               	btfsc	3,2
  4307  0F72  2F74               	goto	u3261
  4308  0F73  2F75               	goto	u3260
  4309  0F74                     u3261:	
  4310  0F74  2F7A               	goto	l3358
  4311  0F75                     u3260:	
  4312  0F75                     l3356:	
  4313                           
  4314                           ;main.c: 1006: {;main.c: 1007: bGLOBAL_InPhase_copy[i] = 0;
  4315  0F75  082D               	movf	Initial_Start@i^(0+128),w
  4316  0F76  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  4317  0F77  0086               	movwf	6
  4318  0F78  0187               	clrf	7
  4319  0F79  0181               	clrf	1
  4320  0F7A                     l3358:	
  4321                           
  4322                           ;main.c: 1008: };main.c: 1009: colorState[i] = EEprom_ColorState[i];
  4323  0F7A  082D               	movf	Initial_Start@i^(0+128),w
  4324  0F7B  3E00               	addlw	low _EEprom_ColorState
  4325  0F7C  318B  23E1  318F   	fcall	___eetoc
  4326  0F7F  0021               	movlb	1	; select bank1
  4327  0F80  00AA               	movwf	??_Initial_Start^(0+128)
  4328  0F81  082D               	movf	Initial_Start@i^(0+128),w
  4329  0F82  3E66               	addlw	(low (_colorState| 0))& (0+255)
  4330  0F83  0086               	movwf	6
  4331  0F84  0187               	clrf	7
  4332  0F85  082A               	movf	??_Initial_Start^(0+128),w
  4333  0F86  0081               	movwf	1
  4334  0F87                     l3360:	
  4335                           
  4336                           ;main.c: 1010: if(colorState[i] > 13)
  4337  0F87  082D               	movf	Initial_Start@i^(0+128),w
  4338  0F88  3E66               	addlw	(low (_colorState| 0))& (0+255)
  4339  0F89  0086               	movwf	6
  4340  0F8A  0187               	clrf	7
  4341  0F8B  300E               	movlw	14
  4342  0F8C  0201               	subwf	1,w
  4343  0F8D  1C03               	skipc
  4344  0F8E  2F90               	goto	u3271
  4345  0F8F  2F91               	goto	u3270
  4346  0F90                     u3271:	
  4347  0F90  2F96               	goto	l3364
  4348  0F91                     u3270:	
  4349  0F91                     l3362:	
  4350                           
  4351                           ;main.c: 1011: {;main.c: 1012: colorState[i] = 0;
  4352  0F91  082D               	movf	Initial_Start@i^(0+128),w
  4353  0F92  3E66               	addlw	(low (_colorState| 0))& (0+255)
  4354  0F93  0086               	movwf	6
  4355  0F94  0187               	clrf	7
  4356  0F95  0181               	clrf	1
  4357  0F96                     l3364:	
  4358  0F96  3001               	movlw	1
  4359  0F97  00AA               	movwf	??_Initial_Start^(0+128)
  4360  0F98  082A               	movf	??_Initial_Start^(0+128),w
  4361  0F99  07AD               	addwf	Initial_Start@i^(0+128),f
  4362  0F9A                     l3366:	
  4363  0F9A  3003               	movlw	3
  4364  0F9B  022D               	subwf	Initial_Start@i^(0+128),w
  4365  0F9C  1C03               	skipc
  4366  0F9D  2F9F               	goto	u3281
  4367  0F9E  2FA0               	goto	u3280
  4368  0F9F                     u3281:	
  4369  0F9F  2F3A               	goto	l3344
  4370  0FA0                     u3280:	
  4371  0FA0                     l3368:	
  4372                           
  4373                           ;main.c: 1013: };main.c: 1014: };main.c: 1016: indexOfMode = 0;
  4374  0FA0  0020               	movlb	0	; select bank0
  4375  0FA1  01AE               	clrf	_indexOfMode
  4376  0FA2                     l3370:	
  4377                           
  4378                           ;main.c: 1017: if ((PORTCbits.RC5))
  4379  0FA2  1E8E               	btfss	14,5	;volatile
  4380  0FA3  2FA5               	goto	u3291
  4381  0FA4  2FA6               	goto	u3290
  4382  0FA5                     u3291:	
  4383  0FA5  2FA8               	goto	l463
  4384  0FA6                     u3290:	
  4385  0FA6                     l3372:	
  4386                           
  4387                           ;main.c: 1018: {;main.c: 1019: indexOfMode = 1;
  4388  0FA6  01AE               	clrf	_indexOfMode
  4389  0FA7  0AAE               	incf	_indexOfMode,f
  4390  0FA8                     l463:	
  4391                           
  4392                           ;main.c: 1020: };main.c: 1021: if ((PORTCbits.RC4))
  4393  0FA8  1E0E               	btfss	14,4	;volatile
  4394  0FA9  2FAB               	goto	u3301
  4395  0FAA  2FAC               	goto	u3300
  4396  0FAB                     u3301:	
  4397  0FAB  2FB2               	goto	l3376
  4398  0FAC                     u3300:	
  4399  0FAC                     l3374:	
  4400                           
  4401                           ;main.c: 1022: {;main.c: 1023: indexOfMode = 2;
  4402  0FAC  3002               	movlw	2
  4403  0FAD  0021               	movlb	1	; select bank1
  4404  0FAE  00AA               	movwf	??_Initial_Start^(0+128)
  4405  0FAF  082A               	movf	??_Initial_Start^(0+128),w
  4406  0FB0  0020               	movlb	0	; select bank0
  4407  0FB1  00AE               	movwf	_indexOfMode
  4408  0FB2                     l3376:	
  4409                           
  4410                           ;main.c: 1024: };main.c: 1026: if(GLOBAL_Mode_copy[indexOfMode] >= 11 && GLOBAL_Mode_cop
      +                          y[indexOfMode] < 14)
  4411  0FB2  082E               	movf	_indexOfMode,w
  4412  0FB3  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  4413  0FB4  0086               	movwf	6
  4414  0FB5  0187               	clrf	7
  4415  0FB6  300B               	movlw	11
  4416  0FB7  0201               	subwf	1,w
  4417  0FB8  1C03               	skipc
  4418  0FB9  2FBB               	goto	u3311
  4419  0FBA  2FBC               	goto	u3310
  4420  0FBB                     u3311:	
  4421  0FBB  2FF9               	goto	l3394
  4422  0FBC                     u3310:	
  4423  0FBC                     l3378:	
  4424  0FBC  082E               	movf	_indexOfMode,w
  4425  0FBD  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  4426  0FBE  0086               	movwf	6
  4427  0FBF  0187               	clrf	7
  4428  0FC0  300E               	movlw	14
  4429  0FC1  0201               	subwf	1,w
  4430  0FC2  1803               	skipnc
  4431  0FC3  2FC5               	goto	u3321
  4432  0FC4  2FC6               	goto	u3320
  4433  0FC5                     u3321:	
  4434  0FC5  2FF9               	goto	l3394
  4435  0FC6                     u3320:	
  4436  0FC6  2FE7               	goto	l3392
  4437  0FC7                     l467:	
  4438                           ;main.c: 1029: {;main.c: 1030: case 0:
  4439                           
  4440                           
  4441                           ;main.c: 1031: (PORTCbits.RC2) = (1);
  4442  0FC7  150E               	bsf	14,2	;volatile
  4443  0FC8                     l3382:	
  4444                           
  4445                           ;main.c: 1032: currentColor = 0;
  4446  0FC8  01B4               	clrf	_currentColor	;volatile
  4447                           
  4448                           ;main.c: 1033: break;
  4449  0FC9  2FF9               	goto	l3394
  4450  0FCA                     l469:	
  4451                           ;main.c: 1034: case 1:
  4452                           
  4453                           
  4454                           ;main.c: 1035: (PORTCbits.RC1) = (1);
  4455  0FCA  148E               	bsf	14,1	;volatile
  4456  0FCB                     l3384:	
  4457                           
  4458                           ;main.c: 1036: currentColor = 1;
  4459  0FCB  3001               	movlw	1
  4460  0FCC  0021               	movlb	1	; select bank1
  4461  0FCD  00AA               	movwf	??_Initial_Start^(0+128)
  4462  0FCE  082A               	movf	??_Initial_Start^(0+128),w
  4463  0FCF  0020               	movlb	0	; select bank0
  4464  0FD0  00B4               	movwf	_currentColor	;volatile
  4465                           
  4466                           ;main.c: 1037: break;
  4467  0FD1  2FF9               	goto	l3394
  4468  0FD2                     l470:	
  4469                           ;main.c: 1038: case 2:
  4470                           
  4471                           
  4472                           ;main.c: 1039: (PORTCbits.RC0) = (1);
  4473  0FD2  140E               	bsf	14,0	;volatile
  4474  0FD3                     l3386:	
  4475                           
  4476                           ;main.c: 1040: currentColor = 2;
  4477  0FD3  3002               	movlw	2
  4478  0FD4  0021               	movlb	1	; select bank1
  4479  0FD5  00AA               	movwf	??_Initial_Start^(0+128)
  4480  0FD6  082A               	movf	??_Initial_Start^(0+128),w
  4481  0FD7  0020               	movlb	0	; select bank0
  4482  0FD8  00B4               	movwf	_currentColor	;volatile
  4483                           
  4484                           ;main.c: 1041: break;
  4485  0FD9  2FF9               	goto	l3394
  4486  0FDA                     l471:	
  4487                           ;main.c: 1042: case 3:
  4488                           
  4489                           
  4490                           ;main.c: 1043: (PORTAbits.RA2) = (1);
  4491  0FDA  150C               	bsf	12,2	;volatile
  4492  0FDB                     l3388:	
  4493                           
  4494                           ;main.c: 1044: currentColor = 3;
  4495  0FDB  3003               	movlw	3
  4496  0FDC  0021               	movlb	1	; select bank1
  4497  0FDD  00AA               	movwf	??_Initial_Start^(0+128)
  4498  0FDE  082A               	movf	??_Initial_Start^(0+128),w
  4499  0FDF  0020               	movlb	0	; select bank0
  4500  0FE0  00B4               	movwf	_currentColor	;volatile
  4501                           
  4502                           ;main.c: 1045: break;
  4503  0FE1  2FF9               	goto	l3394
  4504  0FE2                     l472:	
  4505                           ;main.c: 1046: default:
  4506                           
  4507                           
  4508                           ;main.c: 1047: (PORTCbits.RC2) = (0);
  4509  0FE2  110E               	bcf	14,2	;volatile
  4510                           
  4511                           ;main.c: 1048: (PORTCbits.RC1) = (0);
  4512  0FE3  108E               	bcf	14,1	;volatile
  4513                           
  4514                           ;main.c: 1049: (PORTCbits.RC0) = (0);
  4515  0FE4  100E               	bcf	14,0	;volatile
  4516                           
  4517                           ;main.c: 1050: (PORTAbits.RA2) = (0);
  4518  0FE5  110C               	bcf	12,2	;volatile
  4519                           
  4520                           ;main.c: 1051: break;
  4521  0FE6  2FF9               	goto	l3394
  4522  0FE7                     l3392:	
  4523  0FE7  082E               	movf	_indexOfMode,w
  4524  0FE8  3E66               	addlw	(low (_colorState| 0))& (0+255)
  4525  0FE9  0086               	movwf	6
  4526  0FEA  0187               	clrf	7
  4527  0FEB  0801               	movf	1,w
  4528                           
  4529                           ; Switch size 1, requested type "simple"
  4530                           ; Number of cases is 4, Range of values is 0 to 3
  4531                           ; switch strategies available:
  4532                           ; Name         Instructions Cycles
  4533                           ; simple_byte           13     7 (average)
  4534                           ; direct_byte           14     6 (fixed)
  4535                           ; jumptable            260     6 (fixed)
  4536                           ;	Chosen strategy is simple_byte
  4537  0FEC  3A00               	xorlw	0	; case 0
  4538  0FED  1903               	skipnz
  4539  0FEE  2FC7               	goto	l467
  4540  0FEF  3A01               	xorlw	1	; case 1
  4541  0FF0  1903               	skipnz
  4542  0FF1  2FCA               	goto	l469
  4543  0FF2  3A03               	xorlw	3	; case 2
  4544  0FF3  1903               	skipnz
  4545  0FF4  2FD2               	goto	l470
  4546  0FF5  3A01               	xorlw	1	; case 3
  4547  0FF6  1903               	skipnz
  4548  0FF7  2FDA               	goto	l471
  4549  0FF8  2FE2               	goto	l472
  4550  0FF9                     l3394:	
  4551                           
  4552                           ;main.c: 1053: };main.c: 1055: Update_Input_Mode_Type();
  4553  0FF9  318C  24A5  318F   	fcall	_Update_Input_Mode_Type
  4554                           
  4555                           ;main.c: 1056: Update_ComboPattern_Index();
  4556  0FFC  3187  27BF  318F   	fcall	_Update_ComboPattern_Index
  4557  0FFF                     l473:	
  4558  0FFF  0008               	return
  4559  1000                     __end_of_Initial_Start:	
  4560                           
  4561                           	psect	text3
  4562  0C0F                     __ptext3:	
  4563 ;; *************** function _WriteEEPROMDefaults *****************
  4564 ;; Defined at:
  4565 ;;		line 504 in file "main.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:        1 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    6
  4586 ;; This function calls:
  4587 ;;		_ReWriteEEPROM
  4588 ;;		___eetoc
  4589 ;; This function is called by:
  4590 ;;		_Initial_Start
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           
  4595                           ;psect for function _WriteEEPROMDefaults
  4596  0C0F                     _WriteEEPROMDefaults:	
  4597  0C0F                     l3132:	
  4598                           ;incstack = 0
  4599                           ; Regs used in _WriteEEPROMDefaults: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4600                           
  4601                           
  4602                           ;main.c: 506: GLOBAL_Mode_copy[0] = 0;
  4603  0C0F  0020               	movlb	0	; select bank0
  4604  0C10  01A3               	clrf	_GLOBAL_Mode_copy	;volatile
  4605                           
  4606                           ;main.c: 507: GLOBAL_Mode_copy[1] = 0;
  4607  0C11  01A4               	clrf	_GLOBAL_Mode_copy+1	;volatile
  4608                           
  4609                           ;main.c: 508: GLOBAL_Mode_copy[2] = 0;
  4610  0C12  01A5               	clrf	_GLOBAL_Mode_copy+2	;volatile
  4611  0C13                     l3134:	
  4612                           
  4613                           ;main.c: 509: bGLOBAL_InPhase_copy[0] = 1;
  4614  0C13  3001               	movlw	1
  4615  0C14  0021               	movlb	1	; select bank1
  4616  0C15  00A9               	movwf	??_WriteEEPROMDefaults^(0+128)
  4617  0C16  0829               	movf	??_WriteEEPROMDefaults^(0+128),w
  4618  0C17  0020               	movlb	0	; select bank0
  4619  0C18  00A0               	movwf	_bGLOBAL_InPhase_copy	;volatile
  4620  0C19                     l3136:	
  4621                           
  4622                           ;main.c: 510: bGLOBAL_InPhase_copy[1] = 1;
  4623  0C19  3001               	movlw	1
  4624  0C1A  0021               	movlb	1	; select bank1
  4625  0C1B  00A9               	movwf	??_WriteEEPROMDefaults^(0+128)
  4626  0C1C  0829               	movf	??_WriteEEPROMDefaults^(0+128),w
  4627  0C1D  0020               	movlb	0	; select bank0
  4628  0C1E  00A1               	movwf	_bGLOBAL_InPhase_copy+1	;volatile
  4629  0C1F                     l3138:	
  4630                           
  4631                           ;main.c: 511: bGLOBAL_InPhase_copy[2] = 1;
  4632  0C1F  3001               	movlw	1
  4633  0C20  0021               	movlb	1	; select bank1
  4634  0C21  00A9               	movwf	??_WriteEEPROMDefaults^(0+128)
  4635  0C22  0829               	movf	??_WriteEEPROMDefaults^(0+128),w
  4636  0C23  0020               	movlb	0	; select bank0
  4637  0C24  00A2               	movwf	_bGLOBAL_InPhase_copy+2	;volatile
  4638  0C25                     l3140:	
  4639                           
  4640                           ;main.c: 516: ReWriteEEPROM();
  4641  0C25  318D  250E  318C   	fcall	_ReWriteEEPROM
  4642  0C28                     l3142:	
  4643                           
  4644                           ;main.c: 518: if (EEprom_Written_Flag != 0xA6)
  4645  0C28  3009               	movlw	(low _EEprom_Written_Flag)& (0+255)
  4646  0C29  318B  23E1  318C   	fcall	___eetoc
  4647  0C2C  3AA6               	xorlw	166
  4648  0C2D  1903               	skipnz
  4649  0C2E  2C30               	goto	u2891
  4650  0C2F  2C31               	goto	u2890
  4651  0C30                     u2891:	
  4652  0C30  2C32               	goto	l301
  4653  0C31                     u2890:	
  4654  0C31                     l298:	
  4655                           ;main.c: 519: while (1) {}
  4656                           
  4657  0C31                     l299:	
  4658  0C31  2C31               	goto	l298
  4659  0C32                     l301:	
  4660  0C32  0008               	return
  4661  0C33                     __end_of_WriteEEPROMDefaults:	
  4662                           
  4663                           	psect	text4
  4664  0BE1                     __ptext4:	
  4665 ;; *************** function ___eetoc *****************
  4666 ;; Defined at:
  4667 ;;		line 104 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeprom.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  addr            1    wreg     PTR eeprom void 
  4670 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  addr            1    5[BANK1 ] PTR eeprom void 
  4673 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  4674 ;;  data            1    6[BANK1 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      unsigned char 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;Total ram usage:        3 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    4
  4691 ;; This function calls:
  4692 ;;		___eecpymem
  4693 ;; This function is called by:
  4694 ;;		_WriteEEPROMDefaults
  4695 ;;		_Initial_Start
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function ___eetoc
  4701  0BE1                     ___eetoc:	
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4705                           ;___eetoc@addr stored from wreg
  4706  0BE1  0021               	movlb	1	; select bank1
  4707  0BE2  00A5               	movwf	___eetoc@addr^(0+128)
  4708  0BE3                     l3106:	
  4709                           
  4710                           ;__eeprom.c: 106: unsigned char data;;__eeprom.c: 107: __eecpymem((unsigned char *) &dat
      +                          a,addr,1);
  4711  0BE3  0825               	movf	___eetoc@addr^(0+128),w
  4712  0BE4  00A4               	movwf	??___eetoc^(0+128)
  4713  0BE5  0824               	movf	??___eetoc^(0+128),w
  4714  0BE6  00A0               	movwf	___eecpymem@from^(0+128)
  4715  0BE7  01A1               	clrf	___eecpymem@size^(0+128)
  4716  0BE8  0AA1               	incf	___eecpymem@size^(0+128),f
  4717  0BE9  30A6               	movlw	(low (___eetoc@data| 0))& (0+255)
  4718  0BEA  318C  24D9  318B   	fcall	___eecpymem
  4719  0BED                     l3108:	
  4720                           
  4721                           ;__eeprom.c: 108: return data;
  4722  0BED  0021               	movlb	1	; select bank1
  4723  0BEE  0826               	movf	___eetoc@data^(0+128),w
  4724  0BEF                     l596:	
  4725  0BEF  0008               	return
  4726  0BF0                     __end_of___eetoc:	
  4727                           
  4728                           	psect	text5
  4729  0CD9                     __ptext5:	
  4730 ;; *************** function ___eecpymem *****************
  4731 ;; Defined at:
  4732 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeprom.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  to              1    wreg     PTR volatile unsigned ch
  4735 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetoo@data(4), __eetol@data(4), 
  4736 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  4737 ;;  from            1    0[BANK1 ] PTR eeprom unsigned char
  4738 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  4739 ;;  size            1    1[BANK1 ] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  to              1    3[BANK1 ] PTR volatile unsigned ch
  4742 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetoo@data(4), __eetol@data(4), 
  4743 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  4744 ;;  cp              1    2[BANK1 ] PTR volatile unsigned ch
  4745 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetoo@data(4), __eetol@data(4), 
  4746 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4756 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;Total ram usage:        5 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    3
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		___eetoc
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function ___eecpymem
  4772  0CD9                     ___eecpymem:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  4776                           ;___eecpymem@to stored from wreg
  4777  0CD9  0021               	movlb	1	; select bank1
  4778  0CDA  00A3               	movwf	___eecpymem@to^(0+128)
  4779  0CDB                     l3050:	
  4780                           
  4781                           ;__eeprom.c: 8: volatile unsigned char *cp = to;
  4782  0CDB  0823               	movf	___eecpymem@to^(0+128),w
  4783  0CDC  0020               	movlb	0	; select bank0
  4784  0CDD  00E5               	movwf	??___eecpymem
  4785  0CDE  0865               	movf	??___eecpymem,w
  4786  0CDF  0021               	movlb	1	; select bank1
  4787  0CE0  00A2               	movwf	___eecpymem@cp^(0+128)
  4788  0CE1                     l570:	
  4789                           ;__eeprom.c: 22: while (NVMCON1bits.WR) {
  4790                           
  4791  0CE1  0031               	movlb	17	; select bank17
  4792  0CE2  1895               	btfsc	21,1	;volsfr
  4793  0CE3  2CE5               	goto	u2771
  4794  0CE4  2CE6               	goto	u2770
  4795  0CE5                     u2771:	
  4796  0CE5  2CE1               	goto	l570
  4797  0CE6                     u2770:	
  4798  0CE6                     l572:	
  4799                           
  4800                           ;__eeprom.c: 24: };__eeprom.c: 25: NVMCON1bits.NVMREGS = 1;
  4801  0CE6  1715               	bsf	21,6	;volsfr
  4802  0CE7                     l3052:	
  4803                           
  4804                           ;__eeprom.c: 26: NVMADRL = (unsigned char) from;
  4805  0CE7  0021               	movlb	1	; select bank1
  4806  0CE8  0820               	movf	___eecpymem@from^(0+128),w
  4807  0CE9  0031               	movlb	17	; select bank17
  4808  0CEA  0091               	movwf	17	;volatile
  4809                           
  4810                           ;__eeprom.c: 27: NVMADRH = 0x70;
  4811  0CEB  3070               	movlw	112
  4812  0CEC  0092               	movwf	18	;volatile
  4813                           
  4814                           ;__eeprom.c: 28: while (size--) {
  4815  0CED  2D05               	goto	l3060
  4816  0CEE                     l574:	
  4817                           
  4818                           ;__eeprom.c: 29: NVMCON1bits.RD = 1;
  4819  0CEE  0031               	movlb	17	; select bank17
  4820  0CEF  1415               	bsf	21,0	;volsfr
  4821  0CF0                     l3054:	
  4822                           
  4823                           ;__eeprom.c: 30: *cp++ = NVMDATL;
  4824  0CF0  0813               	movf	19,w	;volatile
  4825  0CF1  0020               	movlb	0	; select bank0
  4826  0CF2  00E5               	movwf	??___eecpymem
  4827  0CF3  0021               	movlb	1	; select bank1
  4828  0CF4  0822               	movf	___eecpymem@cp^(0+128),w
  4829  0CF5  0086               	movwf	6
  4830  0CF6  0187               	clrf	7
  4831  0CF7  0020               	movlb	0	; select bank0
  4832  0CF8  0865               	movf	??___eecpymem,w
  4833  0CF9  0081               	movwf	1
  4834  0CFA                     l3056:	
  4835  0CFA  3001               	movlw	1
  4836  0CFB  00E5               	movwf	??___eecpymem
  4837  0CFC  0865               	movf	??___eecpymem,w
  4838  0CFD  0021               	movlb	1	; select bank1
  4839  0CFE  07A2               	addwf	___eecpymem@cp^(0+128),f
  4840  0CFF                     l3058:	
  4841                           
  4842                           ;__eeprom.c: 31: NVMADRL++;
  4843  0CFF  3001               	movlw	1
  4844  0D00  0020               	movlb	0	; select bank0
  4845  0D01  00E5               	movwf	??___eecpymem
  4846  0D02  0865               	movf	??___eecpymem,w
  4847  0D03  0031               	movlb	17	; select bank17
  4848  0D04  0791               	addwf	17,f	;volatile
  4849  0D05                     l3060:	
  4850  0D05  3001               	movlw	1
  4851  0D06  0021               	movlb	1	; select bank1
  4852  0D07  02A1               	subwf	___eecpymem@size^(0+128),f
  4853  0D08  0A21               	incf	___eecpymem@size^(0+128),w
  4854  0D09  1D03               	btfss	3,2
  4855  0D0A  2D0C               	goto	u2781
  4856  0D0B  2D0D               	goto	u2780
  4857  0D0C                     u2781:	
  4858  0D0C  2CEE               	goto	l574
  4859  0D0D                     u2780:	
  4860  0D0D                     l576:	
  4861  0D0D  0008               	return
  4862  0D0E                     __end_of___eecpymem:	
  4863                           
  4864                           	psect	text6
  4865  0CA5                     __ptext6:	
  4866 ;; *************** function _Update_Input_Mode_Type *****************
  4867 ;; Defined at:
  4868 ;;		line 966 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;Total ram usage:        1 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    4
  4889 ;; This function calls:
  4890 ;;		_Update_ComboPattern_Index
  4891 ;; This function is called by:
  4892 ;;		_Initial_Start
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _Update_Input_Mode_Type
  4899  0CA5                     _Update_Input_Mode_Type:	
  4900  0CA5                     l3144:	
  4901                           ;incstack = 0
  4902                           ; Regs used in _Update_Input_Mode_Type: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4903                           
  4904                           
  4905                           ;main.c: 968: static unsigned char toggle = 0;;main.c: 969: GLOBAL_Selected_Mode_Type = 
      +                          0;
  4906  0CA5  0020               	movlb	0	; select bank0
  4907  0CA6  01C9               	clrf	_GLOBAL_Selected_Mode_Type	;volatile
  4908  0CA7                     l3146:	
  4909                           
  4910                           ;main.c: 970: if (bGLOBAL_MODE1_PRESSED)
  4911  0CA7  0839               	movf	_bGLOBAL_MODE1_PRESSED,w	;volatile
  4912  0CA8  1903               	btfsc	3,2
  4913  0CA9  2CAB               	goto	u2901
  4914  0CAA  2CAC               	goto	u2900
  4915  0CAB                     u2901:	
  4916  0CAB  2CB2               	goto	l3150
  4917  0CAC                     u2900:	
  4918  0CAC                     l3148:	
  4919                           
  4920                           ;main.c: 971: GLOBAL_Selected_Mode_Type = 1;
  4921  0CAC  3001               	movlw	1
  4922  0CAD  0021               	movlb	1	; select bank1
  4923  0CAE  00A0               	movwf	??_Update_Input_Mode_Type^(0+128)
  4924  0CAF  0820               	movf	??_Update_Input_Mode_Type^(0+128),w
  4925  0CB0  0020               	movlb	0	; select bank0
  4926  0CB1  00C9               	movwf	_GLOBAL_Selected_Mode_Type	;volatile
  4927  0CB2                     l3150:	
  4928                           
  4929                           ;main.c: 972: if (bGLOBAL_MODE2_PRESSED)
  4930  0CB2  0838               	movf	_bGLOBAL_MODE2_PRESSED,w	;volatile
  4931  0CB3  1903               	btfsc	3,2
  4932  0CB4  2CB6               	goto	u2911
  4933  0CB5  2CB7               	goto	u2910
  4934  0CB6                     u2911:	
  4935  0CB6  2CBD               	goto	l452
  4936  0CB7                     u2910:	
  4937  0CB7                     l3152:	
  4938                           
  4939                           ;main.c: 973: GLOBAL_Selected_Mode_Type = 2;
  4940  0CB7  3002               	movlw	2
  4941  0CB8  0021               	movlb	1	; select bank1
  4942  0CB9  00A0               	movwf	??_Update_Input_Mode_Type^(0+128)
  4943  0CBA  0820               	movf	??_Update_Input_Mode_Type^(0+128),w
  4944  0CBB  0020               	movlb	0	; select bank0
  4945  0CBC  00C9               	movwf	_GLOBAL_Selected_Mode_Type	;volatile
  4946  0CBD                     l452:	
  4947                           
  4948                           ;main.c: 974: if (GLOBAL_Selected_Mode_Type_copy != GLOBAL_Selected_Mode_Type)
  4949  0CBD  0848               	movf	_GLOBAL_Selected_Mode_Type_copy,w	;volatile
  4950  0CBE  0649               	xorwf	_GLOBAL_Selected_Mode_Type,w	;volatile
  4951  0CBF  1903               	skipnz
  4952  0CC0  2CC2               	goto	u2921
  4953  0CC1  2CC3               	goto	u2920
  4954  0CC2                     u2921:	
  4955  0CC2  2CC8               	goto	l3158
  4956  0CC3                     u2920:	
  4957  0CC3                     l3154:	
  4958                           
  4959                           ;main.c: 975: {;main.c: 976: Update_ComboPattern_Index();
  4960  0CC3  3187  27BF  318C   	fcall	_Update_ComboPattern_Index
  4961  0CC6                     l3156:	
  4962                           
  4963                           ;main.c: 977: startUpProgram = 0;
  4964  0CC6  0020               	movlb	0	; select bank0
  4965  0CC7  01CF               	clrf	_startUpProgram	;volatile
  4966  0CC8                     l3158:	
  4967                           
  4968                           ;main.c: 978: };main.c: 979: bGLOBAL_InPhase = bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode
      +                          _Type];
  4969  0CC8  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  4970  0CC9  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  4971  0CCA  0086               	movwf	6
  4972  0CCB  0187               	clrf	7
  4973  0CCC  0801               	movf	1,w
  4974  0CCD  0021               	movlb	1	; select bank1
  4975  0CCE  00A0               	movwf	??_Update_Input_Mode_Type^(0+128)
  4976  0CCF  0820               	movf	??_Update_Input_Mode_Type^(0+128),w
  4977  0CD0  0020               	movlb	0	; select bank0
  4978  0CD1  00D4               	movwf	_bGLOBAL_InPhase	;volatile
  4979  0CD2                     l3160:	
  4980                           
  4981                           ;main.c: 980: GLOBAL_Selected_Mode_Type_copy = GLOBAL_Selected_Mode_Type;
  4982  0CD2  0849               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  4983  0CD3  0021               	movlb	1	; select bank1
  4984  0CD4  00A0               	movwf	??_Update_Input_Mode_Type^(0+128)
  4985  0CD5  0820               	movf	??_Update_Input_Mode_Type^(0+128),w
  4986  0CD6  0020               	movlb	0	; select bank0
  4987  0CD7  00C8               	movwf	_GLOBAL_Selected_Mode_Type_copy	;volatile
  4988  0CD8                     l454:	
  4989  0CD8  0008               	return
  4990  0CD9                     __end_of_Update_Input_Mode_Type:	
  4991                           
  4992                           	psect	text7
  4993  0C33                     __ptext7:	
  4994 ;; *************** function _InitApp *****************
  4995 ;; Defined at:
  4996 ;;		line 22 in file "user.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_main
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _InitApp
  5026  0C33                     _InitApp:	
  5027  0C33                     l3398:	
  5028                           ;incstack = 0
  5029                           ; Regs used in _InitApp: [wreg+status,2]
  5030                           
  5031                           
  5032                           ;user.c: 34: PORTA =0;
  5033  0C33  0020               	movlb	0	; select bank0
  5034  0C34  018C               	clrf	12	;volatile
  5035                           
  5036                           ;user.c: 35: LATA = 0;
  5037  0C35  0022               	movlb	2	; select bank2
  5038  0C36  018C               	clrf	12	;volatile
  5039                           
  5040                           ;user.c: 36: ANSELA = 0;
  5041  0C37  0023               	movlb	3	; select bank3
  5042  0C38  018C               	clrf	12	;volatile
  5043                           
  5044                           ;user.c: 37: PORTC =0;
  5045  0C39  0020               	movlb	0	; select bank0
  5046  0C3A  018E               	clrf	14	;volatile
  5047                           
  5048                           ;user.c: 38: LATC = 0;
  5049  0C3B  0022               	movlb	2	; select bank2
  5050  0C3C  018E               	clrf	14	;volatile
  5051                           
  5052                           ;user.c: 39: ANSELC = 0;
  5053  0C3D  0023               	movlb	3	; select bank3
  5054  0C3E  018E               	clrf	14	;volatile
  5055  0C3F                     l3400:	
  5056                           
  5057                           ;user.c: 42: TRISA = ~(0x4 + 0x10);
  5058  0C3F  30EB               	movlw	235
  5059  0C40  0021               	movlb	1	; select bank1
  5060  0C41  008C               	movwf	12	;volatile
  5061  0C42                     l3402:	
  5062                           
  5063                           ;user.c: 43: TRISC = ~(0x1 + 0x2 + 0x4);
  5064  0C42  30F8               	movlw	248
  5065  0C43  008E               	movwf	14	;volatile
  5066  0C44                     l3404:	
  5067                           
  5068                           ;user.c: 46: TRISCbits.TRISC3 = 1;
  5069  0C44  158E               	bsf	14,3	;volatile
  5070  0C45                     l3406:	
  5071                           
  5072                           ;user.c: 47: TRISCbits.TRISC4 = 1;
  5073  0C45  160E               	bsf	14,4	;volatile
  5074  0C46                     l3408:	
  5075                           
  5076                           ;user.c: 48: TRISCbits.TRISC5 = 1;
  5077  0C46  168E               	bsf	14,5	;volatile
  5078  0C47                     l3410:	
  5079                           
  5080                           ;user.c: 50: ANSELAbits.ANSA5 = 0;
  5081  0C47  0023               	movlb	3	; select bank3
  5082  0C48  128C               	bcf	12,5	;volatile
  5083  0C49                     l3412:	
  5084                           
  5085                           ;user.c: 51: TRISAbits.TRISA5 = 1;
  5086  0C49  0021               	movlb	1	; select bank1
  5087  0C4A  168C               	bsf	12,5	;volatile
  5088                           
  5089                           ;user.c: 55: bGLOBAL_ENABLE_LEDS = 0;
  5090  0C4B  0020               	movlb	0	; select bank0
  5091  0C4C  01BA               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  5092  0C4D                     l3414:	
  5093                           
  5094                           ;user.c: 65: T2CON |= 0;
  5095  0C4D  081F               	movf	31,w	;volatile
  5096  0C4E                     l3416:	
  5097                           
  5098                           ;user.c: 66: T2CONbits.TMR2ON = 1;
  5099  0C4E  151F               	bsf	31,2	;volatile
  5100  0C4F                     l3418:	
  5101                           
  5102                           ;user.c: 67: T2CONbits.T2CKPS1 = 1;
  5103  0C4F  149F               	bsf	31,1	;volatile
  5104  0C50                     l3420:	
  5105                           
  5106                           ;user.c: 68: T2CONbits.T2CKPS0 = 0;
  5107  0C50  101F               	bcf	31,0	;volatile
  5108  0C51                     l3422:	
  5109                           
  5110                           ;user.c: 69: PR2 = 127;
  5111  0C51  307F               	movlw	127
  5112  0C52  009E               	movwf	30	;volatile
  5113  0C53                     l3424:	
  5114                           
  5115                           ;user.c: 70: TMR2IE = 1;
  5116  0C53  0021               	movlb	1	; select bank1
  5117  0C54  1491               	bsf	17,1	;volatile
  5118  0C55                     l3426:	
  5119                           
  5120                           ;user.c: 71: PEIE = 1;
  5121  0C55  170B               	bsf	11,6	;volatile
  5122  0C56                     l3428:	
  5123                           
  5124                           ;user.c: 72: GIE = 1;
  5125  0C56  178B               	bsf	11,7	;volatile
  5126  0C57                     l551:	
  5127  0C57  0008               	return
  5128  0C58                     __end_of_InitApp:	
  5129                           
  5130                           	psect	text8
  5131  0636                     __ptext8:	
  5132 ;; *************** function _Increment_Color_State *****************
  5133 ;; Defined at:
  5134 ;;		line 762 in file "main.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    6
  5155 ;; This function calls:
  5156 ;;		_GPIO
  5157 ;;		_ReWriteEEPROM
  5158 ;;		_Update_ComboPattern_Index
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _Increment_Color_State
  5166  0636                     _Increment_Color_State:	
  5167  0636                     l3244:	
  5168                           ;incstack = 0
  5169                           ; Regs used in _Increment_Color_State: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5170                           
  5171                           
  5172                           ;main.c: 764: if(bCOLOR_DETECT_PRESSED == 1)
  5173  0636  0020               	movlb	0	; select bank0
  5174  0637  0337               	decf	_bCOLOR_DETECT_PRESSED,w	;volatile
  5175  0638  1D03               	btfss	3,2
  5176  0639  2E3B               	goto	u3131
  5177  063A  2E3C               	goto	u3130
  5178  063B                     u3131:	
  5179  063B  2E96               	goto	l3270
  5180  063C                     u3130:	
  5181  063C                     l3246:	
  5182                           
  5183                           ;main.c: 765: {;main.c: 766: colorResetCounter++;
  5184  063C  3001               	movlw	1
  5185  063D  0021               	movlb	1	; select bank1
  5186  063E  07BF               	addwf	_colorResetCounter^(0+128),f
  5187  063F  3000               	movlw	0
  5188  0640  3DC0               	addwfc	(_colorResetCounter+1)^(0+128),f
  5189  0641  3000               	movlw	0
  5190  0642  3DC1               	addwfc	(_colorResetCounter+2)^(0+128),f
  5191  0643  3000               	movlw	0
  5192  0644  3DC2               	addwfc	(_colorResetCounter+3)^(0+128),f
  5193  0645                     l3248:	
  5194                           
  5195                           ;main.c: 767: if(colorResetCounter>30000)
  5196  0645  0842               	movf	(_colorResetCounter+3)^(0+128),w
  5197  0646  1D03               	btfss	3,2
  5198  0647  2E53               	goto	u3140
  5199  0648  0841               	movf	(_colorResetCounter+2)^(0+128),w
  5200  0649  1D03               	btfss	3,2
  5201  064A  2E53               	goto	u3140
  5202  064B  3031               	movlw	49
  5203  064C  023F               	subwf	_colorResetCounter^(0+128),w
  5204  064D  3075               	movlw	117
  5205  064E  3B40               	subwfb	(_colorResetCounter+1)^(0+128),w
  5206  064F  1C03               	btfss	3,0
  5207  0650  2E52               	goto	u3141
  5208  0651  2E53               	goto	u3140
  5209  0652                     u3141:	
  5210  0652  2E96               	goto	l3270
  5211  0653                     u3140:	
  5212  0653                     l3250:	
  5213                           
  5214                           ;main.c: 768: {;main.c: 769: colorResetCounter = 0;
  5215  0653  3000               	movlw	0
  5216  0654  00C2               	movwf	(_colorResetCounter+3)^(0+128)
  5217  0655  3000               	movlw	0
  5218  0656  00C1               	movwf	(_colorResetCounter+2)^(0+128)
  5219  0657  3000               	movlw	0
  5220  0658  00C0               	movwf	(_colorResetCounter+1)^(0+128)
  5221  0659  3000               	movlw	0
  5222  065A  00BF               	movwf	_colorResetCounter^(0+128)
  5223  065B                     l3252:	
  5224                           
  5225                           ;main.c: 770: colorState[GLOBAL_Selected_Mode_Type] = 0;
  5226  065B  0020               	movlb	0	; select bank0
  5227  065C  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5228  065D  3E66               	addlw	(low (_colorState| 0))& (0+255)
  5229  065E  0086               	movwf	6
  5230  065F  0187               	clrf	7
  5231  0660  0181               	clrf	1
  5232  0661                     l3254:	
  5233                           
  5234                           ;main.c: 772: bGiveControlToColorProgram = 1;
  5235  0661  3001               	movlw	1
  5236  0662  0021               	movlb	1	; select bank1
  5237  0663  00A9               	movwf	??_Increment_Color_State^(0+128)
  5238  0664  0829               	movf	??_Increment_Color_State^(0+128),w
  5239  0665  0020               	movlb	0	; select bank0
  5240  0666  00AF               	movwf	_bGiveControlToColorProgram	;volatile
  5241  0667                     l3256:	
  5242                           
  5243                           ;main.c: 773: GPIO(0);
  5244  0667  3000               	movlw	0
  5245  0668  318C  2458  3186   	fcall	_GPIO
  5246                           
  5247                           ;main.c: 774: while(colorResetCounter<20000)
  5248  066B  2E79               	goto	l3262
  5249  066C                     l3258:	
  5250                           
  5251                           ;main.c: 775: {;main.c: 776: GPIO(0x01);
  5252  066C  3001               	movlw	1
  5253  066D  318C  2458  3186   	fcall	_GPIO
  5254  0670                     l3260:	
  5255                           
  5256                           ;main.c: 777: colorResetCounter++;
  5257  0670  3001               	movlw	1
  5258  0671  0021               	movlb	1	; select bank1
  5259  0672  07BF               	addwf	_colorResetCounter^(0+128),f
  5260  0673  3000               	movlw	0
  5261  0674  3DC0               	addwfc	(_colorResetCounter+1)^(0+128),f
  5262  0675  3000               	movlw	0
  5263  0676  3DC1               	addwfc	(_colorResetCounter+2)^(0+128),f
  5264  0677  3000               	movlw	0
  5265  0678  3DC2               	addwfc	(_colorResetCounter+3)^(0+128),f
  5266  0679                     l3262:	
  5267  0679  0021               	movlb	1	; select bank1
  5268  067A  0842               	movf	(_colorResetCounter+3)^(0+128),w
  5269  067B  1D03               	btfss	3,2
  5270  067C  2E88               	goto	u3150
  5271  067D  0841               	movf	(_colorResetCounter+2)^(0+128),w
  5272  067E  1D03               	btfss	3,2
  5273  067F  2E88               	goto	u3150
  5274  0680  3020               	movlw	32
  5275  0681  023F               	subwf	_colorResetCounter^(0+128),w
  5276  0682  304E               	movlw	78
  5277  0683  3B40               	subwfb	(_colorResetCounter+1)^(0+128),w
  5278  0684  1C03               	btfss	3,0
  5279  0685  2E87               	goto	u3151
  5280  0686  2E88               	goto	u3150
  5281  0687                     u3151:	
  5282  0687  2E6C               	goto	l3258
  5283  0688                     u3150:	
  5284  0688                     l3264:	
  5285                           
  5286                           ;main.c: 778: };main.c: 779: ReWriteEEPROM();
  5287  0688  318D  250E  3186   	fcall	_ReWriteEEPROM
  5288  068B                     l3266:	
  5289                           
  5290                           ;main.c: 780: colorResetCounter = 0;
  5291  068B  3000               	movlw	0
  5292  068C  0021               	movlb	1	; select bank1
  5293  068D  00C2               	movwf	(_colorResetCounter+3)^(0+128)
  5294  068E  3000               	movlw	0
  5295  068F  00C1               	movwf	(_colorResetCounter+2)^(0+128)
  5296  0690  3000               	movlw	0
  5297  0691  00C0               	movwf	(_colorResetCounter+1)^(0+128)
  5298  0692  3000               	movlw	0
  5299  0693  00BF               	movwf	_colorResetCounter^(0+128)
  5300  0694                     l3268:	
  5301                           
  5302                           ;main.c: 781: bGiveControlToColorProgram = 0;
  5303  0694  0020               	movlb	0	; select bank0
  5304  0695  01AF               	clrf	_bGiveControlToColorProgram	;volatile
  5305  0696                     l3270:	
  5306                           
  5307                           ;main.c: 783: };main.c: 784: };main.c: 786: if(GLOCAL_Program_Color == 0 && bCOLOR_DETEC
      +                          T_PRESSED == 1)
  5308  0696  0020               	movlb	0	; select bank0
  5309  0697  0830               	movf	_GLOCAL_Program_Color,w	;volatile
  5310  0698  1D03               	btfss	3,2
  5311  0699  2E9B               	goto	u3161
  5312  069A  2E9C               	goto	u3160
  5313  069B                     u3161:	
  5314  069B  2F01               	goto	l3316
  5315  069C                     u3160:	
  5316  069C                     l3272:	
  5317  069C  0337               	decf	_bCOLOR_DETECT_PRESSED,w	;volatile
  5318  069D  1D03               	btfss	3,2
  5319  069E  2EA0               	goto	u3171
  5320  069F  2EA1               	goto	u3170
  5321  06A0                     u3171:	
  5322  06A0  2F01               	goto	l3316
  5323  06A1                     u3170:	
  5324  06A1                     l3274:	
  5325                           
  5326                           ;main.c: 787: {;main.c: 788: bGiveControlToColorProgram = 1;
  5327  06A1  3001               	movlw	1
  5328  06A2  0021               	movlb	1	; select bank1
  5329  06A3  00A9               	movwf	??_Increment_Color_State^(0+128)
  5330  06A4  0829               	movf	??_Increment_Color_State^(0+128),w
  5331  06A5  0020               	movlb	0	; select bank0
  5332  06A6  00AF               	movwf	_bGiveControlToColorProgram	;volatile
  5333  06A7                     l3276:	
  5334                           
  5335                           ;main.c: 789: GPIO(0);
  5336  06A7  3000               	movlw	0
  5337  06A8  318C  2458  3186   	fcall	_GPIO
  5338  06AB                     l3278:	
  5339                           
  5340                           ;main.c: 791: colorState[GLOBAL_Selected_Mode_Type]++;
  5341  06AB  3001               	movlw	1
  5342  06AC  0021               	movlb	1	; select bank1
  5343  06AD  00A9               	movwf	??_Increment_Color_State^(0+128)
  5344  06AE  0020               	movlb	0	; select bank0
  5345  06AF  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5346  06B0  3E66               	addlw	(low (_colorState| 0))& (0+255)
  5347  06B1  0086               	movwf	6
  5348  06B2  0187               	clrf	7
  5349  06B3  0021               	movlb	1	; select bank1
  5350  06B4  0829               	movf	??_Increment_Color_State^(0+128),w
  5351  06B5  0781               	addwf	1,f
  5352  06B6                     l3280:	
  5353                           
  5354                           ;main.c: 792: colorResetCounter = 0;
  5355  06B6  3000               	movlw	0
  5356  06B7  00C2               	movwf	(_colorResetCounter+3)^(0+128)
  5357  06B8  3000               	movlw	0
  5358  06B9  00C1               	movwf	(_colorResetCounter+2)^(0+128)
  5359  06BA  3000               	movlw	0
  5360  06BB  00C0               	movwf	(_colorResetCounter+1)^(0+128)
  5361  06BC  3000               	movlw	0
  5362  06BD  00BF               	movwf	_colorResetCounter^(0+128)
  5363  06BE                     l3282:	
  5364                           
  5365                           ;main.c: 793: ReWriteEEPROM();
  5366  06BE  318D  250E  3186   	fcall	_ReWriteEEPROM
  5367  06C1                     l3284:	
  5368                           
  5369                           ;main.c: 794: colorResetCounter = 0;
  5370  06C1  3000               	movlw	0
  5371  06C2  0021               	movlb	1	; select bank1
  5372  06C3  00C2               	movwf	(_colorResetCounter+3)^(0+128)
  5373  06C4  3000               	movlw	0
  5374  06C5  00C1               	movwf	(_colorResetCounter+2)^(0+128)
  5375  06C6  3000               	movlw	0
  5376  06C7  00C0               	movwf	(_colorResetCounter+1)^(0+128)
  5377  06C8  3000               	movlw	0
  5378  06C9  00BF               	movwf	_colorResetCounter^(0+128)
  5379  06CA                     l3286:	
  5380                           
  5381                           ;main.c: 795: currentColorCounter = 0;
  5382  06CA  0020               	movlb	0	; select bank0
  5383  06CB  01D7               	clrf	_currentColorCounter	;volatile
  5384  06CC                     l3288:	
  5385                           
  5386                           ;main.c: 796: GLOBAL_sub_patterns_column_index = 0;
  5387  06CC  01FB               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  5388  06CD                     l3290:	
  5389                           
  5390                           ;main.c: 797: GLOBAL_Dummy_Counter = 0;
  5391  06CD  01D1               	clrf	_GLOBAL_Dummy_Counter	;volatile
  5392  06CE                     l3292:	
  5393                           
  5394                           ;main.c: 798: GLOBAL_sub_patterns_column_index = 7;
  5395  06CE  3007               	movlw	7
  5396  06CF  0021               	movlb	1	; select bank1
  5397  06D0  00A9               	movwf	??_Increment_Color_State^(0+128)
  5398  06D1  0829               	movf	??_Increment_Color_State^(0+128),w
  5399  06D2  00FB               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  5400  06D3                     l3294:	
  5401                           
  5402                           ;main.c: 799: GLOBAL_sub_patterns_timer =0;
  5403  06D3  0020               	movlb	0	; select bank0
  5404  06D4  01DB               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  5405  06D5                     l3296:	
  5406                           
  5407                           ;main.c: 800: GLOBAL_combo_patterns_column_index = 0;
  5408  06D5  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  5409  06D6                     l3298:	
  5410                           
  5411                           ;main.c: 801: GLOBAL_SYNC_PULSE_Counter = 0;
  5412  06D6  01F7               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  5413  06D7                     l3300:	
  5414                           
  5415                           ;main.c: 802: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  5416  06D7  01D6               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  5417  06D8                     l3302:	
  5418                           
  5419                           ;main.c: 803: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  5420  06D8  01D5               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  5421  06D9                     l3304:	
  5422                           
  5423                           ;main.c: 804: GLOCAL_Program_Color = 1;
  5424  06D9  3001               	movlw	1
  5425  06DA  0021               	movlb	1	; select bank1
  5426  06DB  00A9               	movwf	??_Increment_Color_State^(0+128)
  5427  06DC  0829               	movf	??_Increment_Color_State^(0+128),w
  5428  06DD  0020               	movlb	0	; select bank0
  5429  06DE  00B0               	movwf	_GLOCAL_Program_Color	;volatile
  5430  06DF                     l3306:	
  5431                           
  5432                           ;main.c: 805: Update_ComboPattern_Index();
  5433  06DF  3187  27BF  3186   	fcall	_Update_ComboPattern_Index
  5434                           
  5435                           ;main.c: 806: while(colorResetCounter<5000)
  5436  06E2  2EF0               	goto	l3312
  5437  06E3                     l3308:	
  5438                           
  5439                           ;main.c: 807: {;main.c: 808: GPIO(0);
  5440  06E3  3000               	movlw	0
  5441  06E4  318C  2458  3186   	fcall	_GPIO
  5442  06E7                     l3310:	
  5443                           
  5444                           ;main.c: 809: colorResetCounter++;
  5445  06E7  3001               	movlw	1
  5446  06E8  0021               	movlb	1	; select bank1
  5447  06E9  07BF               	addwf	_colorResetCounter^(0+128),f
  5448  06EA  3000               	movlw	0
  5449  06EB  3DC0               	addwfc	(_colorResetCounter+1)^(0+128),f
  5450  06EC  3000               	movlw	0
  5451  06ED  3DC1               	addwfc	(_colorResetCounter+2)^(0+128),f
  5452  06EE  3000               	movlw	0
  5453  06EF  3DC2               	addwfc	(_colorResetCounter+3)^(0+128),f
  5454  06F0                     l3312:	
  5455  06F0  0021               	movlb	1	; select bank1
  5456  06F1  0842               	movf	(_colorResetCounter+3)^(0+128),w
  5457  06F2  1D03               	btfss	3,2
  5458  06F3  2EFF               	goto	u3180
  5459  06F4  0841               	movf	(_colorResetCounter+2)^(0+128),w
  5460  06F5  1D03               	btfss	3,2
  5461  06F6  2EFF               	goto	u3180
  5462  06F7  3088               	movlw	136
  5463  06F8  023F               	subwf	_colorResetCounter^(0+128),w
  5464  06F9  3013               	movlw	19
  5465  06FA  3B40               	subwfb	(_colorResetCounter+1)^(0+128),w
  5466  06FB  1C03               	btfss	3,0
  5467  06FC  2EFE               	goto	u3181
  5468  06FD  2EFF               	goto	u3180
  5469  06FE                     u3181:	
  5470  06FE  2EE3               	goto	l3308
  5471  06FF                     u3180:	
  5472  06FF                     l3314:	
  5473                           
  5474                           ;main.c: 810: };main.c: 811: bGiveControlToColorProgram = 0;
  5475  06FF  0020               	movlb	0	; select bank0
  5476  0700  01AF               	clrf	_bGiveControlToColorProgram	;volatile
  5477  0701                     l3316:	
  5478                           
  5479                           ;main.c: 813: };main.c: 815: if(GLOBAL_Selected_Mode_Number >= 11 && GLOBAL_Selected_Mod
      +                          e_Number < 14)
  5480  0701  300B               	movlw	11
  5481  0702  024A               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5482  0703  1C03               	skipc
  5483  0704  2F06               	goto	u3191
  5484  0705  2F07               	goto	u3190
  5485  0706                     u3191:	
  5486  0706  2F20               	goto	l3326
  5487  0707                     u3190:	
  5488  0707                     l3318:	
  5489  0707  300E               	movlw	14
  5490  0708  024A               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5491  0709  1803               	skipnc
  5492  070A  2F0C               	goto	u3201
  5493  070B  2F0D               	goto	u3200
  5494  070C                     u3201:	
  5495  070C  2F20               	goto	l3326
  5496  070D                     u3200:	
  5497  070D                     l3320:	
  5498                           
  5499                           ;main.c: 816: {;main.c: 817: if(colorState[GLOBAL_Selected_Mode_Type]>3)
  5500  070D  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5501  070E  3E66               	addlw	(low (_colorState| 0))& (0+255)
  5502  070F  0086               	movwf	6
  5503  0710  0187               	clrf	7
  5504  0711  3004               	movlw	4
  5505  0712  0201               	subwf	1,w
  5506  0713  1C03               	skipc
  5507  0714  2F16               	goto	u3211
  5508  0715  2F17               	goto	u3210
  5509  0716                     u3211:	
  5510  0716  2F2B               	goto	l411
  5511  0717                     u3210:	
  5512  0717                     l3322:	
  5513                           
  5514                           ;main.c: 818: {;main.c: 819: colorState[GLOBAL_Selected_Mode_Type] = 0;
  5515  0717  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5516  0718  3E66               	addlw	(low (_colorState| 0))& (0+255)
  5517  0719  0086               	movwf	6
  5518  071A  0187               	clrf	7
  5519  071B  0181               	clrf	1
  5520  071C                     l3324:	
  5521                           
  5522                           ;main.c: 820: ReWriteEEPROM();
  5523  071C  318D  250E  3186   	fcall	_ReWriteEEPROM
  5524  071F  2F2B               	goto	l411
  5525  0720                     l3326:	
  5526                           
  5527                           ;main.c: 823: else;main.c: 824: {;main.c: 825: if(colorState[GLOBAL_Selected_Mode_Type]>
      +                          13)
  5528  0720  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5529  0721  3E66               	addlw	(low (_colorState| 0))& (0+255)
  5530  0722  0086               	movwf	6
  5531  0723  0187               	clrf	7
  5532  0724  300E               	movlw	14
  5533  0725  0201               	subwf	1,w
  5534  0726  1C03               	skipc
  5535  0727  2F29               	goto	u3221
  5536  0728  2F2A               	goto	u3220
  5537  0729                     u3221:	
  5538  0729  2F2B               	goto	l411
  5539  072A                     u3220:	
  5540  072A  2F17               	goto	l3322
  5541  072B                     l411:	
  5542  072B  0008               	return
  5543  072C                     __end_of_Increment_Color_State:	
  5544                           
  5545                           	psect	text9
  5546  0C58                     __ptext9:	
  5547 ;; *************** function _GPIO *****************
  5548 ;; Defined at:
  5549 ;;		line 337 in file "main.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  i               1    wreg     unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  i               1    7[BANK0 ] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;Total ram usage:        1 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    3
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_SetOUTPUT
  5574 ;;		_Increment_Color_State
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _GPIO
  5580  0C58                     _GPIO:	
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in _GPIO: [wreg]
  5584                           ;GPIO@i stored from wreg
  5585  0C58  0020               	movlb	0	; select bank0
  5586  0C59  00E5               	movwf	GPIO@i
  5587  0C5A                     l3112:	
  5588                           
  5589                           ;main.c: 339: if((i&0x20) == 0x20)
  5590  0C5A  1EE5               	btfss	GPIO@i,5
  5591  0C5B  2C5D               	goto	u2841
  5592  0C5C  2C5E               	goto	u2840
  5593  0C5D                     u2841:	
  5594  0C5D  2C60               	goto	l248
  5595  0C5E                     u2840:	
  5596  0C5E                     l3114:	
  5597                           
  5598                           ;main.c: 340: {;main.c: 341: (PORTAbits.RA4) = 1;
  5599  0C5E  160C               	bsf	12,4	;volatile
  5600                           
  5601                           ;main.c: 342: }
  5602  0C5F  2C61               	goto	l3116
  5603  0C60                     l248:	
  5604                           
  5605                           ;main.c: 343: else;main.c: 344: {;main.c: 345: (PORTAbits.RA4) = 0;
  5606  0C60  120C               	bcf	12,4	;volatile
  5607  0C61                     l3116:	
  5608                           
  5609                           ;main.c: 346: };main.c: 347: if((i&0x04) == 0x04)
  5610  0C61  1D65               	btfss	GPIO@i,2
  5611  0C62  2C64               	goto	u2851
  5612  0C63  2C65               	goto	u2850
  5613  0C64                     u2851:	
  5614  0C64  2C67               	goto	l250
  5615  0C65                     u2850:	
  5616  0C65                     l3118:	
  5617                           
  5618                           ;main.c: 348: {;main.c: 349: (PORTCbits.RC0) = 1;
  5619  0C65  140E               	bsf	14,0	;volatile
  5620                           
  5621                           ;main.c: 350: }
  5622  0C66  2C68               	goto	l3120
  5623  0C67                     l250:	
  5624                           
  5625                           ;main.c: 351: else;main.c: 352: {;main.c: 353: (PORTCbits.RC0) = 0;
  5626  0C67  100E               	bcf	14,0	;volatile
  5627  0C68                     l3120:	
  5628                           
  5629                           ;main.c: 354: };main.c: 356: if((i&0x02) == 0x02)
  5630  0C68  1CE5               	btfss	GPIO@i,1
  5631  0C69  2C6B               	goto	u2861
  5632  0C6A  2C6C               	goto	u2860
  5633  0C6B                     u2861:	
  5634  0C6B  2C6E               	goto	l252
  5635  0C6C                     u2860:	
  5636  0C6C                     l3122:	
  5637                           
  5638                           ;main.c: 357: {;main.c: 358: (PORTCbits.RC1) = 1;
  5639  0C6C  148E               	bsf	14,1	;volatile
  5640                           
  5641                           ;main.c: 359: }
  5642  0C6D  2C6F               	goto	l3124
  5643  0C6E                     l252:	
  5644                           
  5645                           ;main.c: 360: else;main.c: 361: {;main.c: 362: (PORTCbits.RC1) = 0;
  5646  0C6E  108E               	bcf	14,1	;volatile
  5647  0C6F                     l3124:	
  5648                           
  5649                           ;main.c: 363: };main.c: 365: if((i&0x01) == 0x01)
  5650  0C6F  1C65               	btfss	GPIO@i,0
  5651  0C70  2C72               	goto	u2871
  5652  0C71  2C73               	goto	u2870
  5653  0C72                     u2871:	
  5654  0C72  2C75               	goto	l254
  5655  0C73                     u2870:	
  5656  0C73                     l3126:	
  5657                           
  5658                           ;main.c: 366: {;main.c: 367: (PORTCbits.RC2) = 1;
  5659  0C73  150E               	bsf	14,2	;volatile
  5660                           
  5661                           ;main.c: 368: }
  5662  0C74  2C76               	goto	l3128
  5663  0C75                     l254:	
  5664                           
  5665                           ;main.c: 369: else;main.c: 370: {;main.c: 371: (PORTCbits.RC2) = 0;
  5666  0C75  110E               	bcf	14,2	;volatile
  5667  0C76                     l3128:	
  5668                           
  5669                           ;main.c: 372: };main.c: 374: if((i&0x08) == 0x08)
  5670  0C76  1DE5               	btfss	GPIO@i,3
  5671  0C77  2C79               	goto	u2881
  5672  0C78  2C7A               	goto	u2880
  5673  0C79                     u2881:	
  5674  0C79  2C7C               	goto	l256
  5675  0C7A                     u2880:	
  5676  0C7A                     l3130:	
  5677                           
  5678                           ;main.c: 375: {;main.c: 376: (PORTAbits.RA2) = 1;
  5679  0C7A  150C               	bsf	12,2	;volatile
  5680                           
  5681                           ;main.c: 377: }
  5682  0C7B  2C7D               	goto	l258
  5683  0C7C                     l256:	
  5684                           
  5685                           ;main.c: 378: else;main.c: 379: {;main.c: 380: (PORTAbits.RA2) = 0;
  5686  0C7C  110C               	bcf	12,2	;volatile
  5687  0C7D                     l258:	
  5688  0C7D  0008               	return
  5689  0C7E                     __end_of_GPIO:	
  5690                           
  5691                           	psect	text10
  5692  0DA7                     __ptext10:	
  5693 ;; *************** function _INC_EEPROM_MODE *****************
  5694 ;; Defined at:
  5695 ;;		line 733 in file "main.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  Temp_Mode_Da    1   10[BANK1 ] unsigned char 
  5700 ;;  inputSync       1    0        unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;Total ram usage:        2 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    6
  5717 ;; This function calls:
  5718 ;;		_ReWriteEEPROM
  5719 ;;		_Update_ComboPattern_Index
  5720 ;; This function is called by:
  5721 ;;		_main
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _INC_EEPROM_MODE
  5727  0DA7                     _INC_EEPROM_MODE:	
  5728  0DA7                     l3214:	
  5729                           ;incstack = 0
  5730                           ; Regs used in _INC_EEPROM_MODE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5731                           
  5732                           
  5733                           ;main.c: 735: unsigned char Temp_Mode_Data;;main.c: 736: unsigned char inputSync;;main.c
      +                          : 737: Temp_Mode_Data = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  5734  0DA7  0020               	movlb	0	; select bank0
  5735  0DA8  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5736  0DA9  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5737  0DAA  0086               	movwf	6
  5738  0DAB  0187               	clrf	7
  5739  0DAC  0801               	movf	1,w
  5740  0DAD  0021               	movlb	1	; select bank1
  5741  0DAE  00A9               	movwf	??_INC_EEPROM_MODE^(0+128)
  5742  0DAF  0829               	movf	??_INC_EEPROM_MODE^(0+128),w
  5743  0DB0  00AA               	movwf	INC_EEPROM_MODE@Temp_Mode_Data^(0+128)
  5744  0DB1                     l3216:	
  5745                           
  5746                           ;main.c: 739: if (GLOBAL_Selected_Mode_Type == 2)
  5747  0DB1  3002               	movlw	2
  5748  0DB2  0020               	movlb	0	; select bank0
  5749  0DB3  0649               	xorwf	_GLOBAL_Selected_Mode_Type,w	;volatile
  5750  0DB4  1D03               	btfss	3,2
  5751  0DB5  2DB7               	goto	u3071
  5752  0DB6  2DB8               	goto	u3070
  5753  0DB7                     u3071:	
  5754  0DB7  2DD0               	goto	l3224
  5755  0DB8                     u3070:	
  5756  0DB8                     l3218:	
  5757                           
  5758                           ;main.c: 740: {;main.c: 741: if (Temp_Mode_Data < (14 - 1))
  5759  0DB8  300D               	movlw	13
  5760  0DB9  0021               	movlb	1	; select bank1
  5761  0DBA  022A               	subwf	INC_EEPROM_MODE@Temp_Mode_Data^(0+128),w
  5762  0DBB  1803               	skipnc
  5763  0DBC  2DBE               	goto	u3081
  5764  0DBD  2DBF               	goto	u3080
  5765  0DBE                     u3081:	
  5766  0DBE  2DCA               	goto	l3222
  5767  0DBF                     u3080:	
  5768  0DBF                     l3220:	
  5769                           
  5770                           ;main.c: 742: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  5771  0DBF  3001               	movlw	1
  5772  0DC0  00A9               	movwf	??_INC_EEPROM_MODE^(0+128)
  5773  0DC1  0020               	movlb	0	; select bank0
  5774  0DC2  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5775  0DC3  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5776  0DC4  0086               	movwf	6
  5777  0DC5  0187               	clrf	7
  5778  0DC6  0021               	movlb	1	; select bank1
  5779  0DC7  0829               	movf	??_INC_EEPROM_MODE^(0+128),w
  5780  0DC8  0781               	addwf	1,f
  5781  0DC9  2DD0               	goto	l3224
  5782  0DCA                     l3222:	
  5783                           
  5784                           ;main.c: 743: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  5785  0DCA  0020               	movlb	0	; select bank0
  5786  0DCB  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5787  0DCC  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5788  0DCD  0086               	movwf	6
  5789  0DCE  0187               	clrf	7
  5790  0DCF  0181               	clrf	1
  5791  0DD0                     l3224:	
  5792                           
  5793                           ;main.c: 744: };main.c: 745: if (GLOBAL_Selected_Mode_Type == 1)
  5794  0DD0  0020               	movlb	0	; select bank0
  5795  0DD1  0349               	decf	_GLOBAL_Selected_Mode_Type,w	;volatile
  5796  0DD2  1D03               	btfss	3,2
  5797  0DD3  2DD5               	goto	u3091
  5798  0DD4  2DD6               	goto	u3090
  5799  0DD5                     u3091:	
  5800  0DD5  2DEE               	goto	l3232
  5801  0DD6                     u3090:	
  5802  0DD6                     l3226:	
  5803                           
  5804                           ;main.c: 746: {;main.c: 747: if (Temp_Mode_Data < (14 - 1))
  5805  0DD6  300D               	movlw	13
  5806  0DD7  0021               	movlb	1	; select bank1
  5807  0DD8  022A               	subwf	INC_EEPROM_MODE@Temp_Mode_Data^(0+128),w
  5808  0DD9  1803               	skipnc
  5809  0DDA  2DDC               	goto	u3101
  5810  0DDB  2DDD               	goto	u3100
  5811  0DDC                     u3101:	
  5812  0DDC  2DE8               	goto	l3230
  5813  0DDD                     u3100:	
  5814  0DDD                     l3228:	
  5815                           
  5816                           ;main.c: 748: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  5817  0DDD  3001               	movlw	1
  5818  0DDE  00A9               	movwf	??_INC_EEPROM_MODE^(0+128)
  5819  0DDF  0020               	movlb	0	; select bank0
  5820  0DE0  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5821  0DE1  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5822  0DE2  0086               	movwf	6
  5823  0DE3  0187               	clrf	7
  5824  0DE4  0021               	movlb	1	; select bank1
  5825  0DE5  0829               	movf	??_INC_EEPROM_MODE^(0+128),w
  5826  0DE6  0781               	addwf	1,f
  5827  0DE7  2DEE               	goto	l3232
  5828  0DE8                     l3230:	
  5829                           
  5830                           ;main.c: 749: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  5831  0DE8  0020               	movlb	0	; select bank0
  5832  0DE9  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5833  0DEA  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5834  0DEB  0086               	movwf	6
  5835  0DEC  0187               	clrf	7
  5836  0DED  0181               	clrf	1
  5837  0DEE                     l3232:	
  5838                           
  5839                           ;main.c: 750: };main.c: 751: if (GLOBAL_Selected_Mode_Type == 0)
  5840  0DEE  0020               	movlb	0	; select bank0
  5841  0DEF  0849               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  5842  0DF0  1D03               	btfss	3,2
  5843  0DF1  2DF3               	goto	u3111
  5844  0DF2  2DF4               	goto	u3110
  5845  0DF3                     u3111:	
  5846  0DF3  2E0C               	goto	l3240
  5847  0DF4                     u3110:	
  5848  0DF4                     l3234:	
  5849                           
  5850                           ;main.c: 752: {;main.c: 753: if (Temp_Mode_Data < (14 - 1))
  5851  0DF4  300D               	movlw	13
  5852  0DF5  0021               	movlb	1	; select bank1
  5853  0DF6  022A               	subwf	INC_EEPROM_MODE@Temp_Mode_Data^(0+128),w
  5854  0DF7  1803               	skipnc
  5855  0DF8  2DFA               	goto	u3121
  5856  0DF9  2DFB               	goto	u3120
  5857  0DFA                     u3121:	
  5858  0DFA  2E06               	goto	l3238
  5859  0DFB                     u3120:	
  5860  0DFB                     l3236:	
  5861                           
  5862                           ;main.c: 754: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  5863  0DFB  3001               	movlw	1
  5864  0DFC  00A9               	movwf	??_INC_EEPROM_MODE^(0+128)
  5865  0DFD  0020               	movlb	0	; select bank0
  5866  0DFE  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5867  0DFF  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5868  0E00  0086               	movwf	6
  5869  0E01  0187               	clrf	7
  5870  0E02  0021               	movlb	1	; select bank1
  5871  0E03  0829               	movf	??_INC_EEPROM_MODE^(0+128),w
  5872  0E04  0781               	addwf	1,f
  5873  0E05  2E0C               	goto	l3240
  5874  0E06                     l3238:	
  5875                           
  5876                           ;main.c: 755: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  5877  0E06  0020               	movlb	0	; select bank0
  5878  0E07  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5879  0E08  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5880  0E09  0086               	movwf	6
  5881  0E0A  0187               	clrf	7
  5882  0E0B  0181               	clrf	1
  5883  0E0C                     l3240:	
  5884                           
  5885                           ;main.c: 756: };main.c: 758: ReWriteEEPROM();
  5886  0E0C  318D  250E  318D   	fcall	_ReWriteEEPROM
  5887  0E0F                     l3242:	
  5888                           
  5889                           ;main.c: 759: Update_ComboPattern_Index();
  5890  0E0F  3187  27BF  318D   	fcall	_Update_ComboPattern_Index
  5891  0E12                     l395:	
  5892  0E12  0008               	return
  5893  0E13                     __end_of_INC_EEPROM_MODE:	
  5894                           
  5895                           	psect	text11
  5896  07BF                     __ptext11:	
  5897 ;; *************** function _Update_ComboPattern_Index *****************
  5898 ;; Defined at:
  5899 ;;		line 881 in file "main.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      void 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;Total ram usage:        1 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    3
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_INC_EEPROM_MODE
  5924 ;;		_Increment_Color_State
  5925 ;;		_Update_Input_Mode_Type
  5926 ;;		_Initial_Start
  5927 ;;		_main
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _Update_ComboPattern_Index
  5933  07BF                     _Update_ComboPattern_Index:	
  5934  07BF                     l3082:	
  5935                           ;incstack = 0
  5936                           ; Regs used in _Update_ComboPattern_Index: [wreg+fsr1l+fsr1h+status,2+status,0]
  5937                           
  5938                           
  5939                           ;main.c: 883: GLOBAL_Selected_Mode_Number = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  5940  07BF  0020               	movlb	0	; select bank0
  5941  07C0  0849               	movf	_GLOBAL_Selected_Mode_Type,w
  5942  07C1  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  5943  07C2  0086               	movwf	6
  5944  07C3  0187               	clrf	7
  5945  07C4  0801               	movf	1,w
  5946  07C5  00E5               	movwf	??_Update_ComboPattern_Index
  5947  07C6  0865               	movf	??_Update_ComboPattern_Index,w
  5948  07C7  00CA               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  5949  07C8                     l3084:	
  5950                           
  5951                           ;main.c: 884: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  5952  07C8  084A               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5953  07C9  00E5               	movwf	??_Update_ComboPattern_Index
  5954  07CA  0865               	movf	??_Update_ComboPattern_Index,w
  5955  07CB  00D8               	movwf	_GLOBAL_combo_patterns_index	;volatile
  5956  07CC                     l3086:	
  5957                           
  5958                           ;main.c: 885: pwmBool = 0;
  5959  07CC  01B1               	clrf	_pwmBool	;volatile
  5960  07CD                     l3088:	
  5961                           
  5962                           ;main.c: 887: if(GLOBAL_Selected_Mode_Number < 11)
  5963  07CD  300B               	movlw	11
  5964  07CE  024A               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5965  07CF  1803               	skipnc
  5966  07D0  2FD2               	goto	u2801
  5967  07D1  2FD3               	goto	u2800
  5968  07D2                     u2801:	
  5969  07D2  2FD9               	goto	l3094
  5970  07D3                     u2800:	
  5971  07D3                     l3090:	
  5972                           
  5973                           ;main.c: 888: {;main.c: 889: bGLOBAL_STEADY_ON = 0;
  5974  07D3  01DC               	clrf	_bGLOBAL_STEADY_ON	;volatile
  5975  07D4                     l3092:	
  5976                           
  5977                           ;main.c: 890: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  5978  07D4  084A               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5979  07D5  00E5               	movwf	??_Update_ComboPattern_Index
  5980  07D6  0865               	movf	??_Update_ComboPattern_Index,w
  5981  07D7  00D8               	movwf	_GLOBAL_combo_patterns_index	;volatile
  5982                           
  5983                           ;main.c: 892: }
  5984  07D8  2FF7               	goto	l443
  5985  07D9                     l3094:	
  5986                           
  5987                           ;main.c: 919: else if(GLOBAL_Selected_Mode_Number >= 11 && GLOBAL_Selected_Mode_Number <
      +                           14)
  5988  07D9  300B               	movlw	11
  5989  07DA  024A               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5990  07DB  1C03               	skipc
  5991  07DC  2FDE               	goto	u2811
  5992  07DD  2FDF               	goto	u2810
  5993  07DE                     u2811:	
  5994  07DE  2FF7               	goto	l443
  5995  07DF                     u2810:	
  5996  07DF                     l3096:	
  5997  07DF  300E               	movlw	14
  5998  07E0  024A               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  5999  07E1  1803               	skipnc
  6000  07E2  2FE4               	goto	u2821
  6001  07E3  2FE5               	goto	u2820
  6002  07E4                     u2821:	
  6003  07E4  2FF7               	goto	l443
  6004  07E5                     u2820:	
  6005  07E5                     l3098:	
  6006                           
  6007                           ;main.c: 920: {;main.c: 921: if(GLOBAL_Selected_Mode_Number == 12)
  6008  07E5  300C               	movlw	12
  6009  07E6  064A               	xorwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  6010  07E7  1D03               	btfss	3,2
  6011  07E8  2FEA               	goto	u2831
  6012  07E9  2FEB               	goto	u2830
  6013  07EA                     u2831:	
  6014  07EA  2FEF               	goto	l445
  6015  07EB                     u2830:	
  6016  07EB                     l3100:	
  6017                           
  6018                           ;main.c: 922: {;main.c: 923: pwmBool = 1;
  6019  07EB  3001               	movlw	1
  6020  07EC  00E5               	movwf	??_Update_ComboPattern_Index
  6021  07ED  0865               	movf	??_Update_ComboPattern_Index,w
  6022  07EE  00B1               	movwf	_pwmBool	;volatile
  6023  07EF                     l445:	
  6024                           
  6025                           ;main.c: 927: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  6026  07EF  084A               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  6027  07F0  00E5               	movwf	??_Update_ComboPattern_Index
  6028  07F1  0865               	movf	??_Update_ComboPattern_Index,w
  6029  07F2  00D8               	movwf	_GLOBAL_combo_patterns_index	;volatile
  6030                           
  6031                           ;main.c: 928: bGLOBAL_STEADY_ON = 1;
  6032  07F3  3001               	movlw	1
  6033  07F4  00E5               	movwf	??_Update_ComboPattern_Index
  6034  07F5  0865               	movf	??_Update_ComboPattern_Index,w
  6035  07F6  00DC               	movwf	_bGLOBAL_STEADY_ON	;volatile
  6036  07F7                     l443:	
  6037                           
  6038                           ;main.c: 933: };main.c: 959: GLOBAL_sub_patterns_column_index = 7;
  6039  07F7  3007               	movlw	7
  6040  07F8  00E5               	movwf	??_Update_ComboPattern_Index
  6041  07F9  0865               	movf	??_Update_ComboPattern_Index,w
  6042  07FA  00FB               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  6043  07FB                     l3102:	
  6044                           
  6045                           ;main.c: 960: GLOBAL_sub_patterns_timer = 0;
  6046  07FB  01DB               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  6047  07FC                     l3104:	
  6048                           
  6049                           ;main.c: 961: GLOBAL_Dummy_Counter2 = 0;
  6050  07FC  01D0               	clrf	_GLOBAL_Dummy_Counter2	;volatile
  6051  07FD                     l446:	
  6052  07FD  0008               	return
  6053  07FE                     __end_of_Update_ComboPattern_Index:	
  6054                           
  6055                           	psect	text12
  6056  0D0E                     __ptext12:	
  6057 ;; *************** function _ReWriteEEPROM *****************
  6058 ;; Defined at:
  6059 ;;		line 721 in file "main.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  i               1    8[BANK1 ] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    5
  6080 ;; This function calls:
  6081 ;;		___ctoee
  6082 ;; This function is called by:
  6083 ;;		_WriteEEPROMDefaults
  6084 ;;		_INC_EEPROM_MODE
  6085 ;;		_Increment_Color_State
  6086 ;;		_main
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _ReWriteEEPROM
  6092  0D0E                     _ReWriteEEPROM:	
  6093  0D0E                     l3066:	
  6094                           ;incstack = 0
  6095                           ; Regs used in _ReWriteEEPROM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6096                           
  6097                           
  6098                           ;main.c: 723: EEprom_Written_Flag = 0xFF;
  6099  0D0E  30FF               	movlw	255
  6100  0D0F  0021               	movlb	1	; select bank1
  6101  0D10  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6102  0D11  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6103  0D12  00A4               	movwf	___ctoee@data^(0+128)
  6104  0D13  3009               	movlw	(low _EEprom_Written_Flag)& (0+255)
  6105  0D14  318B  23C6  318D   	fcall	___ctoee
  6106  0D17                     l3068:	
  6107                           
  6108                           ;main.c: 724: for (unsigned char i=0;i<3;i++)
  6109  0D17  0021               	movlb	1	; select bank1
  6110  0D18  01A8               	clrf	ReWriteEEPROM@i^(0+128)
  6111  0D19                     l3074:	
  6112                           
  6113                           ;main.c: 725: {;main.c: 726: EEprom_mode[i] = GLOBAL_Mode_copy[i];
  6114  0D19  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6115  0D1A  3E23               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  6116  0D1B  0086               	movwf	6
  6117  0D1C  0187               	clrf	7
  6118  0D1D  0801               	movf	1,w
  6119  0D1E  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6120  0D1F  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6121  0D20  00A4               	movwf	___ctoee@data^(0+128)
  6122  0D21  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6123  0D22  3E06               	addlw	low _EEprom_mode
  6124  0D23  318B  23C6  318D   	fcall	___ctoee
  6125                           
  6126                           ;main.c: 727: EEprom_InPhase[i] = bGLOBAL_InPhase_copy[i];
  6127  0D26  0021               	movlb	1	; select bank1
  6128  0D27  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6129  0D28  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  6130  0D29  0086               	movwf	6
  6131  0D2A  0187               	clrf	7
  6132  0D2B  0801               	movf	1,w
  6133  0D2C  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6134  0D2D  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6135  0D2E  00A4               	movwf	___ctoee@data^(0+128)
  6136  0D2F  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6137  0D30  3E03               	addlw	low _EEprom_InPhase
  6138  0D31  318B  23C6  318D   	fcall	___ctoee
  6139                           
  6140                           ;main.c: 728: EEprom_ColorState[i] = colorState[i];
  6141  0D34  0021               	movlb	1	; select bank1
  6142  0D35  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6143  0D36  3E66               	addlw	(low (_colorState| 0))& (0+255)
  6144  0D37  0086               	movwf	6
  6145  0D38  0187               	clrf	7
  6146  0D39  0801               	movf	1,w
  6147  0D3A  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6148  0D3B  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6149  0D3C  00A4               	movwf	___ctoee@data^(0+128)
  6150  0D3D  0828               	movf	ReWriteEEPROM@i^(0+128),w
  6151  0D3E  3E00               	addlw	low _EEprom_ColorState
  6152  0D3F  318B  23C6  318D   	fcall	___ctoee
  6153  0D42                     l3076:	
  6154  0D42  3001               	movlw	1
  6155  0D43  0021               	movlb	1	; select bank1
  6156  0D44  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6157  0D45  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6158  0D46  07A8               	addwf	ReWriteEEPROM@i^(0+128),f
  6159  0D47                     l3078:	
  6160  0D47  3003               	movlw	3
  6161  0D48  0228               	subwf	ReWriteEEPROM@i^(0+128),w
  6162  0D49  1C03               	skipc
  6163  0D4A  2D4C               	goto	u2791
  6164  0D4B  2D4D               	goto	u2790
  6165  0D4C                     u2791:	
  6166  0D4C  2D19               	goto	l3074
  6167  0D4D                     u2790:	
  6168  0D4D                     l3080:	
  6169                           
  6170                           ;main.c: 729: };main.c: 730: EEprom_Written_Flag = 0xA6;
  6171  0D4D  30A6               	movlw	166
  6172  0D4E  00A7               	movwf	??_ReWriteEEPROM^(0+128)
  6173  0D4F  0827               	movf	??_ReWriteEEPROM^(0+128),w
  6174  0D50  00A4               	movwf	___ctoee@data^(0+128)
  6175  0D51  3009               	movlw	(low _EEprom_Written_Flag)& (0+255)
  6176  0D52  318B  23C6  318D   	fcall	___ctoee
  6177  0D55                     l383:	
  6178  0D55  0008               	return
  6179  0D56                     __end_of_ReWriteEEPROM:	
  6180                           
  6181                           	psect	text13
  6182  0BC6                     __ptext13:	
  6183 ;; *************** function ___ctoee *****************
  6184 ;; Defined at:
  6185 ;;		line 150 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeprom.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  addr            1    wreg     PTR eeprom void 
  6188 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  6189 ;;  data            1    4[BANK1 ] unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  addr            1    6[BANK1 ] PTR eeprom void 
  6192 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      unsigned char 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6202 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;Total ram usage:        3 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    4
  6209 ;; This function calls:
  6210 ;;		___memcpyee
  6211 ;; This function is called by:
  6212 ;;		_ReWriteEEPROM
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___ctoee
  6218  0BC6                     ___ctoee:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6222                           ;___ctoee@addr stored from wreg
  6223  0BC6  0021               	movlb	1	; select bank1
  6224  0BC7  00A6               	movwf	___ctoee@addr^(0+128)
  6225  0BC8                     l3062:	
  6226                           
  6227                           ;__eeprom.c: 152: __memcpyee(addr,(unsigned char *) &data,1);
  6228  0BC8  30A4               	movlw	(low (___ctoee@data| 0))& (0+255)
  6229  0BC9  00A5               	movwf	??___ctoee^(0+128)
  6230  0BCA  0825               	movf	??___ctoee^(0+128),w
  6231  0BCB  00A0               	movwf	___memcpyee@from^(0+128)
  6232  0BCC  01A1               	clrf	___memcpyee@size^(0+128)
  6233  0BCD  0AA1               	incf	___memcpyee@size^(0+128),f
  6234  0BCE  0826               	movf	___ctoee@addr^(0+128),w
  6235  0BCF  318D  2556  318B   	fcall	___memcpyee
  6236  0BD2                     l611:	
  6237  0BD2  0008               	return
  6238  0BD3                     __end_of___ctoee:	
  6239                           
  6240                           	psect	text14
  6241  0D56                     __ptext14:	
  6242 ;; *************** function ___memcpyee *****************
  6243 ;; Defined at:
  6244 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeprom.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  to              1    wreg     PTR eeprom unsigned char
  6247 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  6248 ;;  from            1    0[BANK1 ] PTR const unsigned char 
  6249 ;;		 -> __fltoee@data(3), __fttoee@data(3), __otoee@data(4), __ltoee@data(4), 
  6250 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  6251 ;;  size            1    1[BANK1 ] unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  to              1    3[BANK1 ] PTR eeprom unsigned char
  6254 ;;		 -> EEprom_ColorState(3), EEprom_InPhase(3), EEprom_mode(3), EEprom_Written_Flag(1), 
  6255 ;;  ptr             1    2[BANK1 ] PTR const unsigned char 
  6256 ;;		 -> __fltoee@data(3), __fttoee@data(3), __otoee@data(4), __ltoee@data(4), 
  6257 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        5 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    3
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		___ctoee
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function ___memcpyee
  6283  0D56                     ___memcpyee:	
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  6287                           ;___memcpyee@to stored from wreg
  6288  0D56  0021               	movlb	1	; select bank1
  6289  0D57  00A3               	movwf	___memcpyee@to^(0+128)
  6290  0D58                     l3022:	
  6291                           
  6292                           ;__eeprom.c: 41: const unsigned char *ptr =from;
  6293  0D58  0820               	movf	___memcpyee@from^(0+128),w
  6294  0D59  0020               	movlb	0	; select bank0
  6295  0D5A  00E5               	movwf	??___memcpyee
  6296  0D5B  0865               	movf	??___memcpyee,w
  6297  0D5C  0021               	movlb	1	; select bank1
  6298  0D5D  00A2               	movwf	___memcpyee@ptr^(0+128)
  6299  0D5E                     l579:	
  6300                           ;__eeprom.c: 69: while (NVMCON1bits.WR) {
  6301                           
  6302  0D5E  0031               	movlb	17	; select bank17
  6303  0D5F  1895               	btfsc	21,1	;volsfr
  6304  0D60  2D62               	goto	u2711
  6305  0D61  2D63               	goto	u2710
  6306  0D62                     u2711:	
  6307  0D62  2D5E               	goto	l579
  6308  0D63                     u2710:	
  6309  0D63                     l581:	
  6310                           
  6311                           ;__eeprom.c: 71: };__eeprom.c: 72: NVMCON1bits.NVMREGS = 1;
  6312  0D63  1715               	bsf	21,6	;volsfr
  6313  0D64                     l3024:	
  6314                           
  6315                           ;__eeprom.c: 73: NVMADRL = (unsigned char) to - 1U;
  6316  0D64  0021               	movlb	1	; select bank1
  6317  0D65  0823               	movf	___memcpyee@to^(0+128),w
  6318  0D66  3EFF               	addlw	255
  6319  0D67  0031               	movlb	17	; select bank17
  6320  0D68  0091               	movwf	17	;volatile
  6321  0D69                     l3026:	
  6322                           
  6323                           ;__eeprom.c: 74: NVMADRH = 0x70;
  6324  0D69  3070               	movlw	112
  6325  0D6A  0092               	movwf	18	;volatile
  6326  0D6B                     l3028:	
  6327                           
  6328                           ;__eeprom.c: 75: NVMDATH = 0;
  6329  0D6B  0194               	clrf	20	;volatile
  6330                           
  6331                           ;__eeprom.c: 76: while (size--) {
  6332  0D6C  2D9E               	goto	l3048
  6333  0D6D                     l584:	
  6334  0D6D  0031               	movlb	17	; select bank17
  6335  0D6E  1895               	btfsc	21,1	;volsfr
  6336  0D6F  2D71               	goto	u2721
  6337  0D70  2D72               	goto	u2720
  6338  0D71                     u2721:	
  6339  0D71  2D6D               	goto	l584
  6340  0D72                     u2720:	
  6341  0D72                     l3030:	
  6342                           
  6343                           ;__eeprom.c: 79: };__eeprom.c: 80: NVMDATL = *ptr++;
  6344  0D72  0021               	movlb	1	; select bank1
  6345  0D73  0822               	movf	___memcpyee@ptr^(0+128),w
  6346  0D74  0086               	movwf	6
  6347  0D75  0187               	clrf	7
  6348  0D76  0801               	movf	1,w
  6349  0D77  0031               	movlb	17	; select bank17
  6350  0D78  0093               	movwf	19	;volatile
  6351  0D79                     l3032:	
  6352  0D79  3001               	movlw	1
  6353  0D7A  0020               	movlb	0	; select bank0
  6354  0D7B  00E5               	movwf	??___memcpyee
  6355  0D7C  0865               	movf	??___memcpyee,w
  6356  0D7D  0021               	movlb	1	; select bank1
  6357  0D7E  07A2               	addwf	___memcpyee@ptr^(0+128),f
  6358  0D7F                     l3034:	
  6359                           
  6360                           ;__eeprom.c: 81: NVMADRL++;
  6361  0D7F  3001               	movlw	1
  6362  0D80  0020               	movlb	0	; select bank0
  6363  0D81  00E5               	movwf	??___memcpyee
  6364  0D82  0865               	movf	??___memcpyee,w
  6365  0D83  0031               	movlb	17	; select bank17
  6366  0D84  0791               	addwf	17,f	;volatile
  6367  0D85                     l3036:	
  6368                           
  6369                           ;__eeprom.c: 82: STATUSbits.CARRY = 0;
  6370  0D85  0020               	movlb	0	; select bank0
  6371  0D86  1003               	bcf	3,0	;volatile
  6372  0D87                     l3038:	
  6373                           
  6374                           ;__eeprom.c: 83: if (INTCONbits.GIE) {
  6375  0D87  1F8B               	btfss	11,7	;volatile
  6376  0D88  2D8A               	goto	u2731
  6377  0D89  2D8B               	goto	u2730
  6378  0D8A                     u2731:	
  6379  0D8A  2D8C               	goto	l587
  6380  0D8B                     u2730:	
  6381  0D8B                     l3040:	
  6382                           
  6383                           ;__eeprom.c: 84: STATUSbits.CARRY = 1;
  6384  0D8B  1403               	bsf	3,0	;volatile
  6385  0D8C                     l587:	
  6386                           
  6387                           ;__eeprom.c: 85: };__eeprom.c: 86: NVMCON1bits.WREN = 1;
  6388  0D8C  0031               	movlb	17	; select bank17
  6389  0D8D  1515               	bsf	21,2	;volsfr
  6390  0D8E                     l3042:	
  6391                           
  6392                           ;__eeprom.c: 87: NVMCON2 = 0x55;
  6393  0D8E  3055               	movlw	85
  6394  0D8F  0096               	movwf	22	;volsfr
  6395                           
  6396                           ;__eeprom.c: 88: NVMCON2 = 0xAA;
  6397  0D90  30AA               	movlw	170
  6398  0D91  0096               	movwf	22	;volsfr
  6399  0D92                     l3044:	
  6400                           
  6401                           ;__eeprom.c: 89: NVMCON1bits.WR = 1;
  6402  0D92  1495               	bsf	21,1	;volsfr
  6403  0D93                     l588:	
  6404                           ;__eeprom.c: 90: while (NVMCON1bits.WR) {
  6405                           
  6406  0D93  1895               	btfsc	21,1	;volsfr
  6407  0D94  2D96               	goto	u2741
  6408  0D95  2D97               	goto	u2740
  6409  0D96                     u2741:	
  6410  0D96  2D93               	goto	l588
  6411  0D97                     u2740:	
  6412  0D97                     l590:	
  6413                           
  6414                           ;__eeprom.c: 92: };__eeprom.c: 93: NVMCON1bits.WREN = 0;
  6415  0D97  1115               	bcf	21,2	;volsfr
  6416                           
  6417                           ;__eeprom.c: 94: if (STATUSbits.CARRY) {
  6418  0D98  0020               	movlb	0	; select bank0
  6419  0D99  1C03               	btfss	3,0	;volatile
  6420  0D9A  2D9C               	goto	u2751
  6421  0D9B  2D9D               	goto	u2750
  6422  0D9C                     u2751:	
  6423  0D9C  2D9E               	goto	l3048
  6424  0D9D                     u2750:	
  6425  0D9D                     l3046:	
  6426                           
  6427                           ;__eeprom.c: 95: INTCONbits.GIE = 1;
  6428  0D9D  178B               	bsf	11,7	;volatile
  6429  0D9E                     l3048:	
  6430  0D9E  3001               	movlw	1
  6431  0D9F  0021               	movlb	1	; select bank1
  6432  0DA0  02A1               	subwf	___memcpyee@size^(0+128),f
  6433  0DA1  0A21               	incf	___memcpyee@size^(0+128),w
  6434  0DA2  1D03               	btfss	3,2
  6435  0DA3  2DA5               	goto	u2761
  6436  0DA4  2DA6               	goto	u2760
  6437  0DA5                     u2761:	
  6438  0DA5  2D6D               	goto	l584
  6439  0DA6                     u2760:	
  6440  0DA6                     l593:	
  6441  0DA6  0008               	return
  6442  0DA7                     __end_of___memcpyee:	
  6443                           
  6444                           	psect	text15
  6445  0BBA                     __ptext15:	
  6446 ;; *************** function _ConfigureOscillator *****************
  6447 ;; Defined at:
  6448 ;;		line 18 in file "system.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    3
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _ConfigureOscillator
  6478  0BBA                     _ConfigureOscillator:	
  6479  0BBA                     l3396:	
  6480                           ;incstack = 0
  6481                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  6482                           
  6483                           
  6484                           ;system.c: 28: OSCFRQbits.HFFRQ = 4;
  6485  0BBA  0032               	movlb	18	; select bank18
  6486  0BBB  081F               	movf	31,w	;volatile
  6487  0BBC  39F0               	andlw	-16
  6488  0BBD  3804               	iorlw	4
  6489  0BBE  009F               	movwf	31	;volatile
  6490                           
  6491                           ;system.c: 29: OSCCON1bits.NOSC = 6;
  6492  0BBF  0819               	movf	25,w	;volatile
  6493  0BC0  398F               	andlw	-113
  6494  0BC1  3860               	iorlw	96
  6495  0BC2  0099               	movwf	25	;volatile
  6496                           
  6497                           ;system.c: 30: OSCCON1bits.NDIV = 0;
  6498  0BC3  30F0               	movlw	-16
  6499  0BC4  0599               	andwf	25,f	;volatile
  6500  0BC5                     l512:	
  6501  0BC5  0008               	return
  6502  0BC6                     __end_of_ConfigureOscillator:	
  6503                           
  6504                           	psect	intentry
  6505  0004                     __pintentry:	
  6506 ;; *************** function _isr *****************
  6507 ;; Defined at:
  6508 ;;		line 26 in file "interrupts.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  temp_data1      1    6[COMMON] volatile unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;Total ram usage:        8 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    2
  6529 ;; This function calls:
  6530 ;;		_Read_Mode_Input
  6531 ;;		___wmul
  6532 ;;		_setColorState
  6533 ;;		i1_SetOUTPUT
  6534 ;; This function is called by:
  6535 ;;		Interrupt level 1
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539  0004                     _isr:	
  6540                           
  6541                           ;incstack = 0
  6542  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6543                           
  6544                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6545  0005  3180               	pagesel	$
  6546  0006                     i1l3444:	
  6547                           
  6548                           ;interrupts.c: 28: volatile unsigned char temp_data1;;interrupts.c: 29: static unsigned 
      +                          char tenMSCounter = 0;;interrupts.c: 30: static unsigned char pwmCounter = 0;;interrupts
      +                          .c: 31: static unsigned char toggle = 0;;interrupts.c: 32: static unsigned int counter =
      +                           0;;interrupts.c: 60: {;interrupts.c: 64: TMR2IF = 0;
  6549  0006  0020               	movlb	0	; select bank0
  6550  0007  1091               	bcf	17,1	;volatile
  6551  0008                     i1l3446:	
  6552                           
  6553                           ;interrupts.c: 65: if (bGLOBAL_OUTPUT_BUFFER_CHANGED || bGLOBAL_STEADY_ON)
  6554  0008  085D               	movf	_bGLOBAL_OUTPUT_BUFFER_CHANGED,w	;volatile
  6555  0009  1D03               	btfss	3,2
  6556  000A  280C               	goto	u337_21
  6557  000B  280D               	goto	u337_20
  6558  000C                     u337_21:	
  6559  000C  2812               	goto	i1l3450
  6560  000D                     u337_20:	
  6561  000D                     i1l3448:	
  6562  000D  085C               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  6563  000E  1903               	btfsc	3,2
  6564  000F  2811               	goto	u338_21
  6565  0010  2812               	goto	u338_20
  6566  0011                     u338_21:	
  6567  0011  2817               	goto	i1l3454
  6568  0012                     u338_20:	
  6569  0012                     i1l3450:	
  6570                           
  6571                           ;interrupts.c: 66: {;interrupts.c: 67: SetOUTPUT();
  6572  0012  318E  2699  3180   	fcall	i1_SetOUTPUT
  6573  0015                     i1l3452:	
  6574                           
  6575                           ;interrupts.c: 68: bGLOBAL_OUTPUT_BUFFER_CHANGED = 0;
  6576  0015  0020               	movlb	0	; select bank0
  6577  0016  01DD               	clrf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  6578  0017                     i1l3454:	
  6579                           
  6580                           ;interrupts.c: 69: };interrupts.c: 70: tenMSCounter++;
  6581  0017  3001               	movlw	1
  6582  0018  00DE               	movwf	??_isr
  6583  0019  085E               	movf	??_isr,w
  6584  001A  07CE               	addwf	isr@tenMSCounter,f
  6585  001B                     i1l3456:	
  6586                           
  6587                           ;interrupts.c: 71: if(tenMSCounter>9)
  6588  001B  300A               	movlw	10
  6589  001C  024E               	subwf	isr@tenMSCounter,w
  6590  001D  1C03               	skipc
  6591  001E  2820               	goto	u339_21
  6592  001F  2821               	goto	u339_20
  6593  0020                     u339_21:	
  6594  0020  2A24               	goto	i1l101
  6595  0021                     u339_20:	
  6596  0021                     i1l3458:	
  6597                           
  6598                           ;interrupts.c: 72: {;interrupts.c: 74: tenMSCounter = 0;
  6599  0021  01CE               	clrf	isr@tenMSCounter
  6600  0022                     i1l3460:	
  6601                           
  6602                           ;interrupts.c: 75: if ((GLOBAL_sub_patterns_column_index < 7) && (GLOBAL_sub_patterns_ti
      +                          mer == 0))
  6603  0022  3007               	movlw	7
  6604  0023  027B               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  6605  0024  1803               	skipnc
  6606  0025  2827               	goto	u340_21
  6607  0026  2828               	goto	u340_20
  6608  0027                     u340_21:	
  6609  0027  28AE               	goto	i1l3480
  6610  0028                     u340_20:	
  6611  0028                     i1l3462:	
  6612  0028  085B               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  6613  0029  1D03               	btfss	3,2
  6614  002A  282C               	goto	u341_21
  6615  002B  282D               	goto	u341_20
  6616  002C                     u341_21:	
  6617  002C  28AE               	goto	i1l3480
  6618  002D                     u341_20:	
  6619  002D                     i1l3464:	
  6620                           
  6621                           ;interrupts.c: 76: {;interrupts.c: 77: if (GLOBAL_sub_patterns_index_copy != GLOBAL_sub_
      +                          patterns_index)
  6622  002D  085A               	movf	_GLOBAL_sub_patterns_index_copy,w	;volatile
  6623  002E  067A               	xorwf	_GLOBAL_sub_patterns_index,w	;volatile
  6624  002F  1903               	skipnz
  6625  0030  2832               	goto	u342_21
  6626  0031  2833               	goto	u342_20
  6627  0032                     u342_21:	
  6628  0032  2838               	goto	i1l3470
  6629  0033                     u342_20:	
  6630  0033                     i1l3466:	
  6631                           
  6632                           ;interrupts.c: 78: {;interrupts.c: 79: GLOBAL_sub_patterns_column_index = 0;
  6633  0033  01FB               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  6634  0034                     i1l3468:	
  6635                           
  6636                           ;interrupts.c: 80: GLOBAL_sub_patterns_index_copy = GLOBAL_sub_patterns_index;
  6637  0034  087A               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  6638  0035  00DE               	movwf	??_isr
  6639  0036  085E               	movf	??_isr,w
  6640  0037  00DA               	movwf	_GLOBAL_sub_patterns_index_copy	;volatile
  6641  0038                     i1l3470:	
  6642                           
  6643                           ;interrupts.c: 81: };interrupts.c: 83: GLOBAL_sub_patterns_timer = ROM_Sub_Patterns_Time
      +                          [GLOBAL_sub_patterns_index][GLOBAL_sub_patterns_column_index];
  6644  0038  087A               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  6645  0039  00DE               	movwf	??_isr
  6646  003A  01DF               	clrf	??_isr+1
  6647  003B  085E               	movf	??_isr,w
  6648  003C  00F0               	movwf	___wmul@multiplier
  6649  003D  085F               	movf	??_isr+1,w
  6650  003E  00F1               	movwf	___wmul@multiplier+1
  6651  003F  3007               	movlw	7
  6652  0040  00F2               	movwf	___wmul@multiplicand
  6653  0041  3000               	movlw	0
  6654  0042  00F3               	movwf	___wmul@multiplicand+1
  6655  0043  318B  23F0  3180   	fcall	___wmul
  6656  0046  3077               	movlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  6657  0047  0020               	movlb	0	; select bank0
  6658  0048  00E0               	movwf	??_isr+2
  6659  0049  3090               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  6660  004A  00E1               	movwf	??_isr+3
  6661  004B  0870               	movf	?___wmul,w
  6662  004C  0760               	addwf	??_isr+2,w
  6663  004D  00E2               	movwf	??_isr+4
  6664  004E  0871               	movf	?___wmul+1,w
  6665  004F  3D61               	addwfc	??_isr+3,w
  6666  0050  00E3               	movwf	??_isr+5
  6667  0051  087B               	movf	_GLOBAL_sub_patterns_column_index,w	;volatile
  6668  0052  0762               	addwf	??_isr+4,w
  6669  0053  0084               	movwf	4
  6670  0054  0863               	movf	??_isr+5,w
  6671  0055  1803               	skipnc
  6672  0056  0A63               	incf	??_isr+5,w
  6673  0057  0085               	movwf	5
  6674  0058  0800               	movf	0,w	;code access
  6675  0059  00E4               	movwf	??_isr+6
  6676  005A  0864               	movf	??_isr+6,w
  6677  005B  00DB               	movwf	_GLOBAL_sub_patterns_timer	;volatile
  6678  005C                     i1l3472:	
  6679                           
  6680                           ;interrupts.c: 85: OUTPUT_BUFFER = ROM_Sub_Patterns[GLOBAL_sub_patterns_index][GLOBAL_su
      +                          b_patterns_column_index];
  6681  005C  087A               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  6682  005D  00DE               	movwf	??_isr
  6683  005E  01DF               	clrf	??_isr+1
  6684  005F  085E               	movf	??_isr,w
  6685  0060  00F0               	movwf	___wmul@multiplier
  6686  0061  085F               	movf	??_isr+1,w
  6687  0062  00F1               	movwf	___wmul@multiplier+1
  6688  0063  3007               	movlw	7
  6689  0064  00F2               	movwf	___wmul@multiplicand
  6690  0065  3000               	movlw	0
  6691  0066  00F3               	movwf	___wmul@multiplicand+1
  6692  0067  318B  23F0  3180   	fcall	___wmul
  6693  006A  3000               	movlw	low (_ROM_Sub_Patterns| (0+32768))
  6694  006B  0020               	movlb	0	; select bank0
  6695  006C  00E0               	movwf	??_isr+2
  6696  006D  3090               	movlw	high (_ROM_Sub_Patterns| (0+32768))
  6697  006E  00E1               	movwf	??_isr+3
  6698  006F  0870               	movf	?___wmul,w
  6699  0070  0760               	addwf	??_isr+2,w
  6700  0071  00E2               	movwf	??_isr+4
  6701  0072  0871               	movf	?___wmul+1,w
  6702  0073  3D61               	addwfc	??_isr+3,w
  6703  0074  00E3               	movwf	??_isr+5
  6704  0075  087B               	movf	_GLOBAL_sub_patterns_column_index,w	;volatile
  6705  0076  0762               	addwf	??_isr+4,w
  6706  0077  0084               	movwf	4
  6707  0078  0863               	movf	??_isr+5,w
  6708  0079  1803               	skipnc
  6709  007A  0A63               	incf	??_isr+5,w
  6710  007B  0085               	movwf	5
  6711  007C  0800               	movf	0,w	;code access
  6712  007D  00E4               	movwf	??_isr+6
  6713  007E  0864               	movf	??_isr+6,w
  6714  007F  00F9               	movwf	_OUTPUT_BUFFER	;volatile
  6715  0080                     i1l3474:	
  6716                           
  6717                           ;interrupts.c: 87: GLOBAL_sub_patterns_column_index++;
  6718  0080  3001               	movlw	1
  6719  0081  00DE               	movwf	??_isr
  6720  0082  085E               	movf	??_isr,w
  6721  0083  07FB               	addwf	_GLOBAL_sub_patterns_column_index,f	;volatile
  6722  0084                     i1l3476:	
  6723                           
  6724                           ;interrupts.c: 88: if (ROM_Sub_Patterns_Time[GLOBAL_sub_patterns_index][GLOBAL_sub_patte
      +                          rns_column_index] == 0)
  6725  0084  087A               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  6726  0085  00DE               	movwf	??_isr
  6727  0086  01DF               	clrf	??_isr+1
  6728  0087  085E               	movf	??_isr,w
  6729  0088  00F0               	movwf	___wmul@multiplier
  6730  0089  085F               	movf	??_isr+1,w
  6731  008A  00F1               	movwf	___wmul@multiplier+1
  6732  008B  3007               	movlw	7
  6733  008C  00F2               	movwf	___wmul@multiplicand
  6734  008D  3000               	movlw	0
  6735  008E  00F3               	movwf	___wmul@multiplicand+1
  6736  008F  318B  23F0  3180   	fcall	___wmul
  6737  0092  3077               	movlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  6738  0093  0020               	movlb	0	; select bank0
  6739  0094  00E0               	movwf	??_isr+2
  6740  0095  3090               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  6741  0096  00E1               	movwf	??_isr+3
  6742  0097  0870               	movf	?___wmul,w
  6743  0098  0760               	addwf	??_isr+2,w
  6744  0099  00E2               	movwf	??_isr+4
  6745  009A  0871               	movf	?___wmul+1,w
  6746  009B  3D61               	addwfc	??_isr+3,w
  6747  009C  00E3               	movwf	??_isr+5
  6748  009D  087B               	movf	_GLOBAL_sub_patterns_column_index,w	;volatile
  6749  009E  0762               	addwf	??_isr+4,w
  6750  009F  0084               	movwf	4
  6751  00A0  0863               	movf	??_isr+5,w
  6752  00A1  1803               	skipnc
  6753  00A2  0A63               	incf	??_isr+5,w
  6754  00A3  0085               	movwf	5
  6755  00A4  0012               	moviw fsr0++
  6756  00A5  1D03               	btfss	3,2
  6757  00A6  28A8               	goto	u343_21
  6758  00A7  28A9               	goto	u343_20
  6759  00A8                     u343_21:	
  6760  00A8  2973               	goto	i1l76
  6761  00A9                     u343_20:	
  6762  00A9                     i1l3478:	
  6763                           
  6764                           ;interrupts.c: 89: GLOBAL_sub_patterns_column_index = 7;
  6765  00A9  3007               	movlw	7
  6766  00AA  00DE               	movwf	??_isr
  6767  00AB  085E               	movf	??_isr,w
  6768  00AC  00FB               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  6769  00AD  2973               	goto	i1l76
  6770  00AE                     i1l3480:	
  6771                           
  6772                           ;interrupts.c: 91: else {;interrupts.c: 92: if (GLOBAL_sub_patterns_column_index > (7 - 
      +                          1))
  6773  00AE  3007               	movlw	7
  6774  00AF  027B               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  6775  00B0  1C03               	skipc
  6776  00B1  28B3               	goto	u344_21
  6777  00B2  28B4               	goto	u344_20
  6778  00B3                     u344_21:	
  6779  00B3  2973               	goto	i1l76
  6780  00B4                     u344_20:	
  6781  00B4                     i1l3482:	
  6782                           
  6783                           ;interrupts.c: 93: {;interrupts.c: 95: if (GLOBAL_combo_patterns_index_copy != GLOBAL_co
      +                          mbo_patterns_index)
  6784  00B4  0859               	movf	_GLOBAL_combo_patterns_index_copy,w	;volatile
  6785  00B5  0658               	xorwf	_GLOBAL_combo_patterns_index,w	;volatile
  6786  00B6  1903               	skipnz
  6787  00B7  28B9               	goto	u345_21
  6788  00B8  28BA               	goto	u345_20
  6789  00B9                     u345_21:	
  6790  00B9  28C0               	goto	i1l3488
  6791  00BA                     u345_20:	
  6792  00BA                     i1l3484:	
  6793                           
  6794                           ;interrupts.c: 96: {;interrupts.c: 97: GLOBAL_combo_patterns_column_index = 0;
  6795  00BA  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  6796                           
  6797                           ;interrupts.c: 98: currentColorCounter = 0;
  6798  00BB  01D7               	clrf	_currentColorCounter	;volatile
  6799  00BC                     i1l3486:	
  6800                           
  6801                           ;interrupts.c: 99: GLOBAL_combo_patterns_index_copy = GLOBAL_combo_patterns_index;
  6802  00BC  0858               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  6803  00BD  00DE               	movwf	??_isr
  6804  00BE  085E               	movf	??_isr,w
  6805  00BF  00D9               	movwf	_GLOBAL_combo_patterns_index_copy	;volatile
  6806  00C0                     i1l3488:	
  6807                           
  6808                           ;interrupts.c: 100: };interrupts.c: 102: if (bGLOBAL_END_OF_CYCLE_COND1)
  6809  00C0  0856               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  6810  00C1  1903               	btfsc	3,2
  6811  00C2  28C4               	goto	u346_21
  6812  00C3  28C5               	goto	u346_20
  6813  00C4                     u346_21:	
  6814  00C4  28C9               	goto	i1l3492
  6815  00C5                     u346_20:	
  6816  00C5                     i1l3490:	
  6817                           
  6818                           ;interrupts.c: 103: bGLOBAL_END_OF_CYCLE_COND2 = 1;
  6819  00C5  3001               	movlw	1
  6820  00C6  00DE               	movwf	??_isr
  6821  00C7  085E               	movf	??_isr,w
  6822  00C8  00D5               	movwf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  6823  00C9                     i1l3492:	
  6824                           
  6825                           ;interrupts.c: 105: if (bGLOBAL_InPhase)
  6826  00C9  0854               	movf	_bGLOBAL_InPhase,w	;volatile
  6827  00CA  1903               	btfsc	3,2
  6828  00CB  28CD               	goto	u347_21
  6829  00CC  28CE               	goto	u347_20
  6830  00CD                     u347_21:	
  6831  00CD  28F3               	goto	i1l3496
  6832  00CE                     u347_20:	
  6833  00CE                     i1l3494:	
  6834                           
  6835                           ;interrupts.c: 106: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][GLOBAL_combo_patterns_column_index];
  6836  00CE  0858               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  6837  00CF  00DE               	movwf	??_isr
  6838  00D0  01DF               	clrf	??_isr+1
  6839  00D1  085E               	movf	??_isr,w
  6840  00D2  00F0               	movwf	___wmul@multiplier
  6841  00D3  085F               	movf	??_isr+1,w
  6842  00D4  00F1               	movwf	___wmul@multiplier+1
  6843  00D5  3023               	movlw	35
  6844  00D6  00F2               	movwf	___wmul@multiplicand
  6845  00D7  3000               	movlw	0
  6846  00D8  00F3               	movwf	___wmul@multiplicand+1
  6847  00D9  318B  23F0  3180   	fcall	___wmul
  6848  00DC  3059               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  6849  00DD  0020               	movlb	0	; select bank0
  6850  00DE  00E0               	movwf	??_isr+2
  6851  00DF  3082               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  6852  00E0  00E1               	movwf	??_isr+3
  6853  00E1  0870               	movf	?___wmul,w
  6854  00E2  0760               	addwf	??_isr+2,w
  6855  00E3  00E2               	movwf	??_isr+4
  6856  00E4  0871               	movf	?___wmul+1,w
  6857  00E5  3D61               	addwfc	??_isr+3,w
  6858  00E6  00E3               	movwf	??_isr+5
  6859  00E7  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  6860  00E8  0762               	addwf	??_isr+4,w
  6861  00E9  0084               	movwf	4
  6862  00EA  0863               	movf	??_isr+5,w
  6863  00EB  1803               	skipnc
  6864  00EC  0A63               	incf	??_isr+5,w
  6865  00ED  0085               	movwf	5
  6866  00EE  0800               	movf	0,w	;code access
  6867  00EF  00E4               	movwf	??_isr+6
  6868  00F0  0864               	movf	??_isr+6,w
  6869  00F1  00FA               	movwf	_GLOBAL_sub_patterns_index	;volatile
  6870  00F2  292C               	goto	i1l3506
  6871  00F3                     i1l3496:	
  6872                           
  6873                           ;interrupts.c: 107: else;interrupts.c: 108: {;interrupts.c: 109: temp_data1 = GLOBAL_com
      +                          bo_patterns_column_index & 0x01;
  6874  00F3  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  6875  00F4  3901               	andlw	1
  6876  00F5  00DE               	movwf	??_isr
  6877  00F6  085E               	movf	??_isr,w
  6878  00F7  00F6               	movwf	isr@temp_data1	;volatile
  6879  00F8                     i1l3498:	
  6880                           
  6881                           ;interrupts.c: 110: if (temp_data1)
  6882  00F8  0876               	movf	isr@temp_data1,w	;volatile
  6883  00F9  1903               	btfsc	3,2
  6884  00FA  28FC               	goto	u348_21
  6885  00FB  28FD               	goto	u348_20
  6886  00FC                     u348_21:	
  6887  00FC  2903               	goto	i1l3502
  6888  00FD                     u348_20:	
  6889  00FD                     i1l3500:	
  6890                           
  6891                           ;interrupts.c: 111: temp_data1 = GLOBAL_combo_patterns_column_index - 1;
  6892  00FD  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  6893  00FE  3EFF               	addlw	255
  6894  00FF  00DE               	movwf	??_isr
  6895  0100  085E               	movf	??_isr,w
  6896  0101  00F6               	movwf	isr@temp_data1	;volatile
  6897  0102  2908               	goto	i1l3504
  6898  0103                     i1l3502:	
  6899                           
  6900                           ;interrupts.c: 112: else;interrupts.c: 113: temp_data1 = GLOBAL_combo_patterns_column_in
      +                          dex + 1;
  6901  0103  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  6902  0104  3E01               	addlw	1
  6903  0105  00DE               	movwf	??_isr
  6904  0106  085E               	movf	??_isr,w
  6905  0107  00F6               	movwf	isr@temp_data1	;volatile
  6906  0108                     i1l3504:	
  6907                           
  6908                           ;interrupts.c: 114: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][temp_data1];
  6909  0108  0858               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  6910  0109  00DE               	movwf	??_isr
  6911  010A  01DF               	clrf	??_isr+1
  6912  010B  085E               	movf	??_isr,w
  6913  010C  00F0               	movwf	___wmul@multiplier
  6914  010D  085F               	movf	??_isr+1,w
  6915  010E  00F1               	movwf	___wmul@multiplier+1
  6916  010F  3023               	movlw	35
  6917  0110  00F2               	movwf	___wmul@multiplicand
  6918  0111  3000               	movlw	0
  6919  0112  00F3               	movwf	___wmul@multiplicand+1
  6920  0113  318B  23F0  3180   	fcall	___wmul
  6921  0116  3059               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  6922  0117  0020               	movlb	0	; select bank0
  6923  0118  00E0               	movwf	??_isr+2
  6924  0119  3082               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  6925  011A  00E1               	movwf	??_isr+3
  6926  011B  0870               	movf	?___wmul,w
  6927  011C  0760               	addwf	??_isr+2,w
  6928  011D  00E2               	movwf	??_isr+4
  6929  011E  0871               	movf	?___wmul+1,w
  6930  011F  3D61               	addwfc	??_isr+3,w
  6931  0120  00E3               	movwf	??_isr+5
  6932  0121  0876               	movf	isr@temp_data1,w	;volatile
  6933  0122  0762               	addwf	??_isr+4,w
  6934  0123  0084               	movwf	4
  6935  0124  0863               	movf	??_isr+5,w
  6936  0125  1803               	skipnc
  6937  0126  0A63               	incf	??_isr+5,w
  6938  0127  0085               	movwf	5
  6939  0128  0800               	movf	0,w	;code access
  6940  0129  00E4               	movwf	??_isr+6
  6941  012A  0864               	movf	??_isr+6,w
  6942  012B  00FA               	movwf	_GLOBAL_sub_patterns_index	;volatile
  6943  012C                     i1l3506:	
  6944                           
  6945                           ;interrupts.c: 115: };interrupts.c: 118: {;interrupts.c: 119: if(GLOBAL_combo_patterns_c
      +                          olumn_index%2==1)
  6946  012C  1C78               	btfss	_GLOBAL_combo_patterns_column_index,0	;volatile
  6947  012D  292F               	goto	u349_21
  6948  012E  2930               	goto	u349_20
  6949  012F                     u349_21:	
  6950  012F  2933               	goto	i1l3510
  6951  0130                     u349_20:	
  6952  0130                     i1l3508:	
  6953                           
  6954                           ;interrupts.c: 120: {;interrupts.c: 122: setColorState();
  6955  0130  3185  253F  3180   	fcall	_setColorState
  6956  0133                     i1l3510:	
  6957                           
  6958                           ;interrupts.c: 123: };interrupts.c: 124: };interrupts.c: 126: GLOBAL_combo_patterns_colu
      +                          mn_index++;
  6959  0133  3001               	movlw	1
  6960  0134  0020               	movlb	0	; select bank0
  6961  0135  00DE               	movwf	??_isr
  6962  0136  085E               	movf	??_isr,w
  6963  0137  07F8               	addwf	_GLOBAL_combo_patterns_column_index,f	;volatile
  6964  0138                     i1l3512:	
  6965                           
  6966                           ;interrupts.c: 127: if ((GLOBAL_combo_patterns_column_index > (35 - 1)) || (ROM_COMBO_Pa
      +                          tterns[GLOBAL_combo_patterns_index][GLOBAL_combo_patterns_column_index] == 99))
  6967  0138  3023               	movlw	35
  6968  0139  0278               	subwf	_GLOBAL_combo_patterns_column_index,w	;volatile
  6969  013A  1803               	skipnc
  6970  013B  293D               	goto	u350_21
  6971  013C  293E               	goto	u350_20
  6972  013D                     u350_21:	
  6973  013D  2964               	goto	i1l3516
  6974  013E                     u350_20:	
  6975  013E                     i1l3514:	
  6976  013E  0858               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  6977  013F  00DE               	movwf	??_isr
  6978  0140  01DF               	clrf	??_isr+1
  6979  0141  085E               	movf	??_isr,w
  6980  0142  00F0               	movwf	___wmul@multiplier
  6981  0143  085F               	movf	??_isr+1,w
  6982  0144  00F1               	movwf	___wmul@multiplier+1
  6983  0145  3023               	movlw	35
  6984  0146  00F2               	movwf	___wmul@multiplicand
  6985  0147  3000               	movlw	0
  6986  0148  00F3               	movwf	___wmul@multiplicand+1
  6987  0149  318B  23F0  3180   	fcall	___wmul
  6988  014C  3059               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  6989  014D  0020               	movlb	0	; select bank0
  6990  014E  00E0               	movwf	??_isr+2
  6991  014F  3082               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  6992  0150  00E1               	movwf	??_isr+3
  6993  0151  0870               	movf	?___wmul,w
  6994  0152  0760               	addwf	??_isr+2,w
  6995  0153  00E2               	movwf	??_isr+4
  6996  0154  0871               	movf	?___wmul+1,w
  6997  0155  3D61               	addwfc	??_isr+3,w
  6998  0156  00E3               	movwf	??_isr+5
  6999  0157  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  7000  0158  0762               	addwf	??_isr+4,w
  7001  0159  0084               	movwf	4
  7002  015A  0863               	movf	??_isr+5,w
  7003  015B  1803               	skipnc
  7004  015C  0A63               	incf	??_isr+5,w
  7005  015D  0085               	movwf	5
  7006  015E  0012               	moviw fsr0++
  7007  015F  3A63               	xorlw	99
  7008  0160  1D03               	btfss	3,2
  7009  0161  2963               	goto	u351_21
  7010  0162  2964               	goto	u351_20
  7011  0163                     u351_21:	
  7012  0163  2972               	goto	i1l3524
  7013  0164                     u351_20:	
  7014  0164                     i1l3516:	
  7015                           
  7016                           ;interrupts.c: 128: {;interrupts.c: 129: if (bGLOBAL_STEADY_ON)
  7017  0164  085C               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  7018  0165  1903               	btfsc	3,2
  7019  0166  2968               	goto	u352_21
  7020  0167  2969               	goto	u352_20
  7021  0168                     u352_21:	
  7022  0168  296C               	goto	i1l3520
  7023  0169                     u352_20:	
  7024  0169                     i1l3518:	
  7025                           
  7026                           ;interrupts.c: 130: GLOBAL_combo_patterns_column_index--;
  7027  0169  3001               	movlw	1
  7028  016A  02F8               	subwf	_GLOBAL_combo_patterns_column_index,f	;volatile
  7029  016B  2972               	goto	i1l3524
  7030  016C                     i1l3520:	
  7031                           
  7032                           ;interrupts.c: 131: else;interrupts.c: 132: {;interrupts.c: 133: currentColorCounter = 0
      +                          ;
  7033  016C  01D7               	clrf	_currentColorCounter	;volatile
  7034                           
  7035                           ;interrupts.c: 134: GLOBAL_combo_patterns_column_index = 0;
  7036  016D  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  7037  016E                     i1l3522:	
  7038                           
  7039                           ;interrupts.c: 135: bGLOBAL_END_OF_CYCLE_COND1 = 1;
  7040  016E  3001               	movlw	1
  7041  016F  00DE               	movwf	??_isr
  7042  0170  085E               	movf	??_isr,w
  7043  0171  00D6               	movwf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  7044  0172                     i1l3524:	
  7045                           
  7046                           ;interrupts.c: 136: };interrupts.c: 137: };interrupts.c: 138: GLOBAL_sub_patterns_column
      +                          _index = 0;
  7047  0172  01FB               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  7048  0173                     i1l76:	
  7049                           
  7050                           ;interrupts.c: 139: };interrupts.c: 140: };interrupts.c: 142: if ((GLOBAL_sub_patterns_t
      +                          imer < 6) && bGLOBAL_END_OF_CYCLE_COND1 && (PORTAbits.RA5) && (GLOBAL_SYNC_PULSE_Counter
      +                           == 0) && bGLOBAL_END_OF_CYCLE_COND2)
  7051  0173  3006               	movlw	6
  7052  0174  025B               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  7053  0175  1803               	skipnc
  7054  0176  2978               	goto	u353_21
  7055  0177  2979               	goto	u353_20
  7056  0178                     u353_21:	
  7057  0178  2997               	goto	i1l3538
  7058  0179                     u353_20:	
  7059  0179                     i1l3526:	
  7060  0179  0856               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  7061  017A  1903               	btfsc	3,2
  7062  017B  297D               	goto	u354_21
  7063  017C  297E               	goto	u354_20
  7064  017D                     u354_21:	
  7065  017D  2997               	goto	i1l3538
  7066  017E                     u354_20:	
  7067  017E                     i1l3528:	
  7068  017E  1E8C               	btfss	12,5	;volatile
  7069  017F  2981               	goto	u355_21
  7070  0180  2982               	goto	u355_20
  7071  0181                     u355_21:	
  7072  0181  2997               	goto	i1l3538
  7073  0182                     u355_20:	
  7074  0182                     i1l3530:	
  7075  0182  0877               	movf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7076  0183  1D03               	btfss	3,2
  7077  0184  2986               	goto	u356_21
  7078  0185  2987               	goto	u356_20
  7079  0186                     u356_21:	
  7080  0186  2997               	goto	i1l3538
  7081  0187                     u356_20:	
  7082  0187                     i1l3532:	
  7083  0187  0855               	movf	_bGLOBAL_END_OF_CYCLE_COND2,w	;volatile
  7084  0188  1903               	btfsc	3,2
  7085  0189  298B               	goto	u357_21
  7086  018A  298C               	goto	u357_20
  7087  018B                     u357_21:	
  7088  018B  2997               	goto	i1l3538
  7089  018C                     u357_20:	
  7090  018C                     i1l3534:	
  7091                           
  7092                           ;interrupts.c: 143: {;interrupts.c: 144: OUTPUT_BUFFER = OUTPUT_BUFFER | 0x20;
  7093  018C  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7094  018D  3820               	iorlw	32
  7095  018E  00DE               	movwf	??_isr
  7096  018F  085E               	movf	??_isr,w
  7097  0190  00F9               	movwf	_OUTPUT_BUFFER	;volatile
  7098  0191                     i1l3536:	
  7099                           
  7100                           ;interrupts.c: 145: bGLOBAL_SYNC_SENT = 1;
  7101  0191  3001               	movlw	1
  7102  0192  00DE               	movwf	??_isr
  7103  0193  085E               	movf	??_isr,w
  7104  0194  00D3               	movwf	_bGLOBAL_SYNC_SENT	;volatile
  7105                           
  7106                           ;interrupts.c: 146: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  7107  0195  01D6               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  7108                           
  7109                           ;interrupts.c: 147: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  7110  0196  01D5               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  7111  0197                     i1l3538:	
  7112                           
  7113                           ;interrupts.c: 148: };interrupts.c: 150: if (!bGLOBAL_SYNC_SENT)
  7114  0197  0853               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  7115  0198  1D03               	btfss	3,2
  7116  0199  299B               	goto	u358_21
  7117  019A  299C               	goto	u358_20
  7118  019B                     u358_21:	
  7119  019B  29AA               	goto	i1l3546
  7120  019C                     u358_20:	
  7121  019C                     i1l3540:	
  7122                           
  7123                           ;interrupts.c: 151: {;interrupts.c: 152: if ((!(PORTAbits.RA5)) && (GLOBAL_SYNC_PULSE_Co
      +                          unter < 200))
  7124  019C  1A8C               	btfsc	12,5	;volatile
  7125  019D  299F               	goto	u359_21
  7126  019E  29A0               	goto	u359_20
  7127  019F                     u359_21:	
  7128  019F  29AA               	goto	i1l3546
  7129  01A0                     u359_20:	
  7130  01A0                     i1l3542:	
  7131  01A0  30C8               	movlw	200
  7132  01A1  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7133  01A2  1803               	skipnc
  7134  01A3  29A5               	goto	u360_21
  7135  01A4  29A6               	goto	u360_20
  7136  01A5                     u360_21:	
  7137  01A5  29AA               	goto	i1l3546
  7138  01A6                     u360_20:	
  7139  01A6                     i1l3544:	
  7140                           
  7141                           ;interrupts.c: 153: GLOBAL_SYNC_PULSE_Counter++;
  7142  01A6  3001               	movlw	1
  7143  01A7  00DE               	movwf	??_isr
  7144  01A8  085E               	movf	??_isr,w
  7145  01A9  07F7               	addwf	_GLOBAL_SYNC_PULSE_Counter,f	;volatile
  7146  01AA                     i1l3546:	
  7147                           
  7148                           ;interrupts.c: 154: };interrupts.c: 156: if ((GLOBAL_sub_patterns_timer < 3) && bGLOBAL_
      +                          SYNC_SENT)
  7149  01AA  3003               	movlw	3
  7150  01AB  025B               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  7151  01AC  1803               	skipnc
  7152  01AD  29AF               	goto	u361_21
  7153  01AE  29B0               	goto	u361_20
  7154  01AF                     u361_21:	
  7155  01AF  29BB               	goto	i1l93
  7156  01B0                     u361_20:	
  7157  01B0                     i1l3548:	
  7158  01B0  0853               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  7159  01B1  1903               	btfsc	3,2
  7160  01B2  29B4               	goto	u362_21
  7161  01B3  29B5               	goto	u362_20
  7162  01B4                     u362_21:	
  7163  01B4  29BB               	goto	i1l93
  7164  01B5                     u362_20:	
  7165  01B5                     i1l3550:	
  7166                           
  7167                           ;interrupts.c: 157: {;interrupts.c: 158: OUTPUT_BUFFER = OUTPUT_BUFFER & 0xDF;
  7168  01B5  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7169  01B6  39DF               	andlw	223
  7170  01B7  00DE               	movwf	??_isr
  7171  01B8  085E               	movf	??_isr,w
  7172  01B9  00F9               	movwf	_OUTPUT_BUFFER	;volatile
  7173  01BA                     i1l3552:	
  7174                           
  7175                           ;interrupts.c: 159: bGLOBAL_SYNC_SENT = 0;
  7176  01BA  01D3               	clrf	_bGLOBAL_SYNC_SENT	;volatile
  7177  01BB                     i1l93:	
  7178                           
  7179                           ;interrupts.c: 160: };interrupts.c: 162: if ((GLOBAL_SYNC_PULSE_Counter > 1) && (GLOBAL_
      +                          SYNC_PULSE_Counter < 7) && (PORTAbits.RA5) && !bGLOBAL_STEADY_ON)
  7180  01BB  3002               	movlw	2
  7181  01BC  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7182  01BD  1C03               	skipc
  7183  01BE  29C0               	goto	u363_21
  7184  01BF  29C1               	goto	u363_20
  7185  01C0                     u363_21:	
  7186  01C0  29DA               	goto	i1l3574
  7187  01C1                     u363_20:	
  7188  01C1                     i1l3554:	
  7189  01C1  3007               	movlw	7
  7190  01C2  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7191  01C3  1803               	skipnc
  7192  01C4  29C6               	goto	u364_21
  7193  01C5  29C7               	goto	u364_20
  7194  01C6                     u364_21:	
  7195  01C6  29DA               	goto	i1l3574
  7196  01C7                     u364_20:	
  7197  01C7                     i1l3556:	
  7198  01C7  1E8C               	btfss	12,5	;volatile
  7199  01C8  29CA               	goto	u365_21
  7200  01C9  29CB               	goto	u365_20
  7201  01CA                     u365_21:	
  7202  01CA  29DA               	goto	i1l3574
  7203  01CB                     u365_20:	
  7204  01CB                     i1l3558:	
  7205  01CB  085C               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  7206  01CC  1D03               	btfss	3,2
  7207  01CD  29CF               	goto	u366_21
  7208  01CE  29D0               	goto	u366_20
  7209  01CF                     u366_21:	
  7210  01CF  29DA               	goto	i1l3574
  7211  01D0                     u366_20:	
  7212  01D0                     i1l3560:	
  7213                           
  7214                           ;interrupts.c: 163: {;interrupts.c: 164: GLOBAL_sub_patterns_column_index = 7;
  7215  01D0  3007               	movlw	7
  7216  01D1  00DE               	movwf	??_isr
  7217  01D2  085E               	movf	??_isr,w
  7218  01D3  00FB               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  7219  01D4                     i1l3562:	
  7220                           
  7221                           ;interrupts.c: 165: GLOBAL_sub_patterns_timer =0;
  7222  01D4  01DB               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  7223  01D5                     i1l3564:	
  7224                           
  7225                           ;interrupts.c: 166: GLOBAL_combo_patterns_column_index = 0;
  7226  01D5  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  7227  01D6                     i1l3566:	
  7228                           
  7229                           ;interrupts.c: 167: currentColorCounter = 0;
  7230  01D6  01D7               	clrf	_currentColorCounter	;volatile
  7231  01D7                     i1l3568:	
  7232                           
  7233                           ;interrupts.c: 168: GLOBAL_SYNC_PULSE_Counter = 0;
  7234  01D7  01F7               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  7235  01D8                     i1l3570:	
  7236                           
  7237                           ;interrupts.c: 169: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  7238  01D8  01D6               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  7239  01D9                     i1l3572:	
  7240                           
  7241                           ;interrupts.c: 170: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  7242  01D9  01D5               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  7243  01DA                     i1l3574:	
  7244                           
  7245                           ;interrupts.c: 171: };interrupts.c: 173: if ((PORTAbits.RA5) && ((GLOBAL_SYNC_PULSE_Coun
      +                          ter > 6) || (GLOBAL_SYNC_PULSE_Counter < 2)))
  7246  01DA  1E8C               	btfss	12,5	;volatile
  7247  01DB  29DD               	goto	u367_21
  7248  01DC  29DE               	goto	u367_20
  7249  01DD                     u367_21:	
  7250  01DD  29EB               	goto	i1l3582
  7251  01DE                     u367_20:	
  7252  01DE                     i1l3576:	
  7253  01DE  3007               	movlw	7
  7254  01DF  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7255  01E0  1803               	skipnc
  7256  01E1  29E3               	goto	u368_21
  7257  01E2  29E4               	goto	u368_20
  7258  01E3                     u368_21:	
  7259  01E3  29EA               	goto	i1l3580
  7260  01E4                     u368_20:	
  7261  01E4                     i1l3578:	
  7262  01E4  3002               	movlw	2
  7263  01E5  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  7264  01E6  1803               	skipnc
  7265  01E7  29E9               	goto	u369_21
  7266  01E8  29EA               	goto	u369_20
  7267  01E9                     u369_21:	
  7268  01E9  29EB               	goto	i1l3582
  7269  01EA                     u369_20:	
  7270  01EA                     i1l3580:	
  7271                           
  7272                           ;interrupts.c: 174: GLOBAL_SYNC_PULSE_Counter = 0;
  7273  01EA  01F7               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  7274  01EB                     i1l3582:	
  7275                           
  7276                           ;interrupts.c: 178: if ((OUTPUT_BUFFER_COPY - OUTPUT_BUFFER) != 0)
  7277  01EB  0852               	movf	_OUTPUT_BUFFER_COPY,w	;volatile
  7278  01EC  00DE               	movwf	??_isr
  7279  01ED  01DF               	clrf	??_isr+1
  7280  01EE  085F               	movf	??_isr+1,w
  7281  01EF  00E1               	movwf	??_isr+3
  7282  01F0  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7283  01F1  025E               	subwf	??_isr,w
  7284  01F2  00E0               	movwf	??_isr+2
  7285  01F3  1C03               	skipc
  7286  01F4  03E1               	decf	??_isr+3,f
  7287  01F5  0860               	movf	??_isr+2,w
  7288  01F6  0461               	iorwf	??_isr+3,w
  7289  01F7  1903               	btfsc	3,2
  7290  01F8  29FA               	goto	u370_21
  7291  01F9  29FB               	goto	u370_20
  7292  01FA                     u370_21:	
  7293  01FA  29FF               	goto	i1l98
  7294  01FB                     u370_20:	
  7295  01FB                     i1l3584:	
  7296                           
  7297                           ;interrupts.c: 179: bGLOBAL_OUTPUT_BUFFER_CHANGED = 1;
  7298  01FB  3001               	movlw	1
  7299  01FC  00DE               	movwf	??_isr
  7300  01FD  085E               	movf	??_isr,w
  7301  01FE  00DD               	movwf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  7302  01FF                     i1l98:	
  7303                           
  7304                           ;interrupts.c: 180: OUTPUT_BUFFER_COPY = OUTPUT_BUFFER;
  7305  01FF  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7306  0200  00DE               	movwf	??_isr
  7307  0201  085E               	movf	??_isr,w
  7308  0202  00D2               	movwf	_OUTPUT_BUFFER_COPY	;volatile
  7309  0203                     i1l3586:	
  7310                           
  7311                           ;interrupts.c: 181: GLOBAL_Dummy_Counter++;
  7312  0203  3001               	movlw	1
  7313  0204  00DE               	movwf	??_isr
  7314  0205  085E               	movf	??_isr,w
  7315  0206  07D1               	addwf	_GLOBAL_Dummy_Counter,f	;volatile
  7316  0207                     i1l3588:	
  7317                           
  7318                           ;interrupts.c: 182: GLOBAL_Dummy_Counter2++;
  7319  0207  3001               	movlw	1
  7320  0208  00DE               	movwf	??_isr
  7321  0209  085E               	movf	??_isr,w
  7322  020A  07D0               	addwf	_GLOBAL_Dummy_Counter2,f	;volatile
  7323  020B                     i1l3590:	
  7324                           
  7325                           ;interrupts.c: 183: if (GLOBAL_sub_patterns_timer > 0)
  7326  020B  085B               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  7327  020C  1903               	btfsc	3,2
  7328  020D  2A0F               	goto	u371_21
  7329  020E  2A10               	goto	u371_20
  7330  020F                     u371_21:	
  7331  020F  2A12               	goto	i1l3594
  7332  0210                     u371_20:	
  7333  0210                     i1l3592:	
  7334                           
  7335                           ;interrupts.c: 184: GLOBAL_sub_patterns_timer--;
  7336  0210  3001               	movlw	1
  7337  0211  02DB               	subwf	_GLOBAL_sub_patterns_timer,f	;volatile
  7338  0212                     i1l3594:	
  7339                           
  7340                           ;interrupts.c: 185: Read_Mode_Input();
  7341  0212  318E  2613  3180   	fcall	_Read_Mode_Input
  7342  0215                     i1l3596:	
  7343                           
  7344                           ;interrupts.c: 186: startUpProgram++;
  7345  0215  3001               	movlw	1
  7346  0216  0020               	movlb	0	; select bank0
  7347  0217  00DE               	movwf	??_isr
  7348  0218  085E               	movf	??_isr,w
  7349  0219  07CF               	addwf	_startUpProgram,f	;volatile
  7350  021A                     i1l3598:	
  7351                           
  7352                           ;interrupts.c: 187: if(startUpProgram>5)
  7353  021A  3006               	movlw	6
  7354  021B  024F               	subwf	_startUpProgram,w	;volatile
  7355  021C  1C03               	skipc
  7356  021D  2A1F               	goto	u372_21
  7357  021E  2A20               	goto	u372_20
  7358  021F                     u372_21:	
  7359  021F  2A24               	goto	i1l101
  7360  0220                     u372_20:	
  7361  0220                     i1l3600:	
  7362                           
  7363                           ;interrupts.c: 188: {;interrupts.c: 189: startUpProgram=7;
  7364  0220  3007               	movlw	7
  7365  0221  00DE               	movwf	??_isr
  7366  0222  085E               	movf	??_isr,w
  7367  0223  00CF               	movwf	_startUpProgram	;volatile
  7368  0224                     i1l101:	
  7369  0224  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7370  0225  0009               	retfie
  7371  0226                     __end_of_isr:	
  7372                           
  7373                           	psect	text17
  7374  0E99                     __ptext17:	
  7375 ;; *************** function i1_SetOUTPUT *****************
  7376 ;; Defined at:
  7377 ;;		line 386 in file "main.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, pclath, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;Total ram usage:        1 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    1
  7398 ;; This function calls:
  7399 ;;		i1_GPIO
  7400 ;; This function is called by:
  7401 ;;		_isr
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function i1_SetOUTPUT
  7407  0E99                     i1_SetOUTPUT:	
  7408  0E99                     i1l2698:	
  7409                           ;incstack = 0
  7410                           ; Regs used in i1_SetOUTPUT: [wreg+status,2+status,0+pclath+cstack]
  7411                           
  7412                           
  7413                           ;main.c: 388: static unsigned char temporaryGPIO = 0x00;;main.c: 389: static unsigned ch
      +                          ar pwmCounter = 0;;main.c: 390: if(startUpProgram>5)
  7414  0E99  3006               	movlw	6
  7415  0E9A  0020               	movlb	0	; select bank0
  7416  0E9B  024F               	subwf	_startUpProgram,w	;volatile
  7417  0E9C  1C03               	skipc
  7418  0E9D  2E9F               	goto	u197_21
  7419  0E9E  2EA0               	goto	u197_20
  7420  0E9F                     u197_21:	
  7421  0E9F  2F21               	goto	i1l286
  7422  0EA0                     u197_20:	
  7423  0EA0                     i1l2700:	
  7424                           
  7425                           ;main.c: 391: {;main.c: 392: if(bGiveControlToColorProgram == 0)
  7426  0EA0  082F               	movf	_bGiveControlToColorProgram,w	;volatile
  7427  0EA1  1D03               	btfss	3,2
  7428  0EA2  2EA4               	goto	u198_21
  7429  0EA3  2EA5               	goto	u198_20
  7430  0EA4                     u198_21:	
  7431  0EA4  2F21               	goto	i1l286
  7432  0EA5                     u198_20:	
  7433  0EA5                     i1l2702:	
  7434                           
  7435                           ;main.c: 393: {;main.c: 394: if (bGLOBAL_ENABLE_LEDS && !bCOLOR_DETECT_PRESSED)
  7436  0EA5  083A               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  7437  0EA6  1903               	btfsc	3,2
  7438  0EA7  2EA9               	goto	u199_21
  7439  0EA8  2EAA               	goto	u199_20
  7440  0EA9                     u199_21:	
  7441  0EA9  2F03               	goto	i1l2738
  7442  0EAA                     u199_20:	
  7443  0EAA                     i1l2704:	
  7444  0EAA  0837               	movf	_bCOLOR_DETECT_PRESSED,w	;volatile
  7445  0EAB  1D03               	btfss	3,2
  7446  0EAC  2EAE               	goto	u200_21
  7447  0EAD  2EAF               	goto	u200_20
  7448  0EAE                     u200_21:	
  7449  0EAE  2F03               	goto	i1l2738
  7450  0EAF                     u200_20:	
  7451  0EAF                     i1l2706:	
  7452                           
  7453                           ;main.c: 395: {;main.c: 404: if(currentColor == 0)
  7454  0EAF  0834               	movf	_currentColor,w	;volatile
  7455  0EB0  1D03               	btfss	3,2
  7456  0EB1  2EB3               	goto	u201_21
  7457  0EB2  2EB4               	goto	u201_20
  7458  0EB3                     u201_21:	
  7459  0EB3  2EBA               	goto	i1l2710
  7460  0EB4                     u201_20:	
  7461  0EB4                     i1l2708:	
  7462                           
  7463                           ;main.c: 405: {;main.c: 406: temporaryGPIO = OUTPUT_BUFFER & (0x01|0x20);
  7464  0EB4  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7465  0EB5  3921               	andlw	33
  7466  0EB6  00F1               	movwf	??i1_SetOUTPUT
  7467  0EB7  0871               	movf	??i1_SetOUTPUT,w
  7468  0EB8  00AB               	movwf	SetOUTPUT@temporaryGPIO
  7469                           
  7470                           ;main.c: 407: }
  7471  0EB9  2EDD               	goto	i1l2722
  7472  0EBA                     i1l2710:	
  7473                           
  7474                           ;main.c: 408: else if(currentColor ==1)
  7475  0EBA  0334               	decf	_currentColor,w	;volatile
  7476  0EBB  1D03               	btfss	3,2
  7477  0EBC  2EBE               	goto	u202_21
  7478  0EBD  2EBF               	goto	u202_20
  7479  0EBE                     u202_21:	
  7480  0EBE  2EC5               	goto	i1l2714
  7481  0EBF                     u202_20:	
  7482  0EBF                     i1l2712:	
  7483                           
  7484                           ;main.c: 409: {;main.c: 410: temporaryGPIO = OUTPUT_BUFFER & (0x02|0x20);
  7485  0EBF  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7486  0EC0  3922               	andlw	34
  7487  0EC1  00F1               	movwf	??i1_SetOUTPUT
  7488  0EC2  0871               	movf	??i1_SetOUTPUT,w
  7489  0EC3  00AB               	movwf	SetOUTPUT@temporaryGPIO
  7490                           
  7491                           ;main.c: 411: }
  7492  0EC4  2EDD               	goto	i1l2722
  7493  0EC5                     i1l2714:	
  7494                           
  7495                           ;main.c: 412: else if(currentColor ==2)
  7496  0EC5  3002               	movlw	2
  7497  0EC6  0634               	xorwf	_currentColor,w	;volatile
  7498  0EC7  1D03               	btfss	3,2
  7499  0EC8  2ECA               	goto	u203_21
  7500  0EC9  2ECB               	goto	u203_20
  7501  0ECA                     u203_21:	
  7502  0ECA  2ED1               	goto	i1l2718
  7503  0ECB                     u203_20:	
  7504  0ECB                     i1l2716:	
  7505                           
  7506                           ;main.c: 413: {;main.c: 414: temporaryGPIO = OUTPUT_BUFFER & (0x04|0x20);
  7507  0ECB  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7508  0ECC  3924               	andlw	36
  7509  0ECD  00F1               	movwf	??i1_SetOUTPUT
  7510  0ECE  0871               	movf	??i1_SetOUTPUT,w
  7511  0ECF  00AB               	movwf	SetOUTPUT@temporaryGPIO
  7512                           
  7513                           ;main.c: 415: }
  7514  0ED0  2EDD               	goto	i1l2722
  7515  0ED1                     i1l2718:	
  7516                           
  7517                           ;main.c: 416: else if(currentColor ==3)
  7518  0ED1  3003               	movlw	3
  7519  0ED2  0634               	xorwf	_currentColor,w	;volatile
  7520  0ED3  1D03               	btfss	3,2
  7521  0ED4  2ED6               	goto	u204_21
  7522  0ED5  2ED7               	goto	u204_20
  7523  0ED6                     u204_21:	
  7524  0ED6  2EDD               	goto	i1l271
  7525  0ED7                     u204_20:	
  7526  0ED7                     i1l2720:	
  7527                           
  7528                           ;main.c: 417: {;main.c: 418: temporaryGPIO = OUTPUT_BUFFER & (0x08|0x20);
  7529  0ED7  0879               	movf	_OUTPUT_BUFFER,w	;volatile
  7530  0ED8  3928               	andlw	40
  7531  0ED9  00F1               	movwf	??i1_SetOUTPUT
  7532  0EDA  0871               	movf	??i1_SetOUTPUT,w
  7533  0EDB  00AB               	movwf	SetOUTPUT@temporaryGPIO
  7534  0EDC  2EDD               	goto	i1l2722
  7535  0EDD                     i1l271:	
  7536  0EDD                     i1l2722:	
  7537                           
  7538                           ;main.c: 419: };main.c: 448: if(pwmBool == 1)
  7539  0EDD  0331               	decf	_pwmBool,w	;volatile
  7540  0EDE  1D03               	btfss	3,2
  7541  0EDF  2EE1               	goto	u205_21
  7542  0EE0  2EE2               	goto	u205_20
  7543  0EE1                     u205_21:	
  7544  0EE1  2EFE               	goto	i1l2736
  7545  0EE2                     u205_20:	
  7546  0EE2                     i1l2724:	
  7547                           
  7548                           ;main.c: 449: {;main.c: 450: pwmCounter++;
  7549  0EE2  3001               	movlw	1
  7550  0EE3  00F1               	movwf	??i1_SetOUTPUT
  7551  0EE4  0871               	movf	??i1_SetOUTPUT,w
  7552  0EE5  07AA               	addwf	SetOUTPUT@pwmCounter,f
  7553  0EE6                     i1l2726:	
  7554                           
  7555                           ;main.c: 451: if(pwmCounter<4)
  7556  0EE6  3004               	movlw	4
  7557  0EE7  022A               	subwf	SetOUTPUT@pwmCounter,w
  7558  0EE8  1803               	skipnc
  7559  0EE9  2EEB               	goto	u206_21
  7560  0EEA  2EEC               	goto	u206_20
  7561  0EEB                     u206_21:	
  7562  0EEB  2EF1               	goto	i1l2730
  7563  0EEC                     u206_20:	
  7564  0EEC                     i1l2728:	
  7565                           
  7566                           ;main.c: 452: {;main.c: 453: GPIO(temporaryGPIO);
  7567  0EEC  082B               	movf	SetOUTPUT@temporaryGPIO,w
  7568  0EED  318C  247E  318E   	fcall	i1_GPIO
  7569                           
  7570                           ;main.c: 454: }
  7571  0EF0  2EF5               	goto	i1l2732
  7572  0EF1                     i1l2730:	
  7573                           
  7574                           ;main.c: 455: else;main.c: 456: {;main.c: 457: GPIO(0);
  7575  0EF1  3000               	movlw	0
  7576  0EF2  318C  247E  318E   	fcall	i1_GPIO
  7577  0EF5                     i1l2732:	
  7578                           
  7579                           ;main.c: 458: };main.c: 460: if(pwmCounter>10)
  7580  0EF5  300B               	movlw	11
  7581  0EF6  0020               	movlb	0	; select bank0
  7582  0EF7  022A               	subwf	SetOUTPUT@pwmCounter,w
  7583  0EF8  1C03               	skipc
  7584  0EF9  2EFB               	goto	u207_21
  7585  0EFA  2EFC               	goto	u207_20
  7586  0EFB                     u207_21:	
  7587  0EFB  2F21               	goto	i1l266
  7588  0EFC                     u207_20:	
  7589  0EFC                     i1l2734:	
  7590                           
  7591                           ;main.c: 461: {;main.c: 462: pwmCounter = 0;
  7592  0EFC  01AA               	clrf	SetOUTPUT@pwmCounter
  7593  0EFD  2F21               	goto	i1l286
  7594  0EFE                     i1l2736:	
  7595                           
  7596                           ;main.c: 465: else;main.c: 466: {;main.c: 467: GPIO(temporaryGPIO);
  7597  0EFE  082B               	movf	SetOUTPUT@temporaryGPIO,w
  7598  0EFF  318C  247E  318E   	fcall	i1_GPIO
  7599  0F02  2F21               	goto	i1l286
  7600  0F03                     i1l2738:	
  7601                           
  7602                           ;main.c: 470: else;main.c: 471: {;main.c: 472: if (bGLOBAL_IS_PROGRAMMING)
  7603  0F03  083B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  7604  0F04  1903               	btfsc	3,2
  7605  0F05  2F07               	goto	u208_21
  7606  0F06  2F08               	goto	u208_20
  7607  0F07                     u208_21:	
  7608  0F07  2F1C               	goto	i1l2748
  7609  0F08                     u208_20:	
  7610  0F08                     i1l2740:	
  7611                           
  7612                           ;main.c: 473: {;main.c: 474: if (!bGLOBAL_CHANGING_PATTERN)
  7613  0F08  083D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  7614  0F09  1D03               	btfss	3,2
  7615  0F0A  2F0C               	goto	u209_21
  7616  0F0B  2F0D               	goto	u209_20
  7617  0F0C                     u209_21:	
  7618  0F0C  2F21               	goto	i1l286
  7619  0F0D                     u209_20:	
  7620  0F0D                     i1l2742:	
  7621                           
  7622                           ;main.c: 475: {;main.c: 476: if (bGLOBAL_InPhase)
  7623  0F0D  0854               	movf	_bGLOBAL_InPhase,w	;volatile
  7624  0F0E  1903               	btfsc	3,2
  7625  0F0F  2F11               	goto	u210_21
  7626  0F10  2F12               	goto	u210_20
  7627  0F11                     u210_21:	
  7628  0F11  2F17               	goto	i1l2746
  7629  0F12                     u210_20:	
  7630  0F12                     i1l2744:	
  7631                           
  7632                           ;main.c: 477: GPIO(1);
  7633  0F12  3001               	movlw	1
  7634  0F13  318C  247E  318E   	fcall	i1_GPIO
  7635  0F16  2F21               	goto	i1l286
  7636  0F17                     i1l2746:	
  7637                           
  7638                           ;main.c: 478: else;main.c: 479: GPIO(0);
  7639  0F17  3000               	movlw	0
  7640  0F18  318C  247E  318E   	fcall	i1_GPIO
  7641  0F1B  2F21               	goto	i1l286
  7642  0F1C                     i1l2748:	
  7643                           
  7644                           ;main.c: 482: {;main.c: 483: GPIO(0);
  7645  0F1C  3000               	movlw	0
  7646  0F1D  318C  247E  318E   	fcall	i1_GPIO
  7647  0F20  2F21               	goto	i1l286
  7648  0F21                     i1l266:	
  7649  0F21                     i1l286:	
  7650  0F21  0008               	return
  7651  0F22                     __end_ofi1_SetOUTPUT:	
  7652                           
  7653                           	psect	text18
  7654  0C7E                     __ptext18:	
  7655 ;; *************** function i1_GPIO *****************
  7656 ;; Defined at:
  7657 ;;		line 337 in file "main.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  i               1    wreg     unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  i               1    0[COMMON] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;Total ram usage:        1 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		i1_SetOUTPUT
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           
  7685                           ;psect for function i1_GPIO
  7686  0C7E                     i1_GPIO:	
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in i1_GPIO: [wreg]
  7690                           ;i1GPIO@i stored from wreg
  7691  0C7E  00F0               	movwf	i1GPIO@i
  7692  0C7F                     i1l2196:	
  7693                           
  7694                           ;main.c: 339: if((i&0x20) == 0x20)
  7695  0C7F  1EF0               	btfss	i1GPIO@i,5
  7696  0C80  2C82               	goto	u138_21
  7697  0C81  2C83               	goto	u138_20
  7698  0C82                     u138_21:	
  7699  0C82  2C86               	goto	i1l248
  7700  0C83                     u138_20:	
  7701  0C83                     i1l2198:	
  7702                           
  7703                           ;main.c: 340: {;main.c: 341: (PORTAbits.RA4) = 1;
  7704  0C83  0020               	movlb	0	; select bank0
  7705  0C84  160C               	bsf	12,4	;volatile
  7706                           
  7707                           ;main.c: 342: }
  7708  0C85  2C88               	goto	i1l2200
  7709  0C86                     i1l248:	
  7710                           
  7711                           ;main.c: 343: else;main.c: 344: {;main.c: 345: (PORTAbits.RA4) = 0;
  7712  0C86  0020               	movlb	0	; select bank0
  7713  0C87  120C               	bcf	12,4	;volatile
  7714  0C88                     i1l2200:	
  7715                           
  7716                           ;main.c: 346: };main.c: 347: if((i&0x04) == 0x04)
  7717  0C88  1D70               	btfss	i1GPIO@i,2
  7718  0C89  2C8B               	goto	u139_21
  7719  0C8A  2C8C               	goto	u139_20
  7720  0C8B                     u139_21:	
  7721  0C8B  2C8E               	goto	i1l250
  7722  0C8C                     u139_20:	
  7723  0C8C                     i1l2202:	
  7724                           
  7725                           ;main.c: 348: {;main.c: 349: (PORTCbits.RC0) = 1;
  7726  0C8C  140E               	bsf	14,0	;volatile
  7727                           
  7728                           ;main.c: 350: }
  7729  0C8D  2C8F               	goto	i1l2204
  7730  0C8E                     i1l250:	
  7731                           
  7732                           ;main.c: 351: else;main.c: 352: {;main.c: 353: (PORTCbits.RC0) = 0;
  7733  0C8E  100E               	bcf	14,0	;volatile
  7734  0C8F                     i1l2204:	
  7735                           
  7736                           ;main.c: 354: };main.c: 356: if((i&0x02) == 0x02)
  7737  0C8F  1CF0               	btfss	i1GPIO@i,1
  7738  0C90  2C92               	goto	u140_21
  7739  0C91  2C93               	goto	u140_20
  7740  0C92                     u140_21:	
  7741  0C92  2C95               	goto	i1l252
  7742  0C93                     u140_20:	
  7743  0C93                     i1l2206:	
  7744                           
  7745                           ;main.c: 357: {;main.c: 358: (PORTCbits.RC1) = 1;
  7746  0C93  148E               	bsf	14,1	;volatile
  7747                           
  7748                           ;main.c: 359: }
  7749  0C94  2C96               	goto	i1l2208
  7750  0C95                     i1l252:	
  7751                           
  7752                           ;main.c: 360: else;main.c: 361: {;main.c: 362: (PORTCbits.RC1) = 0;
  7753  0C95  108E               	bcf	14,1	;volatile
  7754  0C96                     i1l2208:	
  7755                           
  7756                           ;main.c: 363: };main.c: 365: if((i&0x01) == 0x01)
  7757  0C96  1C70               	btfss	i1GPIO@i,0
  7758  0C97  2C99               	goto	u141_21
  7759  0C98  2C9A               	goto	u141_20
  7760  0C99                     u141_21:	
  7761  0C99  2C9C               	goto	i1l254
  7762  0C9A                     u141_20:	
  7763  0C9A                     i1l2210:	
  7764                           
  7765                           ;main.c: 366: {;main.c: 367: (PORTCbits.RC2) = 1;
  7766  0C9A  150E               	bsf	14,2	;volatile
  7767                           
  7768                           ;main.c: 368: }
  7769  0C9B  2C9D               	goto	i1l2212
  7770  0C9C                     i1l254:	
  7771                           
  7772                           ;main.c: 369: else;main.c: 370: {;main.c: 371: (PORTCbits.RC2) = 0;
  7773  0C9C  110E               	bcf	14,2	;volatile
  7774  0C9D                     i1l2212:	
  7775                           
  7776                           ;main.c: 372: };main.c: 374: if((i&0x08) == 0x08)
  7777  0C9D  1DF0               	btfss	i1GPIO@i,3
  7778  0C9E  2CA0               	goto	u142_21
  7779  0C9F  2CA1               	goto	u142_20
  7780  0CA0                     u142_21:	
  7781  0CA0  2CA3               	goto	i1l256
  7782  0CA1                     u142_20:	
  7783  0CA1                     i1l2214:	
  7784                           
  7785                           ;main.c: 375: {;main.c: 376: (PORTAbits.RA2) = 1;
  7786  0CA1  150C               	bsf	12,2	;volatile
  7787                           
  7788                           ;main.c: 377: }
  7789  0CA2  2CA4               	goto	i1l258
  7790  0CA3                     i1l256:	
  7791                           
  7792                           ;main.c: 378: else;main.c: 379: {;main.c: 380: (PORTAbits.RA2) = 0;
  7793  0CA3  110C               	bcf	12,2	;volatile
  7794  0CA4                     i1l258:	
  7795  0CA4  0008               	return
  7796  0CA5                     __end_ofi1_GPIO:	
  7797                           
  7798                           	psect	text19
  7799  053F                     __ptext19:	
  7800 ;; *************** function _setColorState *****************
  7801 ;; Defined at:
  7802 ;;		line 522 in file "main.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;Total ram usage:        1 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_isr
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _setColorState
  7831  053F                     _setColorState:	
  7832  053F                     i1l2268:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _setColorState: [wreg-fsr1h+status,2+status,0]
  7835                           
  7836                           
  7837                           ;main.c: 524: indexOfMode = 0;
  7838  053F  0020               	movlb	0	; select bank0
  7839  0540  01AE               	clrf	_indexOfMode
  7840  0541                     i1l2270:	
  7841                           
  7842                           ;main.c: 525: if (bGLOBAL_MODE1_PRESSED)
  7843  0541  0839               	movf	_bGLOBAL_MODE1_PRESSED,w	;volatile
  7844  0542  1903               	btfsc	3,2
  7845  0543  2D45               	goto	u157_21
  7846  0544  2D46               	goto	u157_20
  7847  0545                     u157_21:	
  7848  0545  2D48               	goto	i1l2274
  7849  0546                     u157_20:	
  7850  0546                     i1l2272:	
  7851                           
  7852                           ;main.c: 526: indexOfMode = 1;
  7853  0546  01AE               	clrf	_indexOfMode
  7854  0547  0AAE               	incf	_indexOfMode,f
  7855  0548                     i1l2274:	
  7856                           
  7857                           ;main.c: 527: if (bGLOBAL_MODE2_PRESSED)
  7858  0548  0838               	movf	_bGLOBAL_MODE2_PRESSED,w	;volatile
  7859  0549  1903               	btfsc	3,2
  7860  054A  2D4C               	goto	u158_21
  7861  054B  2D4D               	goto	u158_20
  7862  054C                     u158_21:	
  7863  054C  2E05               	goto	i1l2410
  7864  054D                     u158_20:	
  7865  054D                     i1l2276:	
  7866                           
  7867                           ;main.c: 528: indexOfMode = 2;
  7868  054D  3002               	movlw	2
  7869  054E  00F0               	movwf	??_setColorState
  7870  054F  0870               	movf	??_setColorState,w
  7871  0550  00AE               	movwf	_indexOfMode
  7872  0551  2E05               	goto	i1l2410
  7873  0552                     i1l2278:	
  7874                           
  7875                           ;main.c: 533: currentColor = 0;
  7876  0552  01B4               	clrf	_currentColor	;volatile
  7877                           
  7878                           ;main.c: 534: break;
  7879  0553  2E35               	goto	i1l378
  7880  0554                     i1l2280:	
  7881                           
  7882                           ;main.c: 536: currentColor = 1;
  7883  0554  3001               	movlw	1
  7884  0555  00F0               	movwf	??_setColorState
  7885  0556  0870               	movf	??_setColorState,w
  7886  0557  00B4               	movwf	_currentColor	;volatile
  7887                           
  7888                           ;main.c: 537: break;
  7889  0558  2E35               	goto	i1l378
  7890  0559                     i1l2282:	
  7891                           
  7892                           ;main.c: 539: currentColor = 2;
  7893  0559  3002               	movlw	2
  7894  055A  00F0               	movwf	??_setColorState
  7895  055B  0870               	movf	??_setColorState,w
  7896  055C  00B4               	movwf	_currentColor	;volatile
  7897                           
  7898                           ;main.c: 540: break;
  7899  055D  2E35               	goto	i1l378
  7900  055E                     i1l2284:	
  7901                           
  7902                           ;main.c: 542: currentColor = 3;
  7903  055E  3003               	movlw	3
  7904  055F  00F0               	movwf	??_setColorState
  7905  0560  0870               	movf	??_setColorState,w
  7906  0561  00B4               	movwf	_currentColor	;volatile
  7907                           
  7908                           ;main.c: 543: break;
  7909  0562  2E35               	goto	i1l378
  7910  0563                     i1l2286:	
  7911                           
  7912                           ;main.c: 548: currentColor = 0;
  7913  0563  01B4               	clrf	_currentColor	;volatile
  7914  0564                     i1l2288:	
  7915                           
  7916                           ;main.c: 549: currentColorCounter = 1;
  7917  0564  3001               	movlw	1
  7918  0565  00F0               	movwf	??_setColorState
  7919  0566  0870               	movf	??_setColorState,w
  7920  0567  00D7               	movwf	_currentColorCounter	;volatile
  7921                           
  7922                           ;main.c: 550: break;
  7923  0568  2E35               	goto	i1l378
  7924  0569                     i1l2290:	
  7925                           
  7926                           ;main.c: 552: currentColor = 1;
  7927  0569  3001               	movlw	1
  7928  056A  00F0               	movwf	??_setColorState
  7929  056B  0870               	movf	??_setColorState,w
  7930  056C  00B4               	movwf	_currentColor	;volatile
  7931  056D                     i1l2292:	
  7932                           
  7933                           ;main.c: 553: currentColorCounter = 0;
  7934  056D  01D7               	clrf	_currentColorCounter	;volatile
  7935                           
  7936                           ;main.c: 554: break;
  7937  056E  2E35               	goto	i1l378
  7938  056F                     i1l2296:	
  7939  056F  0857               	movf	_currentColorCounter,w	;volatile
  7940                           
  7941                           ; Switch size 1, requested type "simple"
  7942                           ; Number of cases is 2, Range of values is 0 to 1
  7943                           ; switch strategies available:
  7944                           ; Name         Instructions Cycles
  7945                           ; simple_byte            7     4 (average)
  7946                           ; direct_byte           10     6 (fixed)
  7947                           ; jumptable            260     6 (fixed)
  7948                           ;	Chosen strategy is simple_byte
  7949  0570  3A00               	xorlw	0	; case 0
  7950  0571  1903               	skipnz
  7951  0572  2D63               	goto	i1l2286
  7952  0573  3A01               	xorlw	1	; case 1
  7953  0574  1903               	skipnz
  7954  0575  2D69               	goto	i1l2290
  7955  0576  2E35               	goto	i1l378
  7956  0577                     i1l2302:	
  7957                           
  7958                           ;main.c: 567: currentColor = 2;
  7959  0577  3002               	movlw	2
  7960  0578  00F0               	movwf	??_setColorState
  7961  0579  0870               	movf	??_setColorState,w
  7962  057A  00B4               	movwf	_currentColor	;volatile
  7963  057B  2D6D               	goto	i1l2292
  7964  057C                     i1l2308:	
  7965  057C  0857               	movf	_currentColorCounter,w	;volatile
  7966                           
  7967                           ; Switch size 1, requested type "simple"
  7968                           ; Number of cases is 2, Range of values is 0 to 1
  7969                           ; switch strategies available:
  7970                           ; Name         Instructions Cycles
  7971                           ; simple_byte            7     4 (average)
  7972                           ; direct_byte           10     6 (fixed)
  7973                           ; jumptable            260     6 (fixed)
  7974                           ;	Chosen strategy is simple_byte
  7975  057D  3A00               	xorlw	0	; case 0
  7976  057E  1903               	skipnz
  7977  057F  2D63               	goto	i1l2286
  7978  0580  3A01               	xorlw	1	; case 1
  7979  0581  1903               	skipnz
  7980  0582  2D77               	goto	i1l2302
  7981  0583  2E35               	goto	i1l378
  7982  0584                     i1l2314:	
  7983                           
  7984                           ;main.c: 582: currentColor = 3;
  7985  0584  3003               	movlw	3
  7986  0585  00F0               	movwf	??_setColorState
  7987  0586  0870               	movf	??_setColorState,w
  7988  0587  00B4               	movwf	_currentColor	;volatile
  7989  0588  2D6D               	goto	i1l2292
  7990  0589                     i1l2320:	
  7991  0589  0857               	movf	_currentColorCounter,w	;volatile
  7992                           
  7993                           ; Switch size 1, requested type "simple"
  7994                           ; Number of cases is 2, Range of values is 0 to 1
  7995                           ; switch strategies available:
  7996                           ; Name         Instructions Cycles
  7997                           ; simple_byte            7     4 (average)
  7998                           ; direct_byte           10     6 (fixed)
  7999                           ; jumptable            260     6 (fixed)
  8000                           ;	Chosen strategy is simple_byte
  8001  058A  3A00               	xorlw	0	; case 0
  8002  058B  1903               	skipnz
  8003  058C  2D63               	goto	i1l2286
  8004  058D  3A01               	xorlw	1	; case 1
  8005  058E  1903               	skipnz
  8006  058F  2D84               	goto	i1l2314
  8007  0590  2E35               	goto	i1l378
  8008  0591                     i1l2322:	
  8009                           
  8010                           ;main.c: 593: currentColor = 1;
  8011  0591  3001               	movlw	1
  8012  0592  00F0               	movwf	??_setColorState
  8013  0593  0870               	movf	??_setColorState,w
  8014  0594  00B4               	movwf	_currentColor	;volatile
  8015                           
  8016                           ;main.c: 594: currentColorCounter = 1;
  8017  0595  3001               	movlw	1
  8018  0596  00F0               	movwf	??_setColorState
  8019  0597  0870               	movf	??_setColorState,w
  8020  0598  00D7               	movwf	_currentColorCounter	;volatile
  8021                           
  8022                           ;main.c: 595: break;
  8023  0599  2E35               	goto	i1l378
  8024  059A                     i1l2330:	
  8025  059A  0857               	movf	_currentColorCounter,w	;volatile
  8026                           
  8027                           ; Switch size 1, requested type "simple"
  8028                           ; Number of cases is 2, Range of values is 0 to 1
  8029                           ; switch strategies available:
  8030                           ; Name         Instructions Cycles
  8031                           ; simple_byte            7     4 (average)
  8032                           ; direct_byte           10     6 (fixed)
  8033                           ; jumptable            260     6 (fixed)
  8034                           ;	Chosen strategy is simple_byte
  8035  059B  3A00               	xorlw	0	; case 0
  8036  059C  1903               	skipnz
  8037  059D  2D91               	goto	i1l2322
  8038  059E  3A01               	xorlw	1	; case 1
  8039  059F  1903               	skipnz
  8040  05A0  2D77               	goto	i1l2302
  8041  05A1  2E35               	goto	i1l378
  8042  05A2                     i1l2340:	
  8043  05A2  0857               	movf	_currentColorCounter,w	;volatile
  8044                           
  8045                           ; Switch size 1, requested type "simple"
  8046                           ; Number of cases is 2, Range of values is 0 to 1
  8047                           ; switch strategies available:
  8048                           ; Name         Instructions Cycles
  8049                           ; simple_byte            7     4 (average)
  8050                           ; direct_byte           10     6 (fixed)
  8051                           ; jumptable            260     6 (fixed)
  8052                           ;	Chosen strategy is simple_byte
  8053  05A3  3A00               	xorlw	0	; case 0
  8054  05A4  1903               	skipnz
  8055  05A5  2D91               	goto	i1l2322
  8056  05A6  3A01               	xorlw	1	; case 1
  8057  05A7  1903               	skipnz
  8058  05A8  2D84               	goto	i1l2314
  8059  05A9  2E35               	goto	i1l378
  8060  05AA                     i1l2342:	
  8061                           
  8062                           ;main.c: 623: currentColor = 2;
  8063  05AA  3002               	movlw	2
  8064  05AB  00F0               	movwf	??_setColorState
  8065  05AC  0870               	movf	??_setColorState,w
  8066  05AD  00B4               	movwf	_currentColor	;volatile
  8067                           
  8068                           ;main.c: 624: currentColorCounter = 1;
  8069  05AE  3001               	movlw	1
  8070  05AF  00F0               	movwf	??_setColorState
  8071  05B0  0870               	movf	??_setColorState,w
  8072  05B1  00D7               	movwf	_currentColorCounter	;volatile
  8073                           
  8074                           ;main.c: 625: break;
  8075  05B2  2E35               	goto	i1l378
  8076  05B3                     i1l2350:	
  8077  05B3  0857               	movf	_currentColorCounter,w	;volatile
  8078                           
  8079                           ; Switch size 1, requested type "simple"
  8080                           ; Number of cases is 2, Range of values is 0 to 1
  8081                           ; switch strategies available:
  8082                           ; Name         Instructions Cycles
  8083                           ; simple_byte            7     4 (average)
  8084                           ; direct_byte           10     6 (fixed)
  8085                           ; jumptable            260     6 (fixed)
  8086                           ;	Chosen strategy is simple_byte
  8087  05B4  3A00               	xorlw	0	; case 0
  8088  05B5  1903               	skipnz
  8089  05B6  2DAA               	goto	i1l2342
  8090  05B7  3A01               	xorlw	1	; case 1
  8091  05B8  1903               	skipnz
  8092  05B9  2D84               	goto	i1l2314
  8093  05BA  2E35               	goto	i1l378
  8094  05BB                     i1l2356:	
  8095                           
  8096                           ;main.c: 642: currentColor = 1;
  8097  05BB  3001               	movlw	1
  8098  05BC  00F0               	movwf	??_setColorState
  8099  05BD  0870               	movf	??_setColorState,w
  8100  05BE  00B4               	movwf	_currentColor	;volatile
  8101                           
  8102                           ;main.c: 643: currentColorCounter = 2;
  8103  05BF  3002               	movlw	2
  8104  05C0  00F0               	movwf	??_setColorState
  8105  05C1  0870               	movf	??_setColorState,w
  8106  05C2  00D7               	movwf	_currentColorCounter	;volatile
  8107                           
  8108                           ;main.c: 644: break;
  8109  05C3  2E35               	goto	i1l378
  8110  05C4                     i1l2364:	
  8111  05C4  0857               	movf	_currentColorCounter,w	;volatile
  8112                           
  8113                           ; Switch size 1, requested type "simple"
  8114                           ; Number of cases is 3, Range of values is 0 to 2
  8115                           ; switch strategies available:
  8116                           ; Name         Instructions Cycles
  8117                           ; simple_byte           10     6 (average)
  8118                           ; direct_byte           12     6 (fixed)
  8119                           ; jumptable            260     6 (fixed)
  8120                           ;	Chosen strategy is simple_byte
  8121  05C5  3A00               	xorlw	0	; case 0
  8122  05C6  1903               	skipnz
  8123  05C7  2D63               	goto	i1l2286
  8124  05C8  3A01               	xorlw	1	; case 1
  8125  05C9  1903               	skipnz
  8126  05CA  2DBB               	goto	i1l2356
  8127  05CB  3A03               	xorlw	3	; case 2
  8128  05CC  1903               	skipnz
  8129  05CD  2D77               	goto	i1l2302
  8130  05CE  2E35               	goto	i1l378
  8131  05CF                     i1l2378:	
  8132  05CF  0857               	movf	_currentColorCounter,w	;volatile
  8133                           
  8134                           ; Switch size 1, requested type "simple"
  8135                           ; Number of cases is 3, Range of values is 0 to 2
  8136                           ; switch strategies available:
  8137                           ; Name         Instructions Cycles
  8138                           ; simple_byte           10     6 (average)
  8139                           ; direct_byte           12     6 (fixed)
  8140                           ; jumptable            260     6 (fixed)
  8141                           ;	Chosen strategy is simple_byte
  8142  05D0  3A00               	xorlw	0	; case 0
  8143  05D1  1903               	skipnz
  8144  05D2  2D63               	goto	i1l2286
  8145  05D3  3A01               	xorlw	1	; case 1
  8146  05D4  1903               	skipnz
  8147  05D5  2DBB               	goto	i1l2356
  8148  05D6  3A03               	xorlw	3	; case 2
  8149  05D7  1903               	skipnz
  8150  05D8  2D84               	goto	i1l2314
  8151  05D9  2E35               	goto	i1l378
  8152  05DA                     i1l2382:	
  8153                           
  8154                           ;main.c: 680: currentColor = 2;
  8155  05DA  3002               	movlw	2
  8156  05DB  00F0               	movwf	??_setColorState
  8157  05DC  0870               	movf	??_setColorState,w
  8158  05DD  00B4               	movwf	_currentColor	;volatile
  8159                           
  8160                           ;main.c: 681: currentColorCounter = 2;
  8161  05DE  3002               	movlw	2
  8162  05DF  00F0               	movwf	??_setColorState
  8163  05E0  0870               	movf	??_setColorState,w
  8164  05E1  00D7               	movwf	_currentColorCounter	;volatile
  8165                           
  8166                           ;main.c: 682: break;
  8167  05E2  2E35               	goto	i1l378
  8168  05E3                     i1l2390:	
  8169  05E3  0857               	movf	_currentColorCounter,w	;volatile
  8170                           
  8171                           ; Switch size 1, requested type "simple"
  8172                           ; Number of cases is 3, Range of values is 0 to 2
  8173                           ; switch strategies available:
  8174                           ; Name         Instructions Cycles
  8175                           ; simple_byte           10     6 (average)
  8176                           ; direct_byte           12     6 (fixed)
  8177                           ; jumptable            260     6 (fixed)
  8178                           ;	Chosen strategy is simple_byte
  8179  05E4  3A00               	xorlw	0	; case 0
  8180  05E5  1903               	skipnz
  8181  05E6  2D91               	goto	i1l2322
  8182  05E7  3A01               	xorlw	1	; case 1
  8183  05E8  1903               	skipnz
  8184  05E9  2DDA               	goto	i1l2382
  8185  05EA  3A03               	xorlw	3	; case 2
  8186  05EB  1903               	skipnz
  8187  05EC  2D84               	goto	i1l2314
  8188  05ED  2E35               	goto	i1l378
  8189  05EE                     i1l2398:	
  8190                           
  8191                           ;main.c: 703: currentColor = 2;
  8192  05EE  3002               	movlw	2
  8193  05EF  00F0               	movwf	??_setColorState
  8194  05F0  0870               	movf	??_setColorState,w
  8195  05F1  00B4               	movwf	_currentColor	;volatile
  8196                           
  8197                           ;main.c: 704: currentColorCounter = 3;
  8198  05F2  3003               	movlw	3
  8199  05F3  00F0               	movwf	??_setColorState
  8200  05F4  0870               	movf	??_setColorState,w
  8201  05F5  00D7               	movwf	_currentColorCounter	;volatile
  8202                           
  8203                           ;main.c: 705: break;
  8204  05F6  2E35               	goto	i1l378
  8205  05F7                     i1l2406:	
  8206  05F7  0857               	movf	_currentColorCounter,w	;volatile
  8207                           
  8208                           ; Switch size 1, requested type "simple"
  8209                           ; Number of cases is 4, Range of values is 0 to 3
  8210                           ; switch strategies available:
  8211                           ; Name         Instructions Cycles
  8212                           ; simple_byte           13     7 (average)
  8213                           ; direct_byte           14     6 (fixed)
  8214                           ; jumptable            260     6 (fixed)
  8215                           ;	Chosen strategy is simple_byte
  8216  05F8  3A00               	xorlw	0	; case 0
  8217  05F9  1903               	skipnz
  8218  05FA  2D63               	goto	i1l2286
  8219  05FB  3A01               	xorlw	1	; case 1
  8220  05FC  1903               	skipnz
  8221  05FD  2DBB               	goto	i1l2356
  8222  05FE  3A03               	xorlw	3	; case 2
  8223  05FF  1903               	skipnz
  8224  0600  2DEE               	goto	i1l2398
  8225  0601  3A01               	xorlw	1	; case 3
  8226  0602  1903               	skipnz
  8227  0603  2D84               	goto	i1l2314
  8228  0604  2E35               	goto	i1l378
  8229  0605                     i1l2410:	
  8230  0605  082E               	movf	_indexOfMode,w
  8231  0606  3E66               	addlw	(low (_colorState| 0))& (0+255)
  8232  0607  0086               	movwf	6
  8233  0608  0187               	clrf	7
  8234  0609  0801               	movf	1,w
  8235                           
  8236                           ; Switch size 1, requested type "simple"
  8237                           ; Number of cases is 14, Range of values is 0 to 13
  8238                           ; switch strategies available:
  8239                           ; Name         Instructions Cycles
  8240                           ; direct_byte           34     6 (fixed)
  8241                           ; simple_byte           43    22 (average)
  8242                           ; jumptable            260     6 (fixed)
  8243                           ;	Chosen strategy is simple_byte
  8244  060A  3A00               	xorlw	0	; case 0
  8245  060B  1903               	skipnz
  8246  060C  2D52               	goto	i1l2278
  8247  060D  3A01               	xorlw	1	; case 1
  8248  060E  1903               	skipnz
  8249  060F  2D54               	goto	i1l2280
  8250  0610  3A03               	xorlw	3	; case 2
  8251  0611  1903               	skipnz
  8252  0612  2D59               	goto	i1l2282
  8253  0613  3A01               	xorlw	1	; case 3
  8254  0614  1903               	skipnz
  8255  0615  2D5E               	goto	i1l2284
  8256  0616  3A07               	xorlw	7	; case 4
  8257  0617  1903               	skipnz
  8258  0618  2D6F               	goto	i1l2296
  8259  0619  3A01               	xorlw	1	; case 5
  8260  061A  1903               	skipnz
  8261  061B  2D7C               	goto	i1l2308
  8262  061C  3A03               	xorlw	3	; case 6
  8263  061D  1903               	skipnz
  8264  061E  2D89               	goto	i1l2320
  8265  061F  3A01               	xorlw	1	; case 7
  8266  0620  1903               	skipnz
  8267  0621  2D9A               	goto	i1l2330
  8268  0622  3A0F               	xorlw	15	; case 8
  8269  0623  1903               	skipnz
  8270  0624  2DA2               	goto	i1l2340
  8271  0625  3A01               	xorlw	1	; case 9
  8272  0626  1903               	skipnz
  8273  0627  2DB3               	goto	i1l2350
  8274  0628  3A03               	xorlw	3	; case 10
  8275  0629  1903               	skipnz
  8276  062A  2DC4               	goto	i1l2364
  8277  062B  3A01               	xorlw	1	; case 11
  8278  062C  1903               	skipnz
  8279  062D  2DCF               	goto	i1l2378
  8280  062E  3A07               	xorlw	7	; case 12
  8281  062F  1903               	skipnz
  8282  0630  2DE3               	goto	i1l2390
  8283  0631  3A01               	xorlw	1	; case 13
  8284  0632  1903               	skipnz
  8285  0633  2DF7               	goto	i1l2406
  8286  0634  2E35               	goto	i1l378
  8287  0635                     i1l378:	
  8288  0635  0008               	return
  8289  0636                     __end_of_setColorState:	
  8290                           
  8291                           	psect	text20
  8292  0BF0                     __ptext20:	
  8293 ;; *************** function ___wmul *****************
  8294 ;; Defined at:
  8295 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  multiplier      2    0[COMMON] unsigned int 
  8298 ;;  multiplicand    2    2[COMMON] unsigned int 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  product         2    4[COMMON] unsigned int 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  2    0[COMMON] unsigned int 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;Total ram usage:        6 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_isr
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function ___wmul
  8325  0BF0                     ___wmul:	
  8326  0BF0                     i1l3430:	
  8327                           ;incstack = 0
  8328                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8329                           
  8330  0BF0  01F4               	clrf	___wmul@product
  8331  0BF1  01F5               	clrf	___wmul@product+1
  8332  0BF2                     i1l3432:	
  8333  0BF2  1C70               	btfss	___wmul@multiplier,0
  8334  0BF3  2BF5               	goto	u333_21
  8335  0BF4  2BF6               	goto	u333_20
  8336  0BF5                     u333_21:	
  8337  0BF5  2BFA               	goto	i1l703
  8338  0BF6                     u333_20:	
  8339  0BF6                     i1l3434:	
  8340  0BF6  0872               	movf	___wmul@multiplicand,w
  8341  0BF7  07F4               	addwf	___wmul@product,f
  8342  0BF8  0873               	movf	___wmul@multiplicand+1,w
  8343  0BF9  3DF5               	addwfc	___wmul@product+1,f
  8344  0BFA                     i1l703:	
  8345  0BFA  3001               	movlw	1
  8346  0BFB                     u334_25:	
  8347  0BFB  35F2               	lslf	___wmul@multiplicand,f
  8348  0BFC  0DF3               	rlf	___wmul@multiplicand+1,f
  8349  0BFD  0B89               	decfsz	9,f
  8350  0BFE  2BFB               	goto	u334_25
  8351  0BFF                     i1l3436:	
  8352  0BFF  3001               	movlw	1
  8353  0C00                     u335_25:	
  8354  0C00  36F1               	lsrf	___wmul@multiplier+1,f
  8355  0C01  0CF0               	rrf	___wmul@multiplier,f
  8356  0C02  0B89               	decfsz	9,f
  8357  0C03  2C00               	goto	u335_25
  8358  0C04                     i1l3438:	
  8359  0C04  0870               	movf	___wmul@multiplier,w
  8360  0C05  0471               	iorwf	___wmul@multiplier+1,w
  8361  0C06  1D03               	btfss	3,2
  8362  0C07  2C09               	goto	u336_21
  8363  0C08  2C0A               	goto	u336_20
  8364  0C09                     u336_21:	
  8365  0C09  2BF2               	goto	i1l3432
  8366  0C0A                     u336_20:	
  8367  0C0A                     i1l3440:	
  8368  0C0A  0875               	movf	___wmul@product+1,w
  8369  0C0B  00F1               	movwf	?___wmul+1
  8370  0C0C  0874               	movf	___wmul@product,w
  8371  0C0D  00F0               	movwf	?___wmul
  8372  0C0E                     i1l705:	
  8373  0C0E  0008               	return
  8374  0C0F                     __end_of___wmul:	
  8375                           
  8376                           	psect	text21
  8377  0E13                     __ptext21:	
  8378 ;; *************** function _Read_Mode_Input *****************
  8379 ;; Defined at:
  8380 ;;		line 833 in file "main.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;Total ram usage:        1 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_isr
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function _Read_Mode_Input
  8409  0E13                     _Read_Mode_Input:	
  8410  0E13                     i1l2412:	
  8411                           ;incstack = 0
  8412                           ; Regs used in _Read_Mode_Input: [wreg+status,2+status,0]
  8413                           
  8414                           
  8415                           ;main.c: 835: static unsigned char inputSync = 0;;main.c: 836: if ((PORTCbits.RC5))
  8416  0E13  0020               	movlb	0	; select bank0
  8417  0E14  1E8E               	btfss	14,5	;volatile
  8418  0E15  2E17               	goto	u159_21
  8419  0E16  2E18               	goto	u159_20
  8420  0E17                     u159_21:	
  8421  0E17  2E29               	goto	i1l2422
  8422  0E18                     u159_20:	
  8423  0E18                     i1l2414:	
  8424                           
  8425                           ;main.c: 837: { GLOBAL_MODE1_LOW_counter = 0;
  8426  0E18  01C3               	clrf	_GLOBAL_MODE1_LOW_counter	;volatile
  8427  0E19                     i1l2416:	
  8428                           
  8429                           ;main.c: 838: if (GLOBAL_MODE1_counter < 4) GLOBAL_MODE1_counter++;
  8430  0E19  3004               	movlw	4
  8431  0E1A  0247               	subwf	_GLOBAL_MODE1_counter,w	;volatile
  8432  0E1B  1803               	skipnc
  8433  0E1C  2E1E               	goto	u160_21
  8434  0E1D  2E1F               	goto	u160_20
  8435  0E1E                     u160_21:	
  8436  0E1E  2E24               	goto	i1l2420
  8437  0E1F                     u160_20:	
  8438  0E1F                     i1l2418:	
  8439  0E1F  3001               	movlw	1
  8440  0E20  00F0               	movwf	??_Read_Mode_Input
  8441  0E21  0870               	movf	??_Read_Mode_Input,w
  8442  0E22  07C7               	addwf	_GLOBAL_MODE1_counter,f	;volatile
  8443  0E23  2E36               	goto	i1l2430
  8444  0E24                     i1l2420:	
  8445                           
  8446                           ;main.c: 839: else bGLOBAL_MODE1_PRESSED = 1;
  8447  0E24  3001               	movlw	1
  8448  0E25  00F0               	movwf	??_Read_Mode_Input
  8449  0E26  0870               	movf	??_Read_Mode_Input,w
  8450  0E27  00B9               	movwf	_bGLOBAL_MODE1_PRESSED	;volatile
  8451  0E28  2E36               	goto	i1l2430
  8452  0E29                     i1l2422:	
  8453                           
  8454                           ;main.c: 841: GLOBAL_MODE1_counter = 0;
  8455  0E29  01C7               	clrf	_GLOBAL_MODE1_counter	;volatile
  8456  0E2A                     i1l2424:	
  8457                           
  8458                           ;main.c: 842: if (GLOBAL_MODE1_LOW_counter < 4) GLOBAL_MODE1_LOW_counter++;
  8459  0E2A  3004               	movlw	4
  8460  0E2B  0243               	subwf	_GLOBAL_MODE1_LOW_counter,w	;volatile
  8461  0E2C  1803               	skipnc
  8462  0E2D  2E2F               	goto	u161_21
  8463  0E2E  2E30               	goto	u161_20
  8464  0E2F                     u161_21:	
  8465  0E2F  2E35               	goto	i1l2428
  8466  0E30                     u161_20:	
  8467  0E30                     i1l2426:	
  8468  0E30  3001               	movlw	1
  8469  0E31  00F0               	movwf	??_Read_Mode_Input
  8470  0E32  0870               	movf	??_Read_Mode_Input,w
  8471  0E33  07C3               	addwf	_GLOBAL_MODE1_LOW_counter,f	;volatile
  8472  0E34  2E36               	goto	i1l2430
  8473  0E35                     i1l2428:	
  8474                           
  8475                           ;main.c: 843: else bGLOBAL_MODE1_PRESSED = 0;
  8476  0E35  01B9               	clrf	_bGLOBAL_MODE1_PRESSED	;volatile
  8477  0E36                     i1l2430:	
  8478                           
  8479                           ;main.c: 844: };main.c: 845: if ((PORTCbits.RC4))
  8480  0E36  1E0E               	btfss	14,4	;volatile
  8481  0E37  2E39               	goto	u162_21
  8482  0E38  2E3A               	goto	u162_20
  8483  0E39                     u162_21:	
  8484  0E39  2E4B               	goto	i1l2440
  8485  0E3A                     u162_20:	
  8486  0E3A                     i1l2432:	
  8487                           
  8488                           ;main.c: 846: { GLOBAL_MODE2_LOW_counter = 0;
  8489  0E3A  01C1               	clrf	_GLOBAL_MODE2_LOW_counter	;volatile
  8490  0E3B                     i1l2434:	
  8491                           
  8492                           ;main.c: 847: if (GLOBAL_MODE2_counter < 4) GLOBAL_MODE2_counter++;
  8493  0E3B  3004               	movlw	4
  8494  0E3C  0245               	subwf	_GLOBAL_MODE2_counter,w	;volatile
  8495  0E3D  1803               	skipnc
  8496  0E3E  2E40               	goto	u163_21
  8497  0E3F  2E41               	goto	u163_20
  8498  0E40                     u163_21:	
  8499  0E40  2E46               	goto	i1l2438
  8500  0E41                     u163_20:	
  8501  0E41                     i1l2436:	
  8502  0E41  3001               	movlw	1
  8503  0E42  00F0               	movwf	??_Read_Mode_Input
  8504  0E43  0870               	movf	??_Read_Mode_Input,w
  8505  0E44  07C5               	addwf	_GLOBAL_MODE2_counter,f	;volatile
  8506  0E45  2E58               	goto	i1l2448
  8507  0E46                     i1l2438:	
  8508                           
  8509                           ;main.c: 848: else bGLOBAL_MODE2_PRESSED = 1;
  8510  0E46  3001               	movlw	1
  8511  0E47  00F0               	movwf	??_Read_Mode_Input
  8512  0E48  0870               	movf	??_Read_Mode_Input,w
  8513  0E49  00B8               	movwf	_bGLOBAL_MODE2_PRESSED	;volatile
  8514  0E4A  2E58               	goto	i1l2448
  8515  0E4B                     i1l2440:	
  8516                           
  8517                           ;main.c: 850: GLOBAL_MODE2_counter = 0;
  8518  0E4B  01C5               	clrf	_GLOBAL_MODE2_counter	;volatile
  8519  0E4C                     i1l2442:	
  8520                           
  8521                           ;main.c: 851: if (GLOBAL_MODE2_LOW_counter < 4) GLOBAL_MODE2_LOW_counter++;
  8522  0E4C  3004               	movlw	4
  8523  0E4D  0241               	subwf	_GLOBAL_MODE2_LOW_counter,w	;volatile
  8524  0E4E  1803               	skipnc
  8525  0E4F  2E51               	goto	u164_21
  8526  0E50  2E52               	goto	u164_20
  8527  0E51                     u164_21:	
  8528  0E51  2E57               	goto	i1l2446
  8529  0E52                     u164_20:	
  8530  0E52                     i1l2444:	
  8531  0E52  3001               	movlw	1
  8532  0E53  00F0               	movwf	??_Read_Mode_Input
  8533  0E54  0870               	movf	??_Read_Mode_Input,w
  8534  0E55  07C1               	addwf	_GLOBAL_MODE2_LOW_counter,f	;volatile
  8535  0E56  2E58               	goto	i1l2448
  8536  0E57                     i1l2446:	
  8537                           
  8538                           ;main.c: 852: else bGLOBAL_MODE2_PRESSED = 0;
  8539  0E57  01B8               	clrf	_bGLOBAL_MODE2_PRESSED	;volatile
  8540  0E58                     i1l2448:	
  8541                           
  8542                           ;main.c: 853: };main.c: 854: if ((PORTCbits.RC3))
  8543  0E58  1D8E               	btfss	14,3	;volatile
  8544  0E59  2E5B               	goto	u165_21
  8545  0E5A  2E5C               	goto	u165_20
  8546  0E5B                     u165_21:	
  8547  0E5B  2E6D               	goto	i1l2458
  8548  0E5C                     u165_20:	
  8549  0E5C                     i1l2450:	
  8550                           
  8551                           ;main.c: 855: { COLOR_DETECT_LOW_counter = 0;
  8552  0E5C  01C0               	clrf	_COLOR_DETECT_LOW_counter	;volatile
  8553  0E5D                     i1l2452:	
  8554                           
  8555                           ;main.c: 856: if (COLOR_DETECT_counter < 4) COLOR_DETECT_counter++;
  8556  0E5D  3004               	movlw	4
  8557  0E5E  0244               	subwf	_COLOR_DETECT_counter,w	;volatile
  8558  0E5F  1803               	skipnc
  8559  0E60  2E62               	goto	u166_21
  8560  0E61  2E63               	goto	u166_20
  8561  0E62                     u166_21:	
  8562  0E62  2E68               	goto	i1l2456
  8563  0E63                     u166_20:	
  8564  0E63                     i1l2454:	
  8565  0E63  3001               	movlw	1
  8566  0E64  00F0               	movwf	??_Read_Mode_Input
  8567  0E65  0870               	movf	??_Read_Mode_Input,w
  8568  0E66  07C4               	addwf	_COLOR_DETECT_counter,f	;volatile
  8569  0E67  2E7B               	goto	i1l2466
  8570  0E68                     i1l2456:	
  8571                           
  8572                           ;main.c: 857: else;main.c: 858: {;main.c: 859: bCOLOR_DETECT_PRESSED = 1;
  8573  0E68  3001               	movlw	1
  8574  0E69  00F0               	movwf	??_Read_Mode_Input
  8575  0E6A  0870               	movf	??_Read_Mode_Input,w
  8576  0E6B  00B7               	movwf	_bCOLOR_DETECT_PRESSED	;volatile
  8577  0E6C  2E7B               	goto	i1l2466
  8578  0E6D                     i1l2458:	
  8579                           
  8580                           ;main.c: 862: COLOR_DETECT_counter = 0;
  8581  0E6D  01C4               	clrf	_COLOR_DETECT_counter	;volatile
  8582  0E6E                     i1l2460:	
  8583                           
  8584                           ;main.c: 863: if (COLOR_DETECT_LOW_counter < 4) COLOR_DETECT_LOW_counter++;
  8585  0E6E  3004               	movlw	4
  8586  0E6F  0240               	subwf	_COLOR_DETECT_LOW_counter,w	;volatile
  8587  0E70  1803               	skipnc
  8588  0E71  2E73               	goto	u167_21
  8589  0E72  2E74               	goto	u167_20
  8590  0E73                     u167_21:	
  8591  0E73  2E79               	goto	i1l2464
  8592  0E74                     u167_20:	
  8593  0E74                     i1l2462:	
  8594  0E74  3001               	movlw	1
  8595  0E75  00F0               	movwf	??_Read_Mode_Input
  8596  0E76  0870               	movf	??_Read_Mode_Input,w
  8597  0E77  07C0               	addwf	_COLOR_DETECT_LOW_counter,f	;volatile
  8598  0E78  2E7B               	goto	i1l2466
  8599  0E79                     i1l2464:	
  8600                           
  8601                           ;main.c: 864: else{;main.c: 865: GLOCAL_Program_Color = 0;
  8602  0E79  01B0               	clrf	_GLOCAL_Program_Color	;volatile
  8603                           
  8604                           ;main.c: 866: bCOLOR_DETECT_PRESSED = 0;
  8605  0E7A  01B7               	clrf	_bCOLOR_DETECT_PRESSED	;volatile
  8606  0E7B                     i1l2466:	
  8607                           
  8608                           ;main.c: 867: };main.c: 868: };main.c: 869: if (!(PORTAbits.RA5))
  8609  0E7B  1A8C               	btfsc	12,5	;volatile
  8610  0E7C  2E7E               	goto	u168_21
  8611  0E7D  2E7F               	goto	u168_20
  8612  0E7E                     u168_21:	
  8613  0E7E  2E8B               	goto	i1l2474
  8614  0E7F                     u168_20:	
  8615  0E7F                     i1l2468:	
  8616                           
  8617                           ;main.c: 870: { GLOBAL_SYNC_Line_LOW_counter = 0;
  8618  0E7F  01C2               	clrf	_GLOBAL_SYNC_Line_LOW_counter	;volatile
  8619  0E80                     i1l2470:	
  8620                           
  8621                           ;main.c: 871: if (GLOBAL_SYNC_Line_counter < 9+0) GLOBAL_SYNC_Line_counter++;
  8622  0E80  3009               	movlw	9
  8623  0E81  0246               	subwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  8624  0E82  1803               	skipnc
  8625  0E83  2E85               	goto	u169_21
  8626  0E84  2E86               	goto	u169_20
  8627  0E85                     u169_21:	
  8628  0E85  2E98               	goto	i1l439
  8629  0E86                     u169_20:	
  8630  0E86                     i1l2472:	
  8631  0E86  3001               	movlw	1
  8632  0E87  00F0               	movwf	??_Read_Mode_Input
  8633  0E88  0870               	movf	??_Read_Mode_Input,w
  8634  0E89  07C6               	addwf	_GLOBAL_SYNC_Line_counter,f	;volatile
  8635  0E8A  2E98               	goto	i1l439
  8636  0E8B                     i1l2474:	
  8637                           
  8638                           ;main.c: 874: GLOBAL_SYNC_Line_counter = 0;
  8639  0E8B  01C6               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  8640  0E8C                     i1l2476:	
  8641                           
  8642                           ;main.c: 875: if (GLOBAL_SYNC_Line_LOW_counter < 7) GLOBAL_SYNC_Line_LOW_counter++;
  8643  0E8C  3007               	movlw	7
  8644  0E8D  0242               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  8645  0E8E  1803               	skipnc
  8646  0E8F  2E91               	goto	u170_21
  8647  0E90  2E92               	goto	u170_20
  8648  0E91                     u170_21:	
  8649  0E91  2E97               	goto	i1l2480
  8650  0E92                     u170_20:	
  8651  0E92                     i1l2478:	
  8652  0E92  3001               	movlw	1
  8653  0E93  00F0               	movwf	??_Read_Mode_Input
  8654  0E94  0870               	movf	??_Read_Mode_Input,w
  8655  0E95  07C2               	addwf	_GLOBAL_SYNC_Line_LOW_counter,f	;volatile
  8656  0E96  2E98               	goto	i1l439
  8657  0E97                     i1l2480:	
  8658                           
  8659                           ;main.c: 876: else bGLOBAL_SYNC_Line_PRESSED = 0;
  8660  0E97  01B5               	clrf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  8661  0E98                     i1l439:	
  8662  0E98  0008               	return
  8663  0E99                     __end_of_Read_Mode_Input:	
  8664  007E                     btemp	set	126	;btemp
  8665  007E                     int$flags	set	126
  8666  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    728
    Data        17
    BSS         89
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      8      73
    BANK1            80     17      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 3
		 -> EEprom_ColorState(EEDATA[3]), EEprom_InPhase(EEDATA[3]), EEprom_mode(EEDATA[3]), EEprom_Written_Flag(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 3
		 -> EEprom_ColorState(EEDATA[3]), EEprom_InPhase(EEDATA[3]), EEprom_mode(EEDATA[3]), EEprom_Written_Flag(EEDATA[1]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 3
		 -> EEprom_ColorState(EEDATA[3]), EEprom_InPhase(EEDATA[3]), EEprom_mode(EEDATA[3]), EEprom_Written_Flag(EEDATA[1]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __otoee@data(COMMON[4]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK1[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __otoee@data(COMMON[4]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK1[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 3
		 -> EEprom_ColorState(EEDATA[3]), EEprom_InPhase(EEDATA[3]), EEprom_mode(EEDATA[3]), EEprom_Written_Flag(EEDATA[1]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetoo@data(COMMON[4]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK1[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetoo@data(COMMON[4]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK1[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul
    i1_SetOUTPUT->i1_GPIO

Critical Paths under _main in BANK0

    _main->_Update_ComboPattern_Index
    _SetOUTPUT->_GPIO
    _Initial_Start->_Update_ComboPattern_Index
    ___eetoc->___eecpymem
    _Update_Input_Mode_Type->_Update_ComboPattern_Index
    _Increment_Color_State->_GPIO
    _Increment_Color_State->_Update_ComboPattern_Index
    _INC_EEPROM_MODE->_Update_ComboPattern_Index
    ___ctoee->___memcpyee

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Initial_Start
    _Initial_Start->_WriteEEPROMDefaults
    _WriteEEPROMDefaults->_ReWriteEEPROM
    ___eetoc->___eecpymem
    _Increment_Color_State->_ReWriteEEPROM
    _INC_EEPROM_MODE->_ReWriteEEPROM
    _ReWriteEEPROM->___ctoee
    ___ctoee->___memcpyee

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9841
                                             14 BANK1      3     3      0
                _ConfigureOscillator
                    _INC_EEPROM_MODE
              _Increment_Color_State
                            _InitApp
                      _Initial_Start
                      _ReWriteEEPROM
                          _SetOUTPUT
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
 ---------------------------------------------------------------------------------
 (1) _SetOUTPUT                                            1     1      0     155
                                              0 BANK1      1     1      0
                               _GPIO
 ---------------------------------------------------------------------------------
 (1) _Initial_Start                                        4     4      0    4474
                                             10 BANK1      4     4      0
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
                _WriteEEPROMDefaults
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROMDefaults                                  1     1      0    2800
                                              9 BANK1      1     1      0
                      _ReWriteEEPROM
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              3     3      0    1169
                                              4 BANK1      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           5     3      2    1010
                                              7 BANK0      1     1      0
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Update_Input_Mode_Type                               1     1      0       0
                                              0 BANK1      1     1      0
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Increment_Color_State                                1     1      0    1786
                                              9 BANK1      1     1      0
                               _GPIO
                      _ReWriteEEPROM
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (2) _GPIO                                                 1     1      0     155
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _INC_EEPROM_MODE                                      3     3      0    1727
                                              9 BANK1      2     2      0
                      _ReWriteEEPROM
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (2) _Update_ComboPattern_Index                            1     1      0       0
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReWriteEEPROM                                        2     2      0    1631
                                              7 BANK1      2     2      0
                            ___ctoee
 ---------------------------------------------------------------------------------
 (2) ___ctoee                                              3     2      1    1377
                                              4 BANK1      3     2      1
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (3) ___memcpyee                                           5     3      2    1010
                                              7 BANK0      1     1      0
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  8     8      0     221
                                              6 COMMON     1     1      0
                                              0 BANK0      7     7      0
                    _Read_Mode_Input
                             ___wmul
                      _setColorState
                        i1_SetOUTPUT
 ---------------------------------------------------------------------------------
 (7) i1_SetOUTPUT                                          1     1      0     110
                                              1 COMMON     1     1      0
                             i1_GPIO
 ---------------------------------------------------------------------------------
 (8) i1_GPIO                                               1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _setColorState                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4      40
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) _Read_Mode_Input                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _INC_EEPROM_MODE
     _ReWriteEEPROM
       ___ctoee
         ___memcpyee
     _Update_ComboPattern_Index
   _Increment_Color_State
     _GPIO
     _ReWriteEEPROM
       ___ctoee
         ___memcpyee
     _Update_ComboPattern_Index
   _InitApp
   _Initial_Start
     _Update_ComboPattern_Index
     _Update_Input_Mode_Type
       _Update_ComboPattern_Index
     _WriteEEPROMDefaults
       _ReWriteEEPROM
         ___ctoee
           ___memcpyee
       ___eetoc
         ___eecpymem
     ___eetoc
       ___eecpymem
   _ReWriteEEPROM
     ___ctoee
       ___memcpyee
   _SetOUTPUT
     _GPIO
   _Update_ComboPattern_Index
   _Update_Input_Mode_Type
     _Update_ComboPattern_Index

 _isr (ROOT)
   _Read_Mode_Input
   ___wmul
   _setColorState
   i1_SetOUTPUT
     i1_GPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       A       0        3.9%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      2B       7       53.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      80      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      80      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 13:33:08 2020

                        __CFG_CP$ON 0000                    _ROM_Sub_Patterns 1000  
            _Update_Input_Mode_Type 0CA5                         __CFG_CPD$ON 0000  
               ___wmul@multiplicand 0072              Initial_Start@read_data 00AC  
                               l301 0C32                                 l250 0C67  
                               l411 072B                                 l252 0C6E  
                               l254 0C75                                 l271 0778  
                               l512 0BC5                                 l256 0C7C  
                               l248 0C60                                 l258 0C7D  
                               l266 07BE                                 l611 0BD2  
                               l443 07F7                                 l452 0CBD  
                               l445 07EF                                 l446 07FD  
                               l454 0CD8                                 l470 0FD2  
                               l286 07BE                                 l383 0D55  
                               l551 0C57                                 l471 0FDA  
                               l463 0FA8                                 l472 0FE2  
                               l473 0FFF                                 l570 0CE1  
                               l298 0C31                                 l482 047C  
                               l395 0E12                                 l299 0C31  
                               l467 0FC7                                 l572 0CE6  
                               l581 0D63                                 l469 0FCA  
                               l590 0D97                                 l574 0CEE  
                               l584 0D6D                                 l576 0D0D  
                               l593 0DA6                                 l489 04C8  
                               l587 0D8C                                 l579 0D5E  
                               l588 0D93                                 l596 0BEF  
                               _GIE 005F                                 _PR2 001E  
                      ___ctoee@addr 00A6                        ___ctoee@data 00A4  
                               _isr 0004                                 wreg 0009  
    _GLOBAL_sub_patterns_index_copy 005A                                l3100 07EB  
                              l3030 0D72                                l3022 0D58  
                              l3102 07FB                                l3040 0D8B  
                              l3032 0D79                                l3024 0D64  
                              l3104 07FC                                l3120 0C68  
                              l3112 0C5A                                l3200 079B  
                              l3042 0D8E                                l3034 0D7F  
                              l3026 0D69                                l3130 0C7A  
                              l3122 0C6C                                l3114 0C5E  
                              l3050 0CDB                                l3106 0BE3  
                              l3210 07B4                                l3202 07A0  
                              l3044 0D92                                l3036 0D85  
                              l3028 0D6B                                l3220 0DBF  
                              l3124 0C6F                                l3116 0C61  
                              l3300 06D7                                l3060 0D05  
                              l3052 0CE7                                l3108 0BED  
                              l3140 0C25                                l3132 0C0F  
                              l3204 07A5                                l3212 07B9  
                              l3046 0D9D                                l3038 0D87  
                              l3062 0BC8                                l3230 0DE8  
                              l3222 0DCA                                l3214 0DA7  
                              l3126 0C73                                l3118 0C65  
                              l3310 06E7                                l3302 06D8  
                              l3150 0CB2                                l3054 0CF0  
                              l3142 0C28                                l3134 0C13  
                              l3206 07AA                                l3048 0D9E  
                              l3080 0D4D                                l3240 0E0C  
                              l3232 0DEE                                l3224 0DD0  
                              l3216 0DB1                                l3128 0C76  
                              l3320 070D                                l3312 06F0  
                              l3304 06D9                                l3400 0C3F  
                              l3160 0CD2                                l3152 0CB7  
                              l3144 0CA5                                l3056 0CFA  
                              l3136 0C19                                l3208 07AF  
                              l3074 0D19                                l3066 0D0E  
                              l3090 07D3                                l3082 07BF  
                              l3242 0E0F                                l3234 0DF4  
                              l3226 0DD6                                l3218 0DB8  
                              l3322 0717                                l3314 06FF  
                              l3306 06DF                                l3250 0653  
                              l3410 0C47                                l3402 0C42  
                              l3154 0CC3                                l3146 0CA7  
                              l3058 0CFF                                l3138 0C1F  
                              l3170 0742                                l3162 072C  
                              l3076 0D42                                l3068 0D17  
                              l3092 07D4                                l3084 07C8  
                              l3236 0DFB                                l3228 0DDD  
                              l3324 071C                                l3308 06E3  
                              l3316 0701                                l3260 0670  
                              l3252 065B                                l3244 0636  
                              l3420 0C50                                l3412 0C49  
                              l3404 0C44                                l3156 0CC6  
                              l3148 0CAC                                l3332 0F22  
                              l3180 0762                                l3172 0747  
                              l3164 0733                                l3078 0D47  
                              l3094 07D9                                l3086 07CC  
                              l3238 0E06                                l3318 0707  
                              l3326 0720                                l3262 0679  
                              l3254 0661                                l3246 063C  
                              l3270 0696                                l3422 0C51  
                              l3414 0C4D                                l3406 0C45  
                              l3158 0CC8                                l3350 0F56  
                              l3334 0F2A                                l3190 0783  
                              l3182 076A                                l3174 074F  
                              l3166 0738                                l3096 07DF  
                              l3088 07CD                                l3280 06B6  
                              l3272 069C                                l3264 0688  
                              l3256 0667                                l3248 0645  
                              l3424 0C53                                l3416 0C4E  
                              l3408 0C46                                l3360 0F87  
                              l3352 0F63                                l3344 0F3A  
                              l3336 0F35                                l3192 0789  
                              l3184 0770                                l3176 0754  
                              l3168 073D                                l3098 07E5  
                              l3290 06CD                                l3282 06BE  
                              l3274 06A1                                l3266 068B  
                              l3258 066C                                l3426 0C55  
                              l3418 0C4F                                l3370 0FA2  
                              l3362 0F91                                l3354 0F6C  
                              l3346 0F47                                l3338 0F38  
                              l3194 078E                                l3178 075C  
                              l3186 0778                                l3610 044C  
                              l3602 0443                                l3292 06CE  
                              l3284 06C1                                l3276 06A7  
                              l3268 0694                                l3428 0C56  
                              l3372 0FA6                                l3364 0F96  
                              l3356 0F75                                l3348 0F51  
                              l3196 0792                                l3188 077D  
                              l3700 0525                                l3620 0461  
                              l3612 044E                                l3604 0443  
                              l3294 06D3                                l3286 06CA  
                              l3278 06AB                                l3382 0FC8  
                              l3374 0FAC                                l3366 0F9A  
                              l3358 0F7A                                l3198 0799  
                              l3710 0539                                l3702 0527  
                              l3630 0476                                l3622 0466  
                              l3614 0453                                l3606 0446  
                              l3296 06D5                                l3288 06CC  
                              l3384 0FCB                                l3392 0FE7  
                              l3376 0FB2                                l3368 0FA0  
                              l3712 053A                                l3704 052D  
                              l3640 0499                                l3632 047B  
                              l3624 046C                                l3616 0454  
                              l3608 0449                                l3298 06D6  
                              l3386 0FD3                                l3378 0FBC  
                              l3394 0FF9                                l3714 053B  
                              l3706 052E                                l3650 04B9  
                              l3642 049A                                l3634 0480  
                              l3626 046D                                l3618 045A  
                              l3396 0BBA                                l3388 0FDB  
                              l3708 0533                                l3660 04D2  
                              l3652 04BC                                l3644 04A6  
                              l3636 0486                                l3628 0470  
                              l3398 0C33                                l3670 04E9  
                              l3662 04D8                                l3646 04B1  
                              l3638 0493                                l3654 04BF  
                              l3680 0501                                l3664 04DE  
                              l3656 04C6                                l3648 04B6  
                              l3672 04EA                                l3690 0514  
                              l3682 0507                                l3674 04F1  
                              l3666 04E1                                l3658 04CC  
                              l3692 0515                                l3684 0508  
                              l3676 04F7                                l3668 04E3  
                              l3694 051B                                l3678 04FC  
                              l3686 0509                                l3688 050E  
                              l3696 051C                                l3698 0521  
                              ?_isr 0070                        __CFG_WDTE$ON 0000  
                              u3000 0770                                u3001 076F  
                              u3010 077D                                u3011 077C  
                              u3100 0DDD                                u3020 0789  
                              u3101 0DDC                                u3021 0788  
                              _LATA 010C                                u3110 0DF4  
                              u3030 0799                                u3111 0DF3  
                              u3031 0798                                _LATC 010E  
                              u3120 0DFB                                u3200 070D  
                              u3040 07A5                                u3121 0DFA  
                              u3201 070C                                u3041 07A4  
                              u3210 0717                                u3130 063C  
                              u3050 07AA                                u3211 0716  
                              u3131 063B                                u3051 07A9  
                              u3220 072A                                u3140 0653  
                              u3300 0FAC                                u3060 07AF  
                              u3221 0729                                u3141 0652  
                              u3301 0FAB                                u3061 07AE  
                              u3070 0DB8                                u3150 0688  
                              u3310 0FBC                                u3230 0F35  
                              u3071 0DB7                                u3151 0687  
                              u3311 0FBB                                u3231 0F34  
                              u3080 0DBF                                u3160 069C  
                              u3320 0FC6                                u3240 0F51  
                              u3081 0DBE                                u3161 069B  
                              u3321 0FC5                                u3241 0F50  
                              _GPIO 0C58                                u3090 0DD6  
                              u3170 06A1                                u3250 0F6C  
                              u3091 0DD5                                u3171 06A0  
                              u3251 0F6B                                u3180 06FF  
                              u3260 0F75                                u3181 06FE  
                              u3261 0F74                                u2710 0D63  
                              u3190 0707                                u3270 0F91  
                              u2711 0D62                                u3191 0706  
                              u3271 0F90                                u2720 0D72  
                              u2800 07D3                                u3280 0FA0  
                              u2721 0D71                                u2801 07D2  
                              u3281 0F9F                                u2730 0D8B  
                              u2810 07DF                                u3290 0FA6  
                              u2731 0D8A                                u2811 07DE  
                              u3291 0FA5                                u2740 0D97  
                              u2820 07E5                                u2900 0CAC  
                              u2741 0D96                                u2821 07E4  
                              u2901 0CAB                                u2750 0D9D  
                              u2830 07EB                                u2910 0CB7  
                              u2751 0D9C                                u2831 07EA  
                              u2911 0CB6                                u2760 0DA6  
                              u2840 0C5E                                u2920 0CC3  
                              u3800 0493                                u2761 0DA5  
                              u2841 0C5D                                u2921 0CC2  
                              u3801 0492                                u2850 0C65  
                              u2770 0CE6                                u2930 0733  
                              u3810 04A0                                u3730 0453  
                              u2851 0C64                                u2771 0CE5  
                              u2931 0732                                u3811 049E  
                              u3731 0452                                _PEIE 005E  
                              u2860 0C6C                                u2780 0D0D  
                              u2940 0738                                u3900 0501  
                              u3820 04A1                                u3740 0461  
                              u2861 0C6B                                u2781 0D0C  
                              u2941 0737                                u3901 0500  
                              u3741 0460                                u2790 0D4D  
                              u2870 0C73                                u2950 073D  
                              u3910 050E                                u3830 04C6  
                              u3750 0466                                u2791 0D4C  
                              u2871 0C72                                u2951 073C  
                              u3911 050D                                u3831 04C5  
                              u3751 0465                                u2880 0C7A  
                              u2960 0742                                u3920 0514  
                              u3840 04CC                                u3760 0476  
                              u2881 0C79                                u2961 0741  
                              u3921 0513                                u3841 04CB  
                              u3761 0475                                u2890 0C31  
                              u2970 0747                                u3930 0521  
                              u3850 04D2                                u3770 047B  
                              u2891 0C30                                u2971 0746  
                              u3931 0520                                u3851 04D1  
                              u3771 047A                                u2980 0754  
                              u3940 0525                                u3860 04D8  
                              u3780 0480                                u2981 0753  
                              u3941 0524                                u3861 04D7  
                              u3781 047F                                u2990 0762  
                              u3950 052D                                u3870 04F1  
                              u3790 0486                                u2991 0761  
                              u3951 052C                                u3871 04F0  
                              u3791 0485                                u3960 0533  
                              u3880 04F7                                u3961 0532  
                              u3881 04F6                                u3890 04FC  
                              u3891 04FB                                i1l76 0173  
                              i1l93 01BB                                i1l98 01FF  
                 _EEprom_ColorState 0000              __size_of_ReWriteEEPROM 0048  
                     __CFG_FCMEN$ON 0000            __size_of_Read_Mode_Input 0086  
                              _main 0443                     isr@tenMSCounter 004E  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                       __CFG_BOREN$ON 0000  
            __size_of_Initial_Start 00DE               __end_of_setColorState 0636  
                              start 0226         _GLOBAL_Selected_Mode_Number 004A  
                   __end_of_InitApp 0C58                               ??_isr 005E  
                             ?_GPIO 0070                               GPIO@i 0065  
            ?_Increment_Color_State 0070    _GLOBAL_sub_patterns_column_index 007B  
                             ?_main 0070                     __end_of___eetoc 0BF0  
                   __end_of___ctoee 0BD3                               _T2CON 001F  
                             i1l101 0224                               i1l250 0C8E  
                             i1l252 0C95                               i1l254 0C9C  
                             i1l271 0EDD                               i1l256 0CA3  
                             i1l248 0C86                               i1l258 0CA4  
                             i1l266 0F21                               i1l286 0F21  
                             i1l439 0E98                               i1l703 0BFA  
                             i1l705 0C0E                               i1l378 0635  
  _GLOBAL_combo_patterns_index_copy 0059                               _PORTA 000C  
                             _PORTC 000E                               _TRISA 008C  
                             _TRISC 008E                 _ConfigureOscillator 0BBA  
           __end_of_INC_EEPROM_MODE 0E13        _GLOBAL_SYNC_Line_LOW_counter 0042  
                             _state 002D                        main@tempvar1 00B0  
          _GLOBAL_MODE1_LOW_counter 0043                       ___memcpyee@to 00A3  
                             status 0003                               wtemp0 007E  
              ?_ConfigureOscillator 0070                      ReWriteEEPROM@i 00A8  
                      __end_of_GPIO 0C7E                      __CFG_MCLRE$OFF 0000  
                   __initialization 0228                        __end_of_main 053F  
               SetOUTPUT@pwmCounter 002A                              ??_GPIO 0065  
       ??_Update_ComboPattern_Index 0065                       _ReWriteEEPROM 0D0E  
                    _startUpProgram 004F                              ??_main 00AE  
            SetOUTPUT@temporaryGPIO 002B                       _Initial_Start 0F22  
                    Initial_Start@i 00AD                              _ANSELA 018C  
                            _ANSELC 018E                              i1l2200 0C88  
                            i1l2210 0C9A                              i1l2202 0C8C  
                            i1l2212 0C9D                              i1l2204 0C8F  
                            i1l2302 0577                              i1l2214 0CA1  
                            i1l2206 0C93                              i1l2320 0589  
                            i1l2208 0C96                              u200_20 0EAF  
                            u200_21 0EAE                              i1l2330 059A  
                            i1l2322 0591                              i1l2314 0584  
                            i1l2410 0605                              i1l2420 0E24  
                            i1l2412 0E13                              i1l2340 05A2  
                            i1l2308 057C                              i1l2430 0E36  
                            i1l2414 0E18                              i1l2422 0E29  
                            i1l2406 05F7                              i1l2350 05B3  
                            i1l2342 05AA                              i1l2270 0541  
                            i1l2432 0E3A                              i1l2440 0E4B  
                            i1l2424 0E2A                              i1l2416 0E19  
                            i1l2280 0554                              i1l2272 0546  
                            u201_20 0EB4                              u201_21 0EB3  
                            i1l2450 0E5C                              i1l2442 0E4C  
                            i1l2434 0E3B                              i1l2426 0E30  
                            i1l2418 0E1F                              i1l2290 0569  
                            i1l2282 0559                              i1l2274 0548  
                            i1l2460 0E6E                              i1l2452 0E5D  
                            i1l2444 0E52                              i1l2436 0E41  
                            i1l2428 0E35                              i1l2364 05C4  
                            i1l2356 05BB                              i1l2292 056D  
                            i1l2284 055E                              i1l2276 054D  
                            i1l2268 053F                              i1l2196 0C7F  
                            i1l2700 0EA0                              i1l3500 00FD  
                            i1l2470 0E80                              i1l2462 0E74  
                            i1l2454 0E63                              i1l2446 0E57  
                            i1l2438 0E46                              i1l3430 0BF0  
                            i1l2390 05E3                              i1l2382 05DA  
                            i1l2286 0563                              i1l2278 0552  
                            i1l2198 0C83                              i1l2710 0EBA  
                            i1l2702 0EA5                              i1l3510 0133  
                            i1l3502 0103                              i1l2480 0E97  
                            i1l2472 0E86                              i1l2464 0E79  
                            i1l2456 0E68                              i1l2448 0E58  
                            i1l3440 0C0A                              i1l3432 0BF2  
                            i1l2296 056F                              i1l2288 0564  
                            u210_20 0F12                              i1l2720 0ED7  
                            i1l2712 0EBF                              u202_20 0EBF  
                            i1l2704 0EAA                              i1l3600 0220  
                            i1l3520 016C                              i1l3512 0138  
                            i1l3504 0108                              u210_21 0F11  
                            u202_21 0EBE                              i1l2474 0E8B  
                            i1l2466 0E7B                              i1l2458 0E6D  
                            i1l3434 0BF6                              i1l2378 05CF  
                            i1l2730 0EF1                              i1l2714 0EC5  
                            i1l2722 0EDD                              i1l2706 0EAF  
                            i1l3530 0182                              i1l3522 016E  
                            i1l3514 013E                              i1l3506 012C  
                            i1l3450 0012                              i1l2476 0E8C  
                            i1l2468 0E7F                              i1l3436 0BFF  
                            i1l2740 0F08                              i1l2732 0EF5  
                            i1l2724 0EE2                              i1l2716 0ECB  
                            i1l2708 0EB4                              i1l3540 019C  
                            i1l3532 0187                              i1l3524 0172  
                            i1l3516 0164                              i1l3508 0130  
                            i1l3460 0022                              i1l3452 0015  
                            i1l3444 0006                              i1l2478 0E92  
                            i1l3438 0C04                              i1l2398 05EE  
                            i1l2742 0F0D                              i1l2734 0EFC  
                            i1l2726 0EE6                              i1l2718 0ED1  
                            i1l3550 01B5                              i1l3542 01A0  
                            i1l3534 018C                              i1l3526 0179  
                            i1l3518 0169                              i1l3470 0038  
                            i1l3462 0028                              i1l3454 0017  
                            i1l3446 0008                              i1l2744 0F12  
                            i1l2728 0EEC                              i1l2736 0EFE  
                            u203_20 0ECB                              i1l3560 01D0  
                            i1l3552 01BA                              i1l3544 01A6  
                            i1l3536 0191                              i1l3528 017E  
                            i1l3472 005C                              i1l3464 002D  
                            i1l3480 00AE                              i1l3456 001B  
                            i1l3448 000D                              u203_21 0ECA  
                            i1l2746 0F17                              i1l2738 0F03  
                            i1l3570 01D8                              i1l3562 01D4  
                            i1l3554 01C1                              i1l3546 01AA  
                            i1l3538 0197                              i1l3490 00C5  
                            i1l3482 00B4                              i1l3474 0080  
                            i1l3466 0033                              i1l3458 0021  
                            i1l2748 0F1C                              i1l3580 01EA  
                            i1l3572 01D9                              i1l3564 01D5  
                            i1l3556 01C7                              i1l3548 01B0  
                            i1l3492 00C9                              i1l3484 00BA  
                            i1l3476 0084                              i1l3468 0034  
                            i1l3590 020B                              i1l3582 01EB  
                            i1l3566 01D6                              i1l3558 01CB  
                            i1l3574 01DA                              i1l3494 00CE  
                            i1l3486 00BC                              i1l3478 00A9  
                            u140_20 0C93                              u204_20 0ED7  
                            i1l3592 0210                              i1l3584 01FB  
                            i1l3576 01DE                              i1l3568 01D7  
                            i1l3496 00F3                              i1l3488 00C0  
                            u140_21 0C92                              u204_21 0ED6  
                            i1l2698 0E99                              i1l3594 0212  
                            i1l3586 0203                              i1l3578 01E4  
                            i1l3498 00F8                              i1l3596 0215  
                            i1l3588 0207                              i1l3598 021A  
                            u141_20 0C9A                              u205_20 0EE2  
                            u141_21 0C99                              u205_21 0EE1  
                            u142_20 0CA1                              u206_20 0EEC  
                            u142_21 0CA0                              u206_21 0EEB  
                            u207_20 0EFC                              u207_21 0EFB  
                            u160_20 0E1F                              u208_20 0F08  
                            u160_21 0E1E                              u208_21 0F07  
                            u161_20 0E30                              u209_20 0F0D  
                            u161_21 0E2F                              u209_21 0F0C  
                            u170_20 0E92                              u162_20 0E3A  
                            u138_20 0C83                              u170_21 0E91  
                            u162_21 0E39                              u138_21 0C82  
                            u163_20 0E41                              u139_20 0C8C  
                            u163_21 0E40                              u139_21 0C8B  
          _GLOBAL_MODE2_LOW_counter 0041                              u164_20 0E52  
                            u340_20 0028                              u164_21 0E51  
                            u340_21 0027                              u165_20 0E5C  
                            u333_20 0BF6                              u157_20 0546  
                            u341_20 002D                              u165_21 0E5B  
                            u333_21 0BF5                              u157_21 0545  
                            u341_21 002C                              u166_20 0E63  
                            u158_20 054D                              u350_20 013E  
                            u342_20 0033                              u166_21 0E62  
                            u158_21 054C                              u350_21 013D  
                            u342_21 0032                              u334_25 0BFB  
                            u167_20 0E74                              u159_20 0E18  
                            u351_20 0164                              u343_20 00A9  
                            u167_21 0E73                              u159_21 0E17  
                            u351_21 0163                              u343_21 00A8  
                            u335_25 0C00                              u168_20 0E7F  
                            u336_20 0C0A                              u360_20 01A6  
                            u352_20 0169                              u344_20 00B4  
                            u168_21 0E7E                              u336_21 0C09  
                            u360_21 01A5                              u352_21 0168  
                            u344_21 00B3                              u169_20 0E86  
                            u361_20 01B0                              u353_20 0179  
                            u345_20 00BA                              u337_20 000D  
                            u169_21 0E85                              u361_21 01AF  
                            u353_21 0178                              u345_21 00B9  
                            u337_21 000C                              u370_20 01FB  
                            u362_20 01B5                              u354_20 017E  
                            u346_20 00C5                              u338_20 0012  
                            u370_21 01FA                              u362_21 01B4  
                            u354_21 017D                              u346_21 00C4  
                            u338_21 0011                              u371_20 0210  
                            u363_20 01C1                              u355_20 0182  
                            u347_20 00CE                              u339_20 0021  
                            u371_21 020F                              u363_21 01C0  
                            u355_21 0181                              u347_21 00CD  
                            u339_21 0020                              i1_GPIO 0C7E  
                            u372_20 0220                              u364_20 01C7  
                            u356_20 0187                              u348_20 00FD  
                            u372_21 021F                              u364_21 01C6  
                            u356_21 0186                              u348_21 00FC  
                            u197_20 0EA0                              u365_20 01CB  
                            u357_20 018C                              u349_20 0130  
                            u197_21 0E9F                              u365_21 01CA  
                            u357_21 018B                              u349_21 012F  
                            u198_20 0EA5                              u366_20 01D0  
                            u358_20 019C                              u198_21 0EA4  
                            u366_21 01CF                              u358_21 019B  
                            u199_20 0EAA                              u367_20 01DE  
                            u359_20 01A0                              u199_21 0EA9  
                            u367_21 01DD                              u359_21 019F  
                            u368_20 01E4                              u368_21 01E3  
                            u369_20 01EA                              u369_21 01E9  
                            _TMR2IE 0489                              _TMR2IF 0089  
         _bGLOBAL_SYNC_Line_PRESSED 0035                   _bGLOBAL_STEADY_ON 005C  
                         ??_InitApp 0065               ??_ConfigureOscillator 0065  
                  _GLOBAL_Mode_copy 0023                      __CFG_PWRTE$OFF 0000  
                __size_of_SetOUTPUT 0093                 _currentColorCounter 0057  
       __end_of_WriteEEPROMDefaults 0C33                   ??_Read_Mode_Input 0070  
                            ___wmul 0BF0                           ??___eetoc 00A4  
                         ??___ctoee 00A5                      ?_ReWriteEEPROM 0070  
                 _bGLOBAL_SYNC_SENT 0053                      ?_Initial_Start 0070  
          _bGLOBAL_CHANGING_PATTERN 003D                        ?i1_SetOUTPUT 0070  
                  ?_INC_EEPROM_MODE 0070                      ___memcpyee@ptr 00A2  
          __end_of_ROM_Sub_Patterns 1077           _Update_ComboPattern_Index 07BF  
                        ___eecpymem 0CD9             __end_of__initialization 0255  
             _ROM_Sub_Patterns_Time 1077                      _EEprom_InPhase 0003  
                        ___memcpyee 0D56             ?_Update_Input_Mode_Type 0070  
                    __pcstackCOMMON 0070                        __pidataBANK0 0BAB  
                      __pidataBANK1 0BD3                   __end_of_SetOUTPUT 07BF  
          Read_Mode_Input@inputSync 0029                          __pbssBANK0 0020  
                        __pbssBANK1 00BF                             ?i1_GPIO 0070  
    __end_of_Update_Input_Mode_Type 0CD9    _bGLOBAL_CHANGING_PATTERN_Enforce 003C  
                        __pmaintext 0443                     ??_ReWriteEEPROM 00A7  
           ??_Increment_Color_State 00A9                             ?___wmul 0070  
                        __pintentry 0004                     ??_Initial_Start 00AA  
     _bGLOBAL_OUTPUT_BUFFER_CHANGED 005D                             i1GPIO@i 0070  
          _COLOR_DETECT_LOW_counter 0040                             _NVMADRH 0892  
                           _NVMADRL 0891                             _NVMDATH 0894  
                           _NVMDATL 0893                             _NVMCON2 0896  
     INC_EEPROM_MODE@Temp_Mode_Data 00AA           _GLOBAL_Selected_Mode_Type 0049  
             _bGLOBAL_MODE1_PRESSED 0039                          _colorState 0066  
             _bGLOBAL_MODE2_PRESSED 0038                         ?___eecpymem 00A0  
                   __size_ofi1_GPIO 0027                _COLOR_DETECT_counter 0044  
                           _InitApp 0C33                         ?___memcpyee 00A0  
                           ___eetoc 0BE1                             ___ctoee 0BC6  
                   __size_of___wmul 001F          _bGLOBAL_END_OF_CYCLE_COND1 0056  
        _bGLOBAL_END_OF_CYCLE_COND2 0055                             __ptext1 072C  
                           __ptext2 0F22                             __ptext3 0C0F  
                           __ptext4 0BE1                             __ptext5 0CD9  
                           __ptext6 0CA5                             __ptext7 0C33  
                           __ptext8 0636                             __ptext9 0C58  
                           _counter 00C7                           _T2CONbits 001F  
                      __size_of_isr 0222              __size_of_setColorState 00F7  
                           _pwmBool 0031                __size_ofi1_SetOUTPUT 0089  
                           clrloop0 0BAF                end_of_initialization 0255  
                   _Read_Mode_Input 0E13                 _bGLOBAL_ENABLE_LEDS 003A  
                           init_ram 0BB4                             initloop 0BB5  
__size_of_Update_ComboPattern_Index 003F                     ___memcpyee@from 00A0  
         _GLOBAL_sub_patterns_index 007A                     ___memcpyee@size 00A1  
         _GLOBAL_sub_patterns_timer 005B         _GLOBAL_combo_patterns_index 0058  
               __size_of___eecpymem 0035                           _PORTAbits 000C  
                         _PORTCbits 000E                _channelToBeDisplayed 0033  
                         _TRISAbits 008C                           _TRISCbits 008E  
               __size_of___memcpyee 0051                    __CFG_FEXTOSC$OFF 0000  
       __end_of_ConfigureOscillator 0BC6       _GLOBAL_combo_patterns_counter 004B  
                    __end_ofi1_GPIO 0CA5                       _setColorState 053F  
                   _CurrentColorMax 00B1                   _colorResetCounter 00BF  
                    __end_of___wmul 0C0F        __size_of_WriteEEPROMDefaults 0024  
               start_initialization 0228             __end_of_Read_Mode_Input 0E99  
                       __end_of_isr 0226                           _SetOUTPUT 072C  
                          ??i1_GPIO 0070            __size_of_INC_EEPROM_MODE 006C  
                    ?_setColorState 0070                          isr@counter 0026  
                          ??___wmul 0074      __size_of_Increment_Color_State 00F6  
                       __pdataBANK0 0066                         __pdataBANK1 00B1  
     __end_of_Increment_Color_State 072C          _bPrev_COLOR_DETECT_PRESSED 0036  
                       __pbssEEDATA 0000                         __pbssCOMMON 0077  
                         ___latbits 0002                       __pcstackBANK0 005E  
                     __pcstackBANK1 00A0                          ?_SetOUTPUT 0070  
                      ??___eecpymem 0065                        _currentColor 0034  
                          ?_InitApp 0070                        ??___memcpyee 0065  
                          ?___eetoc 0070                            ?___ctoee 00A4  
             __end_of_ReWriteEEPROM 0D56               __end_of_Initial_Start 1000  
                __end_of___eecpymem 0D0E                         _earlyOutput 002C  
        __end_of_ROM_COMBO_Patterns 0443          _bGiveControlToColorProgram 002F  
                  ?_Read_Mode_Input 0070   _bGLOBAL_DISABLE_SYNC_Line_PRESSED 003E  
                __end_of___memcpyee 0DA7                     ??_setColorState 0070  
                    ___wmul@product 0074                           clear_ram0 0BAE  
                 ??_INC_EEPROM_MODE 00A9                _GLOCAL_Program_Color 0030  
          _GLOBAL_SYNC_Line_counter 0046                   ___wmul@multiplier 0070  
    _GLOBAL_Selected_Mode_Type_copy 0048                       ??i1_SetOUTPUT 0071  
            _bGLOBAL_IS_PROGRAMMING 003B               _bCOLOR_DETECT_PRESSED 0037  
                       ??_SetOUTPUT 00A0            ??_Update_Input_Mode_Type 00A0  
                       _indexOfMode 002E                 _WriteEEPROMDefaults 0C0F  
         _GLOBAL_SYNC_PULSE_Counter 0077                    __size_of_InitApp 0025  
                         isr@toggle 004C                       isr@temp_data1 0076  
                  __size_of___eetoc 000F                     _bGLOBAL_InPhase 0054  
                  __size_of___ctoee 000D                ?_WriteEEPROMDefaults 0070  
                     isr@pwmCounter 004D                          _ANSELAbits 018C  
                          __ptext10 0DA7                            __ptext11 07BF  
                          __ptext20 0BF0                            __ptext12 0D0E  
                          __ptext21 0E13                            __ptext13 0BC6  
                          __ptext14 0D56                            __ptext15 0BBA  
                          __ptext17 0E99                            __ptext18 0C7E  
                          __ptext19 053F                 __end_ofi1_SetOUTPUT 0F22  
                     __size_of_GPIO 0026                         _OSCCON1bits 0919  
                          _counter2 00C3                       __size_of_main 00FC  
      __size_of_ConfigureOscillator 000C                            int$flags 007E  
        ?_Update_ComboPattern_Index 0070               ??_WriteEEPROMDefaults 00A9  
                   ___eecpymem@from 00A0                     ___eecpymem@size 00A1  
                        _INTCONbits 000B  _GLOBAL_combo_patterns_column_index 0078  
                       _NVMCON1bits 0895                       _OUTPUT_BUFFER 0079  
     __end_of_ROM_Sub_Patterns_Time 10EE                            intlevel1 0000  
                       _EEprom_mode 0006     __size_of_Update_Input_Mode_Type 0034  
               _EEprom_Written_Flag 0009                          _OSCFRQbits 091F  
      Update_Input_Mode_Type@toggle 0028   __end_of_Update_ComboPattern_Index 07FE  
                     __pstringtext1 0259                       __pstringtext2 1000  
                     __pstringtext3 1077               _GLOBAL_Dummy_Counter2 0050  
             _Increment_Color_State 0636                  _OUTPUT_BUFFER_COPY 0052  
                       i1_SetOUTPUT 0E99             _GLOBAL_CHANNELS_EN_DUAL 0032  
              _bGLOBAL_InPhase_copy 0020                       ___eecpymem@cp 00A2  
                     ___eecpymem@to 00A3                _GLOBAL_Dummy_Counter 0051  
           _GLOBAL_CHANNELS_EN_copy 003F                     _INC_EEPROM_MODE 0DA7  
                _ROM_COMBO_Patterns 0259                          _STATUSbits 0003  
              _GLOBAL_MODE1_counter 0047                        ___eetoc@addr 00A5  
                      ___eetoc@data 00A6                _GLOBAL_MODE2_counter 0045  
